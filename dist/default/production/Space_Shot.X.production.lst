

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Nov 26 16:40:40 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4585
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0l,global,class=CODE,delta=1
     6                           	psect	_RESULTADO_const,global,ovrld,reloc=2,class=CODE,delta=1
     7                           	psect	_DIFICULTAD_const,global,ovrld,reloc=2,class=CODE,delta=1
     8                           	psect	_INICIO_const,global,ovrld,reloc=2,class=CODE,delta=1
     9                           	psect	_NIVEL3_const,global,ovrld,reloc=2,class=CODE,delta=1
    10                           	psect	_NIVEL1_const,global,ovrld,reloc=2,class=CODE,delta=1
    11                           	psect	_NIVEL2_const,global,ovrld,reloc=2,class=CODE,delta=1
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAMhhhl,global,class=COMRAM,space=1,delta=1
    14                           	psect	bssCOMRAMl,global,class=COMRAM,space=1,delta=1
    15                           	psect	bssBANK0h,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0l,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAMhhhh,global,class=COMRAM,space=1,delta=1
    19                           	psect	cstackCOMRAMhhhl,global,class=COMRAM,space=1,delta=1
    20                           	psect	cstackCOMRAMhhl,global,class=COMRAM,space=1,delta=1
    21                           	psect	cstackCOMRAMhl,global,class=COMRAM,space=1,delta=1
    22                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	dabs	1,0x20,10,_myRAMarray
    76                           	dabs	1,0x30,10,_myRAMarray2
    77                           	dabs	1,0x40,7,_myRAMarray3
    78                           	dabs	1,0x50,7,_myRAMarray4
    79                           	dabs	1,0x60,9,_myRAMarray5
    80                           	dabs	1,0x70,15,_myRAMarray6
    81  0000                     
    82                           	psect	idataBANK0l
    83  001FC0                     __pidataBANK0l:
    84                           	opt stack 0
    85                           
    86                           ;initializer for _randx
    87  001FC0  0001               	dw	1
    88  001FC2  0000               	dw	0
    89  0000                     _RESULTADO_absconstaddr	set	112
    90  0000                     _DIFICULTAD_absconstaddr	set	48
    91  0000                     _INICIO_absconstaddr	set	32
    92  0000                     _NIVEL3_absconstaddr	set	96
    93  0000                     _NIVEL1_absconstaddr	set	64
    94  0000                     _NIVEL2_absconstaddr	set	80
    95  0000                     _RESULTADO_absconstaddr	set	112
    96                           
    97                           	psect	_RESULTADO_const
    98  000070                     __p_RESULTADO_const:
    99                           	opt stack 0
   100  000070                     _RESULTADO:
   101                           	opt stack 0
   102  000070  54                 	db	84
   103  000071  75                 	db	117
   104  000072  20                 	db	32
   105  000073  72                 	db	114
   106  000074  65                 	db	101
   107  000075  73                 	db	115
   108  000076  75                 	db	117
   109  000077  6C                 	db	108
   110  000078  74                 	db	116
   111  000079  61                 	db	97
   112  00007A  64                 	db	100
   113  00007B  6F                 	db	111
   114  00007C  20                 	db	32
   115  00007D  65                 	db	101
   116  00007E  73                 	db	115
   117  00007F  3A                 	db	58
   118  000080  00                 	db	0
   119  000081                     __end_of_RESULTADO:
   120                           	opt stack 0
   121  0000                     _DIFICULTAD_absconstaddr	set	48
   122                           
   123                           	psect	_DIFICULTAD_const
   124  000030                     __p_DIFICULTAD_const:
   125                           	opt stack 0
   126  000030                     _DIFICULTAD:
   127                           	opt stack 0
   128  000030  44                 	db	68
   129  000031  69                 	db	105
   130  000032  66                 	db	102
   131  000033  69                 	db	105
   132  000034  63                 	db	99
   133  000035  75                 	db	117
   134  000036  6C                 	db	108
   135  000037  74                 	db	116
   136  000038  61                 	db	97
   137  000039  64                 	db	100
   138  00003A  3F                 	db	63
   139  00003B  00                 	db	0
   140  00003C                     __end_of_DIFICULTAD:
   141                           	opt stack 0
   142  0000                     _INICIO_absconstaddr	set	32
   143                           
   144                           	psect	_INICIO_const
   145  000020                     __p_INICIO_const:
   146                           	opt stack 0
   147  000020                     _INICIO:
   148                           	opt stack 0
   149  000020  42                 	db	66
   150  000021  69                 	db	105
   151  000022  65                 	db	101
   152  000023  6E                 	db	110
   153  000024  76                 	db	118
   154  000025  65                 	db	101
   155  000026  6E                 	db	110
   156  000027  69                 	db	105
   157  000028  64                 	db	100
   158  000029  6F                 	db	111
   159  00002A  00                 	db	0
   160  00002B                     __end_of_INICIO:
   161                           	opt stack 0
   162  0000                     _NIVEL3_absconstaddr	set	96
   163                           
   164                           	psect	_NIVEL3_const
   165  000060                     __p_NIVEL3_const:
   166                           	opt stack 0
   167  000060                     _NIVEL3:
   168                           	opt stack 0
   169  000060  33                 	db	51
   170  000061  3D                 	db	61
   171  000062  64                 	db	100
   172  000063  69                 	db	105
   173  000064  66                 	db	102
   174  000065  69                 	db	105
   175  000066  63                 	db	99
   176  000067  69                 	db	105
   177  000068  6C                 	db	108
   178  000069  00                 	db	0
   179  00006A                     __end_of_NIVEL3:
   180                           	opt stack 0
   181  0000                     _NIVEL1_absconstaddr	set	64
   182                           
   183                           	psect	_NIVEL1_const
   184  000040                     __p_NIVEL1_const:
   185                           	opt stack 0
   186  000040                     _NIVEL1:
   187                           	opt stack 0
   188  000040  31                 	db	49
   189  000041  3D                 	db	61
   190  000042  66                 	db	102
   191  000043  61                 	db	97
   192  000044  63                 	db	99
   193  000045  69                 	db	105
   194  000046  6C                 	db	108
   195  000047  00                 	db	0
   196  000048                     __end_of_NIVEL1:
   197                           	opt stack 0
   198  0000                     _NIVEL2_absconstaddr	set	80
   199                           
   200                           	psect	_NIVEL2_const
   201  000050                     __p_NIVEL2_const:
   202                           	opt stack 0
   203  000050                     _NIVEL2:
   204                           	opt stack 0
   205  000050  32                 	db	50
   206  000051  3D                 	db	61
   207  000052  6D                 	db	109
   208  000053  65                 	db	101
   209  000054  64                 	db	100
   210  000055  69                 	db	105
   211  000056  6F                 	db	111
   212  000057  00                 	db	0
   213  000058                     __end_of_NIVEL2:
   214                           	opt stack 0
   215  0000                     _ADCON1	set	4033
   216  0000                     _CMCON	set	4020
   217  0000                     _CVRCONbits	set	4021
   218  0000                     _INTCON2bits	set	4081
   219  0000                     _INTCONbits	set	4082
   220  0000                     _LATA	set	3977
   221  0000                     _LATB	set	3978
   222  0000                     _LATC	set	3979
   223  0000                     _LATD	set	3980
   224  0000                     _LATE	set	3981
   225  0000                     _OSCCON	set	4051
   226  0000                     _PORTA	set	3968
   227  0000                     _PORTAbits	set	3968
   228  0000                     _PORTB	set	3969
   229  0000                     _PORTBbits	set	3969
   230  0000                     _PORTC	set	3970
   231  0000                     _PORTCbits	set	3970
   232  0000                     _PORTD	set	3971
   233  0000                     _PORTDbits	set	3971
   234  0000                     _PORTE	set	3972
   235  0000                     _PORTEbits	set	3972
   236  0000                     _RCONbits	set	4048
   237  0000                     _TRISAbits	set	3986
   238  0000                     _TRISB	set	3987
   239  0000                     _TRISC	set	3988
   240  0000                     _TRISD	set	3989
   241  0000                     _TRISEbits	set	3990
   242                           
   243                           ; #config settings
   244  0000                     
   245                           	psect	cinit
   246  001BF2                     __pcinit:
   247                           	opt stack 0
   248  001BF2                     start_initialization:
   249                           	opt stack 0
   250  001BF2                     __initialization:
   251                           	opt stack 0
   252                           
   253                           ; Initialize objects allocated to BANK0l (4 bytes)
   254                           ; load TBLPTR registers with __pidataBANK0l
   255  001BF2  0EC0               	movlw	low __pidataBANK0l
   256  001BF4  6EF6               	movwf	tblptrl,c
   257  001BF6  0E1F               	movlw	high __pidataBANK0l
   258  001BF8  6EF7               	movwf	tblptrh,c
   259  001BFA  0E00               	movlw	low (__pidataBANK0l shr (0+16))
   260  001BFC  6EF8               	movwf	tblptru,c
   261  001BFE  EE00  F07F         	lfsr	0,__pdataBANK0l
   262  001C02  EE10 F004          	lfsr	1,4
   263  001C06                     copy_data0:
   264  001C06  0009               	tblrd		*+
   265  001C08  CFF5 FFEE          	movff	tablat,postinc0
   266  001C0C  50E5               	movf	postdec1,w,c
   267  001C0E  50E1               	movf	fsr1l,w,c
   268  001C10  E1FA               	bnz	copy_data0
   269                           
   270                           ; Clear objects allocated to BANK0h (1 bytes)
   271  001C12  0100               	movlb	0
   272  001C14  6B87               	clrf	__pbssBANK0h& (0+255),b
   273                           
   274                           ; Clear objects allocated to COMRAMl (14 bytes)
   275  001C16  EE00  F001         	lfsr	0,__pbssCOMRAMl
   276  001C1A  0E0E               	movlw	14
   277  001C1C                     clear_0:
   278  001C1C  6AEE               	clrf	postinc0,c
   279  001C1E  06E8               	decf	wreg,f,c
   280  001C20  E1FD               	bnz	clear_0
   281                           
   282                           ; Clear objects allocated to COMRAMhhhl (1 bytes)
   283  001C22  6A4F               	clrf	__pbssCOMRAMhhhl& (0+255),c
   284  001C24                     end_of_initialization:
   285                           	opt stack 0
   286  001C24                     __end_of__initialization:
   287                           	opt stack 0
   288  001C24  901D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   289  001C26  921D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   290  001C28  0E00               	movlw	low (__Lmediumconst shr (0+16))
   291  001C2A  6EF8               	movwf	tblptru,c
   292  001C2C  0100               	movlb	0
   293  001C2E  EFDD  F00C         	goto	_main	;jump to C main() function
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           postdec1	equ	0xFE5
   301                           fsr1l	equ	0xFE1
   302                           
   303                           	psect	bssCOMRAMhhhl
   304  00004F                     __pbssCOMRAMhhhl:
   305                           	opt stack 0
   306  00004F                     _counter2:
   307                           	opt stack 0
   308  00004F                     	ds	1
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           postdec1	equ	0xFE5
   316                           fsr1l	equ	0xFE1
   317                           
   318                           	psect	bssCOMRAMl
   319  000001                     __pbssCOMRAMl:
   320                           	opt stack 0
   321  000001                     _score:
   322                           	opt stack 0
   323  000001                     	ds	3
   324  000004                     _acierto:
   325                           	opt stack 0
   326  000004                     	ds	1
   327  000005                     _counter:
   328                           	opt stack 0
   329  000005                     	ds	1
   330  000006                     _intentos:
   331                           	opt stack 0
   332  000006                     	ds	1
   333  000007                     _ons_B1:
   334                           	opt stack 0
   335  000007                     	ds	1
   336  000008                     _ons_B2:
   337                           	opt stack 0
   338  000008                     	ds	1
   339  000009                     _ons_B3:
   340                           	opt stack 0
   341  000009                     	ds	1
   342  00000A                     _ons_B4:
   343                           	opt stack 0
   344  00000A                     	ds	1
   345  00000B                     _ons_B5:
   346                           	opt stack 0
   347  00000B                     	ds	1
   348  00000C                     _ons_N1:
   349                           	opt stack 0
   350  00000C                     	ds	1
   351  00000D                     _ons_N2:
   352                           	opt stack 0
   353  00000D                     	ds	1
   354  00000E                     _ons_N3:
   355                           	opt stack 0
   356  00000E                     	ds	1
   357                           tblptru	equ	0xFF8
   358                           tblptrh	equ	0xFF7
   359                           tblptrl	equ	0xFF6
   360                           tablat	equ	0xFF5
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           postdec1	equ	0xFE5
   364                           fsr1l	equ	0xFE1
   365                           
   366                           	psect	bssBANK0h
   367  000087                     __pbssBANK0h:
   368                           	opt stack 0
   369  000087                     _t:
   370                           	opt stack 0
   371  000087                     	ds	1
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1l	equ	0xFE1
   380                           
   381                           	psect	dataBANK0l
   382  00007F                     __pdataBANK0l:
   383                           	opt stack 0
   384  00007F                     _randx:
   385                           	opt stack 0
   386  00007F                     	ds	4
   387                           tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           postdec1	equ	0xFE5
   394                           fsr1l	equ	0xFE1
   395                           
   396                           	psect	cstackBANK0h
   397  000083                     __pcstackBANK0h:
   398                           	opt stack 0
   399  000083                     ??_Servo_In:
   400  000083                     ??_LongDelay:
   401  000083                     ShortDelay@SDelay:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x0
   405  000083                     	ds	1
   406  000084                     ??_Bienvenido:
   407  000084                     LongDelay@LDelay:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x1
   411  000084                     	ds	1
   412  000085                     ??_Dificultad:
   413  000085                     ??_Menu1:
   414  000085                     ??_Menu2:
   415  000085                     ??_Menu3:
   416  000085                     Bienvenido@x:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x2
   420  000085                     	ds	1
   421  000086                     Dificultad@y:
   422                           	opt stack 0
   423  000086                     Menu1@n1:
   424                           	opt stack 0
   425  000086                     Menu2@n2:
   426                           	opt stack 0
   427  000086                     Menu3@n3:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x3
   431  000086                     	ds	1
   432  000087                     tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           postdec1	equ	0xFE5
   439                           fsr1l	equ	0xFE1
   440                           
   441                           ; 1 bytes @ 0x4
   442                           
   443                           	psect	cstackCOMRAMhhhh
   444  000057                     __pcstackCOMRAMhhhh:
   445                           	opt stack 0
   446  000057                     ??_Antibounce:
   447  000057                     ??i2_LongDelay:
   448  000057                     ??i2_Servo_In:
   449  000057                     ?___lmul:
   450                           	opt stack 0
   451  000057                     ___lbdiv@divisor:
   452                           	opt stack 0
   453  000057                     i2ShortDelay@SDelay:
   454                           	opt stack 0
   455  000057                     srand@x:
   456                           	opt stack 0
   457  000057                     ___lmul@multiplier:
   458                           	opt stack 0
   459                           
   460                           ; 4 bytes @ 0x0
   461  000057                     	ds	1
   462  000058                     Antibounce@L1REG:
   463                           	opt stack 0
   464  000058                     ___lbdiv@dividend:
   465                           	opt stack 0
   466  000058                     i2LongDelay@LDelay:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x1
   470  000058                     	ds	1
   471  000059                     Antibounce@L2REG:
   472                           	opt stack 0
   473  000059                     ___lbdiv@counter:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x2
   477  000059                     	ds	1
   478  00005A                     ??_One_Shot_B1:
   479  00005A                     ??_One_Shot_B2:
   480  00005A                     ??_One_Shot_B3:
   481  00005A                     ??_One_Shot_B4:
   482  00005A                     ??_One_Shot_B5:
   483  00005A                     ___lbdiv@quotient:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x3
   487  00005A                     	ds	1
   488  00005B                     ??_Resultado:
   489  00005B                     ___lmul@multiplicand:
   490                           	opt stack 0
   491                           
   492                           ; 4 bytes @ 0x4
   493  00005B                     	ds	1
   494  00005C                     Resultado@R:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x5
   498  00005C                     	ds	3
   499  00005F                     ??_N2:
   500  00005F                     ??_N3:
   501  00005F                     
   502                           ; 1 bytes @ 0x8
   503  00005F                     	ds	1
   504  000060                     tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           postdec1	equ	0xFE5
   511                           fsr1l	equ	0xFE1
   512                           
   513                           ; 1 bytes @ 0x9
   514                           
   515                           	psect	cstackCOMRAMhhhl
   516  000047                     __pcstackCOMRAMhhhl:
   517                           	opt stack 0
   518  000047                     ___lmul@product:
   519                           	opt stack 0
   520                           
   521                           ; 4 bytes @ 0x0
   522  000047                     	ds	4
   523  00004B                     ?_rand:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x4
   527  00004B                     	ds	2
   528  00004D                     ___awmod@counter:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x6
   532  00004D                     	ds	1
   533  00004E                     ___awmod@sign:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x7
   537  00004E                     	ds	1
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           postdec1	equ	0xFE5
   545                           fsr1l	equ	0xFE1
   546                           
   547                           	psect	cstackCOMRAMhhl
   548  00003A                     __pcstackCOMRAMhhl:
   549                           	opt stack 0
   550  00003A                     ?___awmod:
   551                           	opt stack 0
   552  00003A                     ___awmod@dividend:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x0
   556  00003A                     	ds	2
   557  00003C                     ___awmod@divisor:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x2
   561  00003C                     	ds	2
   562  00003E                     ??_N1:
   563  00003E                     N2@test:
   564                           	opt stack 0
   565  00003E                     N3@test:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x4
   569  00003E                     	ds	1
   570  00003F                     N2@n2:
   571                           	opt stack 0
   572  00003F                     N3@n3:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x5
   576  00003F                     	ds	1
   577                           tblptru	equ	0xFF8
   578                           tblptrh	equ	0xFF7
   579                           tblptrl	equ	0xFF6
   580                           tablat	equ	0xFF5
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           postdec1	equ	0xFE5
   584                           fsr1l	equ	0xFE1
   585                           
   586                           	psect	cstackCOMRAMhl
   587  00002A                     __pcstackCOMRAMhl:
   588                           	opt stack 0
   589  00002A                     N1@secuencia:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x0
   593  00002A                     	ds	2
   594  00002C                     N1@test:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x2
   598  00002C                     	ds	1
   599  00002D                     N1@secuencia_gen:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x3
   603  00002D                     	ds	2
   604  00002F                     N1@n1:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x5
   608  00002F                     	ds	1
   609                           tblptru	equ	0xFF8
   610                           tblptrh	equ	0xFF7
   611                           tblptrl	equ	0xFF6
   612                           tablat	equ	0xFF5
   613                           postinc0	equ	0xFEE
   614                           wreg	equ	0xFE8
   615                           postdec1	equ	0xFE5
   616                           fsr1l	equ	0xFE1
   617                           
   618                           	psect	cstackCOMRAMl
   619  00000F                     __pcstackCOMRAMl:
   620                           	opt stack 0
   621  00000F                     ??_IRH:
   622                           
   623                           ; 1 bytes @ 0x0
   624  00000F                     	ds	14
   625                           tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           postdec1	equ	0xFE5
   632                           fsr1l	equ	0xFE1
   633                           
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   636 ;;
   637 ;; *************** function _main *****************
   638 ;; Defined at:
   639 ;;		line 130 in file "space shot.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels required when called:   11
   659 ;; This function calls:
   660 ;;		_Bienvenido
   661 ;;		_Dificultad
   662 ;;		_LCDsetup
   663 ;;		_Menu1
   664 ;;		_Menu2
   665 ;;		_Menu3
   666 ;;		_Servo_In
   667 ;; This function is called by:
   668 ;;		Startup code after reset
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text0
   673  0019BA                     __ptext0:
   674                           	opt stack 0
   675  0019BA                     _main:
   676                           	opt stack 20
   677                           
   678                           ;space shot.c: 132: OSCCON = 0x60;
   679                           
   680                           ;incstack = 0
   681  0019BA  0E60               	movlw	96
   682  0019BC  6ED3               	movwf	4051,c	;volatile
   683                           
   684                           ;space shot.c: 134: CVRCONbits.CVREN=0;
   685  0019BE  9EB5               	bcf	4021,7,c	;volatile
   686                           
   687                           ;space shot.c: 135: PORTA= 0x00;
   688  0019C0  0E00               	movlw	0
   689  0019C2  6E80               	movwf	3968,c	;volatile
   690                           
   691                           ;space shot.c: 136: LATA= 0x00;
   692  0019C4  0E00               	movlw	0
   693  0019C6  6E89               	movwf	3977,c	;volatile
   694                           
   695                           ;space shot.c: 137: TRISAbits.RA0= 0xFF;
   696  0019C8  8092               	bsf	3986,0,c	;volatile
   697                           
   698                           ;space shot.c: 138: TRISAbits.RA1= 0xFF;
   699  0019CA  8292               	bsf	3986,1,c	;volatile
   700                           
   701                           ;space shot.c: 139: TRISAbits.RA2= 0xFF;
   702  0019CC  8492               	bsf	3986,2,c	;volatile
   703                           
   704                           ;space shot.c: 140: TRISAbits.RA3= 0xFF;
   705  0019CE  8692               	bsf	3986,3,c	;volatile
   706                           
   707                           ;space shot.c: 141: TRISAbits.RA4= 0xFF;
   708  0019D0  8892               	bsf	3986,4,c	;volatile
   709                           
   710                           ;space shot.c: 142: TRISAbits.RA5= 0x00;
   711  0019D2  9A92               	bcf	3986,5,c	;volatile
   712                           
   713                           ;space shot.c: 144: ADCON1 = 0x0F;
   714  0019D4  0E0F               	movlw	15
   715  0019D6  6EC1               	movwf	4033,c	;volatile
   716                           
   717                           ;space shot.c: 145: PORTB= 0x00;
   718  0019D8  0E00               	movlw	0
   719  0019DA  6E81               	movwf	3969,c	;volatile
   720                           
   721                           ;space shot.c: 146: LATB = 0x00;
   722  0019DC  0E00               	movlw	0
   723  0019DE  6E8A               	movwf	3978,c	;volatile
   724                           
   725                           ;space shot.c: 147: TRISB = 0xF0;
   726  0019E0  0EF0               	movlw	240
   727  0019E2  6E93               	movwf	3987,c	;volatile
   728                           
   729                           ;space shot.c: 149: PORTC= 0x00;
   730  0019E4  0E00               	movlw	0
   731  0019E6  6E82               	movwf	3970,c	;volatile
   732                           
   733                           ;space shot.c: 150: LATC= 0x00;
   734  0019E8  0E00               	movlw	0
   735  0019EA  6E8B               	movwf	3979,c	;volatile
   736                           
   737                           ;space shot.c: 151: TRISC=0x00;
   738  0019EC  0E00               	movlw	0
   739  0019EE  6E94               	movwf	3988,c	;volatile
   740                           
   741                           ;space shot.c: 153: CMCON = 0x07;
   742  0019F0  0E07               	movlw	7
   743  0019F2  6EB4               	movwf	4020,c	;volatile
   744                           
   745                           ;space shot.c: 154: PORTD = 0x00;
   746  0019F4  0E00               	movlw	0
   747  0019F6  6E83               	movwf	3971,c	;volatile
   748                           
   749                           ;space shot.c: 155: LATD = 0x00;
   750  0019F8  0E00               	movlw	0
   751  0019FA  6E8C               	movwf	3980,c	;volatile
   752                           
   753                           ;space shot.c: 156: TRISD = 0x00;
   754  0019FC  0E00               	movlw	0
   755  0019FE  6E95               	movwf	3989,c	;volatile
   756                           
   757                           ;space shot.c: 158: PORTE = 0x00;
   758  001A00  0E00               	movlw	0
   759  001A02  6E84               	movwf	3972,c	;volatile
   760                           
   761                           ;space shot.c: 159: LATE = 0x00;
   762  001A04  0E00               	movlw	0
   763  001A06  6E8D               	movwf	3981,c	;volatile
   764                           
   765                           ;space shot.c: 160: TRISEbits.RE0 = 0x00;
   766  001A08  9096               	bcf	3990,0,c	;volatile
   767                           
   768                           ;space shot.c: 161: TRISEbits.RE1 = 0x00;
   769  001A0A  9296               	bcf	3990,1,c	;volatile
   770                           
   771                           ;space shot.c: 162: TRISEbits.RE2 = 0x00;
   772  001A0C  9496               	bcf	3990,2,c	;volatile
   773                           
   774                           ;space shot.c: 164: RCONbits.IPEN=1;
   775  001A0E  8ED0               	bsf	4048,7,c	;volatile
   776                           
   777                           ;space shot.c: 165: INTCONbits.GIEH=1;
   778  001A10  8EF2               	bsf	intcon,7,c	;volatile
   779                           
   780                           ;space shot.c: 166: INTCONbits.RBIE=1;
   781  001A12  86F2               	bsf	intcon,3,c	;volatile
   782                           
   783                           ;space shot.c: 167: INTCON2bits.RBIP=1;
   784  001A14  80F1               	bsf	intcon2,0,c	;volatile
   785                           
   786                           ;space shot.c: 169: LCDsetup();
   787  001A16  EC6C  F00E         	call	_LCDsetup	;wreg free
   788                           
   789                           ;space shot.c: 170: Servo_In();
   790  001A1A  EC36  F00E         	call	_Servo_In	;wreg free
   791                           
   792                           ;space shot.c: 172: Bienvenido();
   793  001A1E  EC24  F00D         	call	_Bienvenido	;wreg free
   794                           
   795                           ;space shot.c: 173: Dificultad();
   796  001A22  EC94  F00C         	call	_Dificultad	;wreg free
   797                           
   798                           ;space shot.c: 174: Menu1();
   799  001A26  EC4B  F00C         	call	_Menu1	;wreg free
   800                           
   801                           ;space shot.c: 175: Menu2();
   802  001A2A  EC02  F00C         	call	_Menu2	;wreg free
   803                           
   804                           ;space shot.c: 176: Menu3();
   805  001A2E  EC62  F00B         	call	_Menu3	;wreg free
   806  001A32                     l3803:
   807                           
   808                           ;space shot.c: 178: for (t=0; t<10; t++){
   809  001A32  0E00               	movlw	0
   810  001A34  0100               	movlb	0	; () banked
   811  001A36  6F87               	movwf	_t& (0+255),b
   812  001A38                     l3805:
   813                           
   814                           ; BSR set to: 0
   815  001A38  0E09               	movlw	9
   816  001A3A  0100               	movlb	0	; () banked
   817  001A3C  6587               	cpfsgt	_t& (0+255),b
   818  001A3E  D001               	goto	l3809
   819  001A40  D7F8               	goto	l3803
   820  001A42                     l3809:
   821                           
   822                           ; BSR set to: 0
   823  001A42  0100               	movlb	0	; () banked
   824  001A44  2B87               	incf	_t& (0+255),f,b
   825  001A46  D7F8               	goto	l3805
   826  001A48                     __end_of_main:
   827                           	opt stack 0
   828                           tblptru	equ	0xFF8
   829                           tblptrh	equ	0xFF7
   830                           tblptrl	equ	0xFF6
   831                           tablat	equ	0xFF5
   832                           intcon	equ	0xFF2
   833                           intcon2	equ	0xFF1
   834                           postinc0	equ	0xFEE
   835                           wreg	equ	0xFE8
   836                           postdec1	equ	0xFE5
   837                           fsr1l	equ	0xFE1
   838                           
   839 ;; *************** function _Servo_In *****************
   840 ;; Defined at:
   841 ;;		line 338 in file "space shot.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   858 ;;      Totals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   859 ;;Total ram usage:        1 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    7
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text1
   870  001C6C                     __ptext1:
   871                           	opt stack 0
   872  001C6C                     _Servo_In:
   873                           	opt stack 23
   874                           
   875                           ;space shot.c: 339: for (counter=0; counter<9; counter++){
   876                           
   877                           ; BSR set to: 0
   878                           ;incstack = 0
   879  001C6C  0E00               	movlw	0
   880  001C6E  6E05               	movwf	_counter,c
   881  001C70                     l3587:
   882  001C70  0E08               	movlw	8
   883  001C72  6405               	cpfsgt	_counter,c
   884  001C74  D001               	goto	l236
   885  001C76  0012               	return	
   886  001C78                     l236:
   887                           
   888                           ;space shot.c: 340: PORTEbits.RE0=1;
   889  001C78  8084               	bsf	3972,0,c	;volatile
   890                           
   891                           ;space shot.c: 341: _delay(2100);
   892  001C7A  0E03               	movlw	3
   893  001C7C  0100               	movlb	0	; () banked
   894  001C7E  6F83               	movwf	??_Servo_In& (0+255),b
   895  001C80  0EB9               	movlw	185
   896  001C82                     u3747:
   897  001C82  2EE8               	decfsz	wreg,f,c
   898  001C84  D7FE               	goto	u3747
   899  001C86  2F83               	decfsz	??_Servo_In& (0+255),f,b
   900  001C88  D7FC               	goto	u3747
   901  001C8A  F000               	nop	
   902                           
   903                           ;space shot.c: 342: PORTEbits.RE0=0;
   904  001C8C  9084               	bcf	3972,0,c	;volatile
   905                           
   906                           ;space shot.c: 343: _delay(42800);
   907  001C8E  0E38               	movlw	56
   908  001C90  0100               	movlb	0	; () banked
   909  001C92  6F83               	movwf	??_Servo_In& (0+255),b
   910  001C94  0E94               	movlw	148
   911  001C96                     u3757:
   912  001C96  2EE8               	decfsz	wreg,f,c
   913  001C98  D7FE               	goto	u3757
   914  001C9A  2F83               	decfsz	??_Servo_In& (0+255),f,b
   915  001C9C  D7FC               	goto	u3757
   916  001C9E  D000               	nop2	
   917  001CA0  2A05               	incf	_counter,f,c
   918  001CA2  D7E6               	goto	l3587
   919  001CA4                     __end_of_Servo_In:
   920                           	opt stack 0
   921                           tblptru	equ	0xFF8
   922                           tblptrh	equ	0xFF7
   923                           tblptrl	equ	0xFF6
   924                           tablat	equ	0xFF5
   925                           intcon	equ	0xFF2
   926                           intcon2	equ	0xFF1
   927                           postinc0	equ	0xFEE
   928                           wreg	equ	0xFE8
   929                           postdec1	equ	0xFE5
   930                           fsr1l	equ	0xFE1
   931                           
   932 ;; *************** function _Menu3 *****************
   933 ;; Defined at:
   934 ;;		line 319 in file "space shot.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  n3              1    3[BANK0h] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   951 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   952 ;;Total ram usage:        2 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:   10
   955 ;; This function calls:
   956 ;;		_Command
   957 ;;		_LCDdisplay
   958 ;;		_LCDready
   959 ;;		_LCDsetup
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text2
   966  0016C4                     __ptext2:
   967                           	opt stack 0
   968  0016C4                     _Menu3:
   969                           	opt stack 20
   970                           
   971                           ;space shot.c: 320: PORTDbits.RD7=0;
   972                           
   973                           ;incstack = 0
   974  0016C4  9E83               	bcf	3971,7,c	;volatile
   975                           
   976                           ;space shot.c: 321: LCDsetup();
   977  0016C6  EC6C  F00E         	call	_LCDsetup	;wreg free
   978                           
   979                           ;space shot.c: 322: unsigned char n3;
   980                           ;space shot.c: 323: for(n3=0;n3<9;n3++){
   981  0016CA  0E00               	movlw	0
   982  0016CC  0100               	movlb	0	; () banked
   983  0016CE  6F86               	movwf	Menu3@n3& (0+255),b
   984  0016D0                     l3727:
   985                           
   986                           ; BSR set to: 0
   987  0016D0  0E08               	movlw	8
   988  0016D2  0100               	movlb	0	; () banked
   989  0016D4  6586               	cpfsgt	Menu3@n3& (0+255),b
   990  0016D6  D001               	goto	l3731
   991  0016D8  D02A               	goto	l3743
   992  0016DA                     l3731:
   993                           
   994                           ; BSR set to: 0
   995                           ;space shot.c: 324: myRAMarray5 [n3] = NIVEL3[n3];
   996  0016DA  0100               	movlb	0	; () banked
   997  0016DC  5186               	movf	Menu3@n3& (0+255),w,b
   998  0016DE  0D01               	mullw	1
   999  0016E0  0E60               	movlw	96
  1000  0016E2  24F3               	addwf	prodl,w,c
  1001  0016E4  6EF6               	movwf	tblptrl,c
  1002  0016E6  0E00               	movlw	0
  1003  0016E8  20F4               	addwfc	prodh,w,c
  1004  0016EA  6EF7               	movwf	tblptrh,c
  1005  0016EC  6AF8               	clrf	tblptru,c
  1006  0016EE  0E00               	movlw	0
  1007  0016F0  22F8               	addwfc	tblptru,f,c
  1008  0016F2  0100               	movlb	0	; () banked
  1009  0016F4  5186               	movf	Menu3@n3& (0+255),w,b
  1010  0016F6  0D01               	mullw	1
  1011  0016F8  0E60               	movlw	96
  1012  0016FA  24F3               	addwf	prodl,w,c
  1013  0016FC  6ED9               	movwf	fsr2l,c
  1014  0016FE  0E00               	movlw	0
  1015  001700  20F4               	addwfc	prodh,w,c
  1016  001702  6EDA               	movwf	fsr2h,c
  1017  001704  0008               	tblrd		*
  1018  001706  CFF5 FFDF          	movff	tablat,indf2
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;space shot.c: 325: PORTD=myRAMarray5[n3];
  1022  00170A  0100               	movlb	0	; () banked
  1023  00170C  5186               	movf	Menu3@n3& (0+255),w,b
  1024  00170E  0D01               	mullw	1
  1025  001710  0E60               	movlw	96
  1026  001712  24F3               	addwf	prodl,w,c
  1027  001714  6ED9               	movwf	fsr2l,c
  1028  001716  0E00               	movlw	0
  1029  001718  20F4               	addwfc	prodh,w,c
  1030  00171A  6EDA               	movwf	fsr2h,c
  1031  00171C  50DF               	movf	indf2,w,c
  1032  00171E  6E83               	movwf	3971,c	;volatile
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;space shot.c: 326: LCDdisplay();
  1036  001720  ECC4  F00F         	call	_LCDdisplay	;wreg free
  1037                           
  1038                           ;space shot.c: 327: LCDready();}
  1039  001724  EC1C  F00F         	call	_LCDready	;wreg free
  1040  001728  0100               	movlb	0	; () banked
  1041  00172A  2B86               	incf	Menu3@n3& (0+255),f,b
  1042  00172C  D7D1               	goto	l3727
  1043  00172E                     l3743:
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;space shot.c: 328: for(n3=0; n3<10; n3++){
  1047  00172E  0E00               	movlw	0
  1048  001730  0100               	movlb	0	; () banked
  1049  001732  6F86               	movwf	Menu3@n3& (0+255),b
  1050  001734                     l3745:
  1051                           
  1052                           ; BSR set to: 0
  1053  001734  0E09               	movlw	9
  1054  001736  0100               	movlb	0	; () banked
  1055  001738  6586               	cpfsgt	Menu3@n3& (0+255),b
  1056  00173A  D001               	goto	l3749
  1057  00173C  D00C               	goto	l3753
  1058  00173E                     l3749:
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;space shot.c: 329: _delay(197000);
  1062  00173E  0E00               	movlw	0
  1063  001740  0100               	movlb	0	; () banked
  1064  001742  6F85               	movwf	??_Menu3& (0+255),b
  1065  001744  0ED7               	movlw	215
  1066  001746                     u3767:
  1067  001746  2EE8               	decfsz	wreg,f,c
  1068  001748  D7FE               	goto	u3767
  1069  00174A  2F85               	decfsz	??_Menu3& (0+255),f,b
  1070  00174C  D7FC               	goto	u3767
  1071  00174E  F000               	nop	
  1072  001750  0100               	movlb	0	; () banked
  1073  001752  2B86               	incf	Menu3@n3& (0+255),f,b
  1074  001754  D7EF               	goto	l3745
  1075  001756                     l3753:
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;space shot.c: 330: }
  1079                           ;space shot.c: 331: PORTD= 0x01;
  1080  001756  0E01               	movlw	1
  1081  001758  6E83               	movwf	3971,c	;volatile
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;space shot.c: 332: Command ();
  1085  00175A  ECBD  F00F         	call	_Command	;wreg free
  1086                           
  1087                           ;space shot.c: 333: LCDready();
  1088  00175E  EC1C  F00F         	call	_LCDready	;wreg free
  1089  001762  0012               	return		;funcret
  1090  001764                     __end_of_Menu3:
  1091                           	opt stack 0
  1092                           tblptru	equ	0xFF8
  1093                           tblptrh	equ	0xFF7
  1094                           tblptrl	equ	0xFF6
  1095                           tablat	equ	0xFF5
  1096                           prodh	equ	0xFF4
  1097                           prodl	equ	0xFF3
  1098                           intcon	equ	0xFF2
  1099                           intcon2	equ	0xFF1
  1100                           postinc0	equ	0xFEE
  1101                           wreg	equ	0xFE8
  1102                           postdec1	equ	0xFE5
  1103                           fsr1l	equ	0xFE1
  1104                           indf2	equ	0xFDF
  1105                           fsr2h	equ	0xFDA
  1106                           fsr2l	equ	0xFD9
  1107                           
  1108 ;; *************** function _Menu2 *****************
  1109 ;; Defined at:
  1110 ;;		line 304 in file "space shot.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  n2              1    3[BANK0h] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1125 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1127 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1128 ;;Total ram usage:        2 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:   10
  1131 ;; This function calls:
  1132 ;;		_LCDdisplay
  1133 ;;		_LCDready
  1134 ;;		_LCDsetup
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text3
  1141  001804                     __ptext3:
  1142                           	opt stack 0
  1143  001804                     _Menu2:
  1144                           	opt stack 20
  1145                           
  1146                           ;space shot.c: 305: PORTDbits.RD7=0;
  1147                           
  1148                           ;incstack = 0
  1149  001804  9E83               	bcf	3971,7,c	;volatile
  1150                           
  1151                           ;space shot.c: 306: LCDsetup();
  1152  001806  EC6C  F00E         	call	_LCDsetup	;wreg free
  1153                           
  1154                           ;space shot.c: 307: unsigned char n2;
  1155                           ;space shot.c: 308: for(n2=0;n2<7;n2++){
  1156  00180A  0E00               	movlw	0
  1157  00180C  0100               	movlb	0	; () banked
  1158  00180E  6F86               	movwf	Menu2@n2& (0+255),b
  1159  001810                     l3695:
  1160                           
  1161                           ; BSR set to: 0
  1162  001810  0E06               	movlw	6
  1163  001812  0100               	movlb	0	; () banked
  1164  001814  6586               	cpfsgt	Menu2@n2& (0+255),b
  1165  001816  D001               	goto	l3699
  1166  001818  D02A               	goto	l3711
  1167  00181A                     l3699:
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;space shot.c: 309: myRAMarray4 [n2] = NIVEL2[n2];
  1171  00181A  0100               	movlb	0	; () banked
  1172  00181C  5186               	movf	Menu2@n2& (0+255),w,b
  1173  00181E  0D01               	mullw	1
  1174  001820  0E50               	movlw	80
  1175  001822  24F3               	addwf	prodl,w,c
  1176  001824  6EF6               	movwf	tblptrl,c
  1177  001826  0E00               	movlw	0
  1178  001828  20F4               	addwfc	prodh,w,c
  1179  00182A  6EF7               	movwf	tblptrh,c
  1180  00182C  6AF8               	clrf	tblptru,c
  1181  00182E  0E00               	movlw	0
  1182  001830  22F8               	addwfc	tblptru,f,c
  1183  001832  0100               	movlb	0	; () banked
  1184  001834  5186               	movf	Menu2@n2& (0+255),w,b
  1185  001836  0D01               	mullw	1
  1186  001838  0E50               	movlw	80
  1187  00183A  24F3               	addwf	prodl,w,c
  1188  00183C  6ED9               	movwf	fsr2l,c
  1189  00183E  0E00               	movlw	0
  1190  001840  20F4               	addwfc	prodh,w,c
  1191  001842  6EDA               	movwf	fsr2h,c
  1192  001844  0008               	tblrd		*
  1193  001846  CFF5 FFDF          	movff	tablat,indf2
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;space shot.c: 310: PORTD=myRAMarray4[n2];
  1197  00184A  0100               	movlb	0	; () banked
  1198  00184C  5186               	movf	Menu2@n2& (0+255),w,b
  1199  00184E  0D01               	mullw	1
  1200  001850  0E50               	movlw	80
  1201  001852  24F3               	addwf	prodl,w,c
  1202  001854  6ED9               	movwf	fsr2l,c
  1203  001856  0E00               	movlw	0
  1204  001858  20F4               	addwfc	prodh,w,c
  1205  00185A  6EDA               	movwf	fsr2h,c
  1206  00185C  50DF               	movf	indf2,w,c
  1207  00185E  6E83               	movwf	3971,c	;volatile
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;space shot.c: 311: LCDdisplay();
  1211  001860  ECC4  F00F         	call	_LCDdisplay	;wreg free
  1212                           
  1213                           ;space shot.c: 312: LCDready();
  1214  001864  EC1C  F00F         	call	_LCDready	;wreg free
  1215  001868  0100               	movlb	0	; () banked
  1216  00186A  2B86               	incf	Menu2@n2& (0+255),f,b
  1217  00186C  D7D1               	goto	l3695
  1218  00186E                     l3711:
  1219                           
  1220                           ; BSR set to: 0
  1221                           ;space shot.c: 313: }
  1222                           ;space shot.c: 314: for(n2=0; n2<10; n2++){
  1223  00186E  0E00               	movlw	0
  1224  001870  0100               	movlb	0	; () banked
  1225  001872  6F86               	movwf	Menu2@n2& (0+255),b
  1226  001874                     l3713:
  1227                           
  1228                           ; BSR set to: 0
  1229  001874  0E09               	movlw	9
  1230  001876  0100               	movlb	0	; () banked
  1231  001878  6586               	cpfsgt	Menu2@n2& (0+255),b
  1232  00187A  D001               	goto	l3717
  1233  00187C  0012               	return	
  1234  00187E                     l3717:
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;space shot.c: 315: _delay(197000);
  1238  00187E  0E00               	movlw	0
  1239  001880  0100               	movlb	0	; () banked
  1240  001882  6F85               	movwf	??_Menu2& (0+255),b
  1241  001884  0ED7               	movlw	215
  1242  001886                     u3777:
  1243  001886  2EE8               	decfsz	wreg,f,c
  1244  001888  D7FE               	goto	u3777
  1245  00188A  2F85               	decfsz	??_Menu2& (0+255),f,b
  1246  00188C  D7FC               	goto	u3777
  1247  00188E  F000               	nop	
  1248  001890  0100               	movlb	0	; () banked
  1249  001892  2B86               	incf	Menu2@n2& (0+255),f,b
  1250  001894  D7EF               	goto	l3713
  1251  001896                     __end_of_Menu2:
  1252                           	opt stack 0
  1253                           tblptru	equ	0xFF8
  1254                           tblptrh	equ	0xFF7
  1255                           tblptrl	equ	0xFF6
  1256                           tablat	equ	0xFF5
  1257                           prodh	equ	0xFF4
  1258                           prodl	equ	0xFF3
  1259                           intcon	equ	0xFF2
  1260                           intcon2	equ	0xFF1
  1261                           postinc0	equ	0xFEE
  1262                           wreg	equ	0xFE8
  1263                           postdec1	equ	0xFE5
  1264                           fsr1l	equ	0xFE1
  1265                           indf2	equ	0xFDF
  1266                           fsr2h	equ	0xFDA
  1267                           fsr2l	equ	0xFD9
  1268                           
  1269 ;; *************** function _Menu1 *****************
  1270 ;; Defined at:
  1271 ;;		line 289 in file "space shot.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  n1              1    3[BANK0h] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1288 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1289 ;;Total ram usage:        2 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:   10
  1292 ;; This function calls:
  1293 ;;		_LCDdisplay
  1294 ;;		_LCDready
  1295 ;;		_LCDsetup
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text4
  1302  001896                     __ptext4:
  1303                           	opt stack 0
  1304  001896                     _Menu1:
  1305                           	opt stack 20
  1306                           
  1307                           ;space shot.c: 290: PORTDbits.RD7=0;
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;incstack = 0
  1311  001896  9E83               	bcf	3971,7,c	;volatile
  1312                           
  1313                           ;space shot.c: 291: LCDsetup();
  1314  001898  EC6C  F00E         	call	_LCDsetup	;wreg free
  1315                           
  1316                           ;space shot.c: 292: unsigned char n1;
  1317                           ;space shot.c: 293: for(n1=0;n1<7;n1++){
  1318  00189C  0E00               	movlw	0
  1319  00189E  0100               	movlb	0	; () banked
  1320  0018A0  6F86               	movwf	Menu1@n1& (0+255),b
  1321  0018A2                     l3663:
  1322                           
  1323                           ; BSR set to: 0
  1324  0018A2  0E06               	movlw	6
  1325  0018A4  0100               	movlb	0	; () banked
  1326  0018A6  6586               	cpfsgt	Menu1@n1& (0+255),b
  1327  0018A8  D001               	goto	l3667
  1328  0018AA  D02A               	goto	l3679
  1329  0018AC                     l3667:
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;space shot.c: 294: myRAMarray3 [n1] = NIVEL1[n1];
  1333  0018AC  0100               	movlb	0	; () banked
  1334  0018AE  5186               	movf	Menu1@n1& (0+255),w,b
  1335  0018B0  0D01               	mullw	1
  1336  0018B2  0E40               	movlw	64
  1337  0018B4  24F3               	addwf	prodl,w,c
  1338  0018B6  6EF6               	movwf	tblptrl,c
  1339  0018B8  0E00               	movlw	0
  1340  0018BA  20F4               	addwfc	prodh,w,c
  1341  0018BC  6EF7               	movwf	tblptrh,c
  1342  0018BE  6AF8               	clrf	tblptru,c
  1343  0018C0  0E00               	movlw	0
  1344  0018C2  22F8               	addwfc	tblptru,f,c
  1345  0018C4  0100               	movlb	0	; () banked
  1346  0018C6  5186               	movf	Menu1@n1& (0+255),w,b
  1347  0018C8  0D01               	mullw	1
  1348  0018CA  0E40               	movlw	64
  1349  0018CC  24F3               	addwf	prodl,w,c
  1350  0018CE  6ED9               	movwf	fsr2l,c
  1351  0018D0  0E00               	movlw	0
  1352  0018D2  20F4               	addwfc	prodh,w,c
  1353  0018D4  6EDA               	movwf	fsr2h,c
  1354  0018D6  0008               	tblrd		*
  1355  0018D8  CFF5 FFDF          	movff	tablat,indf2
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;space shot.c: 295: PORTD=myRAMarray3[n1];
  1359  0018DC  0100               	movlb	0	; () banked
  1360  0018DE  5186               	movf	Menu1@n1& (0+255),w,b
  1361  0018E0  0D01               	mullw	1
  1362  0018E2  0E40               	movlw	64
  1363  0018E4  24F3               	addwf	prodl,w,c
  1364  0018E6  6ED9               	movwf	fsr2l,c
  1365  0018E8  0E00               	movlw	0
  1366  0018EA  20F4               	addwfc	prodh,w,c
  1367  0018EC  6EDA               	movwf	fsr2h,c
  1368  0018EE  50DF               	movf	indf2,w,c
  1369  0018F0  6E83               	movwf	3971,c	;volatile
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;space shot.c: 296: LCDdisplay();
  1373  0018F2  ECC4  F00F         	call	_LCDdisplay	;wreg free
  1374                           
  1375                           ;space shot.c: 297: LCDready();
  1376  0018F6  EC1C  F00F         	call	_LCDready	;wreg free
  1377  0018FA  0100               	movlb	0	; () banked
  1378  0018FC  2B86               	incf	Menu1@n1& (0+255),f,b
  1379  0018FE  D7D1               	goto	l3663
  1380  001900                     l3679:
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;space shot.c: 298: }
  1384                           ;space shot.c: 299: for(n1=0; n1<10; n1++){
  1385  001900  0E00               	movlw	0
  1386  001902  0100               	movlb	0	; () banked
  1387  001904  6F86               	movwf	Menu1@n1& (0+255),b
  1388  001906                     l3681:
  1389                           
  1390                           ; BSR set to: 0
  1391  001906  0E09               	movlw	9
  1392  001908  0100               	movlb	0	; () banked
  1393  00190A  6586               	cpfsgt	Menu1@n1& (0+255),b
  1394  00190C  D001               	goto	l3685
  1395  00190E  0012               	return	
  1396  001910                     l3685:
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;space shot.c: 300: _delay(197000);
  1400  001910  0E00               	movlw	0
  1401  001912  0100               	movlb	0	; () banked
  1402  001914  6F85               	movwf	??_Menu1& (0+255),b
  1403  001916  0ED7               	movlw	215
  1404  001918                     u3787:
  1405  001918  2EE8               	decfsz	wreg,f,c
  1406  00191A  D7FE               	goto	u3787
  1407  00191C  2F85               	decfsz	??_Menu1& (0+255),f,b
  1408  00191E  D7FC               	goto	u3787
  1409  001920  F000               	nop	
  1410  001922  0100               	movlb	0	; () banked
  1411  001924  2B86               	incf	Menu1@n1& (0+255),f,b
  1412  001926  D7EF               	goto	l3681
  1413  001928                     __end_of_Menu1:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           prodh	equ	0xFF4
  1420                           prodl	equ	0xFF3
  1421                           intcon	equ	0xFF2
  1422                           intcon2	equ	0xFF1
  1423                           postinc0	equ	0xFEE
  1424                           wreg	equ	0xFE8
  1425                           postdec1	equ	0xFE5
  1426                           fsr1l	equ	0xFE1
  1427                           indf2	equ	0xFDF
  1428                           fsr2h	equ	0xFDA
  1429                           fsr2l	equ	0xFD9
  1430                           
  1431 ;; *************** function _Dificultad *****************
  1432 ;; Defined at:
  1433 ;;		line 275 in file "space shot.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  y               1    3[BANK0h] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1451 ;;Total ram usage:        2 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:   10
  1454 ;; This function calls:
  1455 ;;		_LCDdisplay
  1456 ;;		_LCDready
  1457 ;;		_LCDsetup
  1458 ;; This function is called by:
  1459 ;;		_main
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text5
  1464  001928                     __ptext5:
  1465                           	opt stack 0
  1466  001928                     _Dificultad:
  1467                           	opt stack 20
  1468                           
  1469                           ;space shot.c: 276: PORTDbits.RD7=0;
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;incstack = 0
  1473  001928  9E83               	bcf	3971,7,c	;volatile
  1474                           
  1475                           ;space shot.c: 277: LCDsetup();
  1476  00192A  EC6C  F00E         	call	_LCDsetup	;wreg free
  1477                           
  1478                           ;space shot.c: 278: unsigned char y;
  1479                           ;space shot.c: 279: for(y=0;y<11;y++){
  1480  00192E  0E00               	movlw	0
  1481  001930  0100               	movlb	0	; () banked
  1482  001932  6F86               	movwf	Dificultad@y& (0+255),b
  1483  001934                     l3631:
  1484                           
  1485                           ; BSR set to: 0
  1486  001934  0E0A               	movlw	10
  1487  001936  0100               	movlb	0	; () banked
  1488  001938  6586               	cpfsgt	Dificultad@y& (0+255),b
  1489  00193A  D001               	goto	l3635
  1490  00193C  D02A               	goto	l3647
  1491  00193E                     l3635:
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;space shot.c: 280: myRAMarray2 [y] = DIFICULTAD[y];
  1495  00193E  0100               	movlb	0	; () banked
  1496  001940  5186               	movf	Dificultad@y& (0+255),w,b
  1497  001942  0D01               	mullw	1
  1498  001944  0E30               	movlw	48
  1499  001946  24F3               	addwf	prodl,w,c
  1500  001948  6EF6               	movwf	tblptrl,c
  1501  00194A  0E00               	movlw	0
  1502  00194C  20F4               	addwfc	prodh,w,c
  1503  00194E  6EF7               	movwf	tblptrh,c
  1504  001950  6AF8               	clrf	tblptru,c
  1505  001952  0E00               	movlw	0
  1506  001954  22F8               	addwfc	tblptru,f,c
  1507  001956  0100               	movlb	0	; () banked
  1508  001958  5186               	movf	Dificultad@y& (0+255),w,b
  1509  00195A  0D01               	mullw	1
  1510  00195C  0E30               	movlw	48
  1511  00195E  24F3               	addwf	prodl,w,c
  1512  001960  6ED9               	movwf	fsr2l,c
  1513  001962  0E00               	movlw	0
  1514  001964  20F4               	addwfc	prodh,w,c
  1515  001966  6EDA               	movwf	fsr2h,c
  1516  001968  0008               	tblrd		*
  1517  00196A  CFF5 FFDF          	movff	tablat,indf2
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;space shot.c: 281: PORTD=myRAMarray2[y];
  1521  00196E  0100               	movlb	0	; () banked
  1522  001970  5186               	movf	Dificultad@y& (0+255),w,b
  1523  001972  0D01               	mullw	1
  1524  001974  0E30               	movlw	48
  1525  001976  24F3               	addwf	prodl,w,c
  1526  001978  6ED9               	movwf	fsr2l,c
  1527  00197A  0E00               	movlw	0
  1528  00197C  20F4               	addwfc	prodh,w,c
  1529  00197E  6EDA               	movwf	fsr2h,c
  1530  001980  50DF               	movf	indf2,w,c
  1531  001982  6E83               	movwf	3971,c	;volatile
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;space shot.c: 282: LCDdisplay();
  1535  001984  ECC4  F00F         	call	_LCDdisplay	;wreg free
  1536                           
  1537                           ;space shot.c: 283: LCDready();
  1538  001988  EC1C  F00F         	call	_LCDready	;wreg free
  1539  00198C  0100               	movlb	0	; () banked
  1540  00198E  2B86               	incf	Dificultad@y& (0+255),f,b
  1541  001990  D7D1               	goto	l3631
  1542  001992                     l3647:
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;space shot.c: 284: }
  1546                           ;space shot.c: 285: for(y=0; y<10; y++){
  1547  001992  0E00               	movlw	0
  1548  001994  0100               	movlb	0	; () banked
  1549  001996  6F86               	movwf	Dificultad@y& (0+255),b
  1550  001998                     l3649:
  1551                           
  1552                           ; BSR set to: 0
  1553  001998  0E09               	movlw	9
  1554  00199A  0100               	movlb	0	; () banked
  1555  00199C  6586               	cpfsgt	Dificultad@y& (0+255),b
  1556  00199E  D001               	goto	l3653
  1557  0019A0  0012               	return	
  1558  0019A2                     l3653:
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;space shot.c: 286: _delay(197000);
  1562  0019A2  0E00               	movlw	0
  1563  0019A4  0100               	movlb	0	; () banked
  1564  0019A6  6F85               	movwf	??_Dificultad& (0+255),b
  1565  0019A8  0ED7               	movlw	215
  1566  0019AA                     u3797:
  1567  0019AA  2EE8               	decfsz	wreg,f,c
  1568  0019AC  D7FE               	goto	u3797
  1569  0019AE  2F85               	decfsz	??_Dificultad& (0+255),f,b
  1570  0019B0  D7FC               	goto	u3797
  1571  0019B2  F000               	nop	
  1572  0019B4  0100               	movlb	0	; () banked
  1573  0019B6  2B86               	incf	Dificultad@y& (0+255),f,b
  1574  0019B8  D7EF               	goto	l3649
  1575  0019BA                     __end_of_Dificultad:
  1576                           	opt stack 0
  1577                           tblptru	equ	0xFF8
  1578                           tblptrh	equ	0xFF7
  1579                           tblptrl	equ	0xFF6
  1580                           tablat	equ	0xFF5
  1581                           prodh	equ	0xFF4
  1582                           prodl	equ	0xFF3
  1583                           intcon	equ	0xFF2
  1584                           intcon2	equ	0xFF1
  1585                           postinc0	equ	0xFEE
  1586                           wreg	equ	0xFE8
  1587                           postdec1	equ	0xFE5
  1588                           fsr1l	equ	0xFE1
  1589                           indf2	equ	0xFDF
  1590                           fsr2h	equ	0xFDA
  1591                           fsr2l	equ	0xFD9
  1592                           
  1593 ;; *************** function _LCDsetup *****************
  1594 ;; Defined at:
  1595 ;;		line 208 in file "space shot.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1613 ;;Total ram usage:        0 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    9
  1616 ;; This function calls:
  1617 ;;		_Command
  1618 ;;		_LCDready
  1619 ;;		_LongDelay
  1620 ;; This function is called by:
  1621 ;;		_main
  1622 ;;		_Dificultad
  1623 ;;		_Menu1
  1624 ;;		_Menu2
  1625 ;;		_Menu3
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text6
  1630  001CD8                     __ptext6:
  1631                           	opt stack 0
  1632  001CD8                     _LCDsetup:
  1633                           	opt stack 20
  1634                           
  1635                           ;space shot.c: 209: PORTCbits.RC2=0x00;
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;incstack = 0
  1639  001CD8  9482               	bcf	3970,2,c	;volatile
  1640                           
  1641                           ;space shot.c: 210: LongDelay();
  1642  001CDA  EC0F  F00F         	call	_LongDelay	;wreg free
  1643                           
  1644                           ;space shot.c: 212: PORTD= 0x38;
  1645  001CDE  0E38               	movlw	56
  1646  001CE0  6E83               	movwf	3971,c	;volatile
  1647                           
  1648                           ;space shot.c: 213: Command ();
  1649  001CE2  ECBD  F00F         	call	_Command	;wreg free
  1650                           
  1651                           ;space shot.c: 214: LongDelay();
  1652  001CE6  EC0F  F00F         	call	_LongDelay	;wreg free
  1653                           
  1654                           ;space shot.c: 216: PORTD= 0x0F;
  1655  001CEA  0E0F               	movlw	15
  1656  001CEC  6E83               	movwf	3971,c	;volatile
  1657                           
  1658                           ;space shot.c: 217: Command ();
  1659  001CEE  ECBD  F00F         	call	_Command	;wreg free
  1660                           
  1661                           ;space shot.c: 218: LCDready ();
  1662  001CF2  EC1C  F00F         	call	_LCDready	;wreg free
  1663                           
  1664                           ;space shot.c: 220: PORTD= 0x01;
  1665  001CF6  0E01               	movlw	1
  1666  001CF8  6E83               	movwf	3971,c	;volatile
  1667                           
  1668                           ;space shot.c: 221: Command ();
  1669  001CFA  ECBD  F00F         	call	_Command	;wreg free
  1670                           
  1671                           ;space shot.c: 222: LCDready();
  1672  001CFE  EC1C  F00F         	call	_LCDready	;wreg free
  1673  001D02  0012               	return		;funcret
  1674  001D04                     __end_of_LCDsetup:
  1675                           	opt stack 0
  1676                           tblptru	equ	0xFF8
  1677                           tblptrh	equ	0xFF7
  1678                           tblptrl	equ	0xFF6
  1679                           tablat	equ	0xFF5
  1680                           prodh	equ	0xFF4
  1681                           prodl	equ	0xFF3
  1682                           intcon	equ	0xFF2
  1683                           intcon2	equ	0xFF1
  1684                           postinc0	equ	0xFEE
  1685                           wreg	equ	0xFE8
  1686                           postdec1	equ	0xFE5
  1687                           fsr1l	equ	0xFE1
  1688                           indf2	equ	0xFDF
  1689                           fsr2h	equ	0xFDA
  1690                           fsr2l	equ	0xFD9
  1691                           
  1692 ;; *************** function _LongDelay *****************
  1693 ;; Defined at:
  1694 ;;		line 249 in file "space shot.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;		None
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  LDelay          1    1[BANK0h] unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1709 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1710 ;;      Temps:          0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1711 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1712 ;;Total ram usage:        2 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    7
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_LCDsetup
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text7
  1723  001E1E                     __ptext7:
  1724                           	opt stack 0
  1725  001E1E                     _LongDelay:
  1726                           	opt stack 21
  1727                           
  1728                           ;space shot.c: 250: unsigned char LDelay=0;
  1729                           
  1730                           ;incstack = 0
  1731  001E1E  0E00               	movlw	0
  1732  001E20  0100               	movlb	0	; () banked
  1733  001E22  6F84               	movwf	LongDelay@LDelay& (0+255),b
  1734  001E24                     l3543:
  1735                           
  1736                           ; BSR set to: 0
  1737  001E24  0100               	movlb	0	; () banked
  1738  001E26  2B84               	incf	LongDelay@LDelay& (0+255),f,b
  1739  001E28  0584               	decf	LongDelay@LDelay& (0+255),w,b
  1740  001E2A  0100               	movlb	0	; () banked
  1741  001E2C  6F83               	movwf	??_LongDelay& (0+255),b
  1742  001E2E  0E53               	movlw	83
  1743  001E30  0100               	movlb	0	; () banked
  1744  001E32  6583               	cpfsgt	??_LongDelay& (0+255),b
  1745  001E34  D7F7               	goto	l3543
  1746  001E36  0012               	return	
  1747  001E38                     __end_of_LongDelay:
  1748                           	opt stack 0
  1749                           tblptru	equ	0xFF8
  1750                           tblptrh	equ	0xFF7
  1751                           tblptrl	equ	0xFF6
  1752                           tablat	equ	0xFF5
  1753                           prodh	equ	0xFF4
  1754                           prodl	equ	0xFF3
  1755                           intcon	equ	0xFF2
  1756                           intcon2	equ	0xFF1
  1757                           postinc0	equ	0xFEE
  1758                           wreg	equ	0xFE8
  1759                           postdec1	equ	0xFE5
  1760                           fsr1l	equ	0xFE1
  1761                           indf2	equ	0xFDF
  1762                           fsr2h	equ	0xFDA
  1763                           fsr2l	equ	0xFD9
  1764                           
  1765 ;; *************** function _Command *****************
  1766 ;; Defined at:
  1767 ;;		line 242 in file "space shot.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    8
  1788 ;; This function calls:
  1789 ;;		_ShortDelay
  1790 ;; This function is called by:
  1791 ;;		_LCDsetup
  1792 ;;		_Menu3
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text8
  1797  001F7A                     __ptext8:
  1798                           	opt stack 0
  1799  001F7A                     _Command:
  1800                           	opt stack 20
  1801                           
  1802                           ;space shot.c: 243: PORTCbits.RC0=0;
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;incstack = 0
  1806  001F7A  9082               	bcf	3970,0,c	;volatile
  1807                           
  1808                           ;space shot.c: 244: PORTCbits.RC1=0;
  1809  001F7C  9282               	bcf	3970,1,c	;volatile
  1810                           
  1811                           ;space shot.c: 245: PORTCbits.RC2=1;
  1812  001F7E  8482               	bsf	3970,2,c	;volatile
  1813                           
  1814                           ;space shot.c: 246: ShortDelay();
  1815  001F80  EC5A  F00F         	call	_ShortDelay	;wreg free
  1816                           
  1817                           ;space shot.c: 247: PORTCbits.RC2=0;
  1818  001F84  9482               	bcf	3970,2,c	;volatile
  1819  001F86  0012               	return		;funcret
  1820  001F88                     __end_of_Command:
  1821                           	opt stack 0
  1822                           tblptru	equ	0xFF8
  1823                           tblptrh	equ	0xFF7
  1824                           tblptrl	equ	0xFF6
  1825                           tablat	equ	0xFF5
  1826                           prodh	equ	0xFF4
  1827                           prodl	equ	0xFF3
  1828                           intcon	equ	0xFF2
  1829                           intcon2	equ	0xFF1
  1830                           postinc0	equ	0xFEE
  1831                           wreg	equ	0xFE8
  1832                           postdec1	equ	0xFE5
  1833                           fsr1l	equ	0xFE1
  1834                           indf2	equ	0xFDF
  1835                           fsr2h	equ	0xFDA
  1836                           fsr2l	equ	0xFD9
  1837                           
  1838 ;; *************** function _Bienvenido *****************
  1839 ;; Defined at:
  1840 ;;		line 262 in file "space shot.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  x               1    2[BANK0h] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1855 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1857 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1858 ;;Total ram usage:        2 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    9
  1861 ;; This function calls:
  1862 ;;		_LCDdisplay
  1863 ;;		_LCDready
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text9
  1870  001A48                     __ptext9:
  1871                           	opt stack 0
  1872  001A48                     _Bienvenido:
  1873                           	opt stack 21
  1874                           
  1875                           ;space shot.c: 263: unsigned char x;
  1876                           ;space shot.c: 264: for(x=0;x<10;x++){
  1877                           
  1878                           ;incstack = 0
  1879  001A48  0E00               	movlw	0
  1880  001A4A  0100               	movlb	0	; () banked
  1881  001A4C  6F85               	movwf	Bienvenido@x& (0+255),b
  1882  001A4E                     l3599:
  1883                           
  1884                           ; BSR set to: 0
  1885  001A4E  0E09               	movlw	9
  1886  001A50  0100               	movlb	0	; () banked
  1887  001A52  6585               	cpfsgt	Bienvenido@x& (0+255),b
  1888  001A54  D001               	goto	l3603
  1889  001A56  D02A               	goto	l3615
  1890  001A58                     l3603:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;space shot.c: 265: myRAMarray [x] = INICIO [x];
  1894  001A58  0100               	movlb	0	; () banked
  1895  001A5A  5185               	movf	Bienvenido@x& (0+255),w,b
  1896  001A5C  0D01               	mullw	1
  1897  001A5E  0E20               	movlw	32
  1898  001A60  24F3               	addwf	prodl,w,c
  1899  001A62  6EF6               	movwf	tblptrl,c
  1900  001A64  0E00               	movlw	0
  1901  001A66  20F4               	addwfc	prodh,w,c
  1902  001A68  6EF7               	movwf	tblptrh,c
  1903  001A6A  6AF8               	clrf	tblptru,c
  1904  001A6C  0E00               	movlw	0
  1905  001A6E  22F8               	addwfc	tblptru,f,c
  1906  001A70  0100               	movlb	0	; () banked
  1907  001A72  5185               	movf	Bienvenido@x& (0+255),w,b
  1908  001A74  0D01               	mullw	1
  1909  001A76  0E20               	movlw	32
  1910  001A78  24F3               	addwf	prodl,w,c
  1911  001A7A  6ED9               	movwf	fsr2l,c
  1912  001A7C  0E00               	movlw	0
  1913  001A7E  20F4               	addwfc	prodh,w,c
  1914  001A80  6EDA               	movwf	fsr2h,c
  1915  001A82  0008               	tblrd		*
  1916  001A84  CFF5 FFDF          	movff	tablat,indf2
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;space shot.c: 266: PORTD=myRAMarray[x];
  1920  001A88  0100               	movlb	0	; () banked
  1921  001A8A  5185               	movf	Bienvenido@x& (0+255),w,b
  1922  001A8C  0D01               	mullw	1
  1923  001A8E  0E20               	movlw	32
  1924  001A90  24F3               	addwf	prodl,w,c
  1925  001A92  6ED9               	movwf	fsr2l,c
  1926  001A94  0E00               	movlw	0
  1927  001A96  20F4               	addwfc	prodh,w,c
  1928  001A98  6EDA               	movwf	fsr2h,c
  1929  001A9A  50DF               	movf	indf2,w,c
  1930  001A9C  6E83               	movwf	3971,c	;volatile
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;space shot.c: 267: LCDdisplay();
  1934  001A9E  ECC4  F00F         	call	_LCDdisplay	;wreg free
  1935                           
  1936                           ;space shot.c: 268: LCDready();
  1937  001AA2  EC1C  F00F         	call	_LCDready	;wreg free
  1938  001AA6  0100               	movlb	0	; () banked
  1939  001AA8  2B85               	incf	Bienvenido@x& (0+255),f,b
  1940  001AAA  D7D1               	goto	l3599
  1941  001AAC                     l3615:
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;space shot.c: 269: }
  1945                           ;space shot.c: 270: for(x=0; x<10; x++){
  1946  001AAC  0E00               	movlw	0
  1947  001AAE  0100               	movlb	0	; () banked
  1948  001AB0  6F85               	movwf	Bienvenido@x& (0+255),b
  1949  001AB2                     l3617:
  1950                           
  1951                           ; BSR set to: 0
  1952  001AB2  0E09               	movlw	9
  1953  001AB4  0100               	movlb	0	; () banked
  1954  001AB6  6585               	cpfsgt	Bienvenido@x& (0+255),b
  1955  001AB8  D001               	goto	l3621
  1956  001ABA  0012               	return	
  1957  001ABC                     l3621:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;space shot.c: 271: _delay(197000);
  1961  001ABC  0E00               	movlw	0
  1962  001ABE  0100               	movlb	0	; () banked
  1963  001AC0  6F84               	movwf	??_Bienvenido& (0+255),b
  1964  001AC2  0ED7               	movlw	215
  1965  001AC4                     u3807:
  1966  001AC4  2EE8               	decfsz	wreg,f,c
  1967  001AC6  D7FE               	goto	u3807
  1968  001AC8  2F84               	decfsz	??_Bienvenido& (0+255),f,b
  1969  001ACA  D7FC               	goto	u3807
  1970  001ACC  F000               	nop	
  1971  001ACE  0100               	movlb	0	; () banked
  1972  001AD0  2B85               	incf	Bienvenido@x& (0+255),f,b
  1973  001AD2  D7EF               	goto	l3617
  1974  001AD4                     __end_of_Bienvenido:
  1975                           	opt stack 0
  1976                           tblptru	equ	0xFF8
  1977                           tblptrh	equ	0xFF7
  1978                           tblptrl	equ	0xFF6
  1979                           tablat	equ	0xFF5
  1980                           prodh	equ	0xFF4
  1981                           prodl	equ	0xFF3
  1982                           intcon	equ	0xFF2
  1983                           intcon2	equ	0xFF1
  1984                           postinc0	equ	0xFEE
  1985                           wreg	equ	0xFE8
  1986                           postdec1	equ	0xFE5
  1987                           fsr1l	equ	0xFE1
  1988                           indf2	equ	0xFDF
  1989                           fsr2h	equ	0xFDA
  1990                           fsr2l	equ	0xFD9
  1991                           
  1992 ;; *************** function _LCDready *****************
  1993 ;; Defined at:
  1994 ;;		line 224 in file "space shot.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  2008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2012 ;;Total ram usage:        0 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    8
  2015 ;; This function calls:
  2016 ;;		_ShortDelay
  2017 ;; This function is called by:
  2018 ;;		_LCDsetup
  2019 ;;		_Bienvenido
  2020 ;;		_Dificultad
  2021 ;;		_Menu1
  2022 ;;		_Menu2
  2023 ;;		_Menu3
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text10
  2028  001E38                     __ptext10:
  2029                           	opt stack 0
  2030  001E38                     _LCDready:
  2031                           	opt stack 20
  2032                           
  2033                           ;space shot.c: 225: TRISD=0xFF;
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;incstack = 0
  2037  001E38  6895               	setf	3989,c	;volatile
  2038                           
  2039                           ;space shot.c: 226: PORTCbits.RC0=0;
  2040  001E3A  9082               	bcf	3970,0,c	;volatile
  2041                           
  2042                           ;space shot.c: 227: PORTCbits.RC1=1;
  2043  001E3C  8282               	bsf	3970,1,c	;volatile
  2044                           
  2045                           ;space shot.c: 228: while (PORTDbits.RD7 == 1)
  2046  001E3E  D004               	goto	l3557
  2047  001E40                     l178:
  2048                           
  2049                           ;space shot.c: 229: { PORTCbits.RC2=1;
  2050  001E40  8482               	bsf	3970,2,c	;volatile
  2051                           
  2052                           ;space shot.c: 230: ShortDelay();
  2053  001E42  EC5A  F00F         	call	_ShortDelay	;wreg free
  2054                           
  2055                           ;space shot.c: 231: PORTCbits.RC2=0;
  2056  001E46  9482               	bcf	3970,2,c	;volatile
  2057  001E48                     l3557:
  2058  001E48  BE83               	btfsc	3971,7,c	;volatile
  2059  001E4A  D7FA               	goto	l178
  2060                           
  2061                           ;space shot.c: 232: }
  2062                           ;space shot.c: 233: TRISD=0x00;
  2063  001E4C  0E00               	movlw	0
  2064  001E4E  6E95               	movwf	3989,c	;volatile
  2065  001E50  0012               	return		;funcret
  2066  001E52                     __end_of_LCDready:
  2067                           	opt stack 0
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           prodh	equ	0xFF4
  2073                           prodl	equ	0xFF3
  2074                           intcon	equ	0xFF2
  2075                           intcon2	equ	0xFF1
  2076                           postinc0	equ	0xFEE
  2077                           wreg	equ	0xFE8
  2078                           postdec1	equ	0xFE5
  2079                           fsr1l	equ	0xFE1
  2080                           indf2	equ	0xFDF
  2081                           fsr2h	equ	0xFDA
  2082                           fsr2l	equ	0xFD9
  2083                           
  2084 ;; *************** function _LCDdisplay *****************
  2085 ;; Defined at:
  2086 ;;		line 235 in file "space shot.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  2100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2104 ;;Total ram usage:        0 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    8
  2107 ;; This function calls:
  2108 ;;		_ShortDelay
  2109 ;; This function is called by:
  2110 ;;		_Bienvenido
  2111 ;;		_Dificultad
  2112 ;;		_Menu1
  2113 ;;		_Menu2
  2114 ;;		_Menu3
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text11
  2119  001F88                     __ptext11:
  2120                           	opt stack 0
  2121  001F88                     _LCDdisplay:
  2122                           	opt stack 21
  2123                           
  2124                           ;space shot.c: 236: PORTCbits.RC0=1;
  2125                           
  2126                           ;incstack = 0
  2127  001F88  8082               	bsf	3970,0,c	;volatile
  2128                           
  2129                           ;space shot.c: 237: PORTCbits.RC1=0;
  2130  001F8A  9282               	bcf	3970,1,c	;volatile
  2131                           
  2132                           ;space shot.c: 238: PORTCbits.RC2=1;
  2133  001F8C  8482               	bsf	3970,2,c	;volatile
  2134                           
  2135                           ;space shot.c: 239: ShortDelay();
  2136  001F8E  EC5A  F00F         	call	_ShortDelay	;wreg free
  2137                           
  2138                           ;space shot.c: 240: PORTCbits.RC2=0;
  2139  001F92  9482               	bcf	3970,2,c	;volatile
  2140  001F94  0012               	return		;funcret
  2141  001F96                     __end_of_LCDdisplay:
  2142                           	opt stack 0
  2143                           tblptru	equ	0xFF8
  2144                           tblptrh	equ	0xFF7
  2145                           tblptrl	equ	0xFF6
  2146                           tablat	equ	0xFF5
  2147                           prodh	equ	0xFF4
  2148                           prodl	equ	0xFF3
  2149                           intcon	equ	0xFF2
  2150                           intcon2	equ	0xFF1
  2151                           postinc0	equ	0xFEE
  2152                           wreg	equ	0xFE8
  2153                           postdec1	equ	0xFE5
  2154                           fsr1l	equ	0xFE1
  2155                           indf2	equ	0xFDF
  2156                           fsr2h	equ	0xFDA
  2157                           fsr2l	equ	0xFD9
  2158                           
  2159 ;; *************** function _ShortDelay *****************
  2160 ;; Defined at:
  2161 ;;		line 254 in file "space shot.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  SDelay          1    0[BANK0h] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2176 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2178 ;;      Totals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2179 ;;Total ram usage:        1 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    7
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		_LCDready
  2186 ;;		_LCDdisplay
  2187 ;;		_Command
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text12
  2192  001EB4                     __ptext12:
  2193                           	opt stack 0
  2194  001EB4                     _ShortDelay:
  2195                           	opt stack 20
  2196                           
  2197                           ;space shot.c: 255: unsigned char SDelay=0;
  2198                           
  2199                           ;incstack = 0
  2200  001EB4  0E00               	movlw	0
  2201  001EB6  0100               	movlb	0	; () banked
  2202  001EB8  6F83               	movwf	ShortDelay@SDelay& (0+255),b
  2203  001EBA                     l3539:
  2204                           
  2205                           ; BSR set to: 0
  2206  001EBA  0100               	movlb	0	; () banked
  2207  001EBC  2B83               	incf	ShortDelay@SDelay& (0+255),f,b
  2208  001EBE  0100               	movlb	0	; () banked
  2209  001EC0  0583               	decf	ShortDelay@SDelay& (0+255),w,b
  2210  001EC2  A4D8               	btfss	status,2,c
  2211  001EC4  0012               	return	
  2212  001EC6  D7F9               	goto	l3539
  2213  001EC8                     __end_of_ShortDelay:
  2214                           	opt stack 0
  2215                           tblptru	equ	0xFF8
  2216                           tblptrh	equ	0xFF7
  2217                           tblptrl	equ	0xFF6
  2218                           tablat	equ	0xFF5
  2219                           prodh	equ	0xFF4
  2220                           prodl	equ	0xFF3
  2221                           intcon	equ	0xFF2
  2222                           intcon2	equ	0xFF1
  2223                           postinc0	equ	0xFEE
  2224                           wreg	equ	0xFE8
  2225                           postdec1	equ	0xFE5
  2226                           fsr1l	equ	0xFE1
  2227                           indf2	equ	0xFDF
  2228                           fsr2h	equ	0xFDA
  2229                           fsr2l	equ	0xFD9
  2230                           status	equ	0xFD8
  2231                           
  2232 ;; *************** function _IRH *****************
  2233 ;; Defined at:
  2234 ;;		line 187 in file "space shot.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;		None
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  2248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0      14       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2251 ;;      Totals:         0       0       0       0      14       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2252 ;;Total ram usage:       14 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    6
  2255 ;; This function calls:
  2256 ;;		_One_Shot_N1
  2257 ;;		_One_Shot_N2
  2258 ;;		_One_Shot_N3
  2259 ;;		_Reset_One_Shot_N1
  2260 ;;		_Reset_One_Shot_N2
  2261 ;;		_Reset_One_Shot_N3
  2262 ;; This function is called by:
  2263 ;;		Interrupt level 2
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	intcode
  2268  000008                     __pintcode:
  2269                           	opt stack 0
  2270  000008                     _IRH:
  2271                           	opt stack 20
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;incstack = 0
  2275  000008  821D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2276  00000A  CFFA F00F          	movff	pclath,??_IRH
  2277  00000E  CFFB F010          	movff	pclatu,??_IRH+1
  2278  000012  EDB2  F00B         	call	int_func,f	;refresh shadow registers
  2279                           pclatu	equ	0xFFB
  2280                           pclath	equ	0xFFA
  2281                           tblptru	equ	0xFF8
  2282                           tblptrh	equ	0xFF7
  2283                           tblptrl	equ	0xFF6
  2284                           tablat	equ	0xFF5
  2285                           prodh	equ	0xFF4
  2286                           prodl	equ	0xFF3
  2287                           intcon	equ	0xFF2
  2288                           intcon2	equ	0xFF1
  2289                           postinc0	equ	0xFEE
  2290                           wreg	equ	0xFE8
  2291                           postdec1	equ	0xFE5
  2292                           fsr1l	equ	0xFE1
  2293                           indf2	equ	0xFDF
  2294                           fsr2h	equ	0xFDA
  2295                           fsr2l	equ	0xFD9
  2296                           status	equ	0xFD8
  2297                           
  2298                           	psect	intcode_body
  2299  001764                     __pintcode_body:
  2300                           	opt stack 20
  2301  001764                     int_func:
  2302                           	opt stack 20
  2303  001764  0006               	pop		; remove dummy address from shadow register refresh
  2304  001766  CFE9 F011          	movff	fsr0l,??_IRH+2
  2305  00176A  CFEA F012          	movff	fsr0h,??_IRH+3
  2306  00176E  CFE1 F013          	movff	fsr1l,??_IRH+4
  2307  001772  CFE2 F014          	movff	fsr1h,??_IRH+5
  2308  001776  CFD9 F015          	movff	fsr2l,??_IRH+6
  2309  00177A  CFDA F016          	movff	fsr2h,??_IRH+7
  2310  00177E  CFF3 F017          	movff	prodl,??_IRH+8
  2311  001782  CFF4 F018          	movff	prodh,??_IRH+9
  2312  001786  CFF6 F019          	movff	tblptrl,??_IRH+10
  2313  00178A  CFF7 F01A          	movff	tblptrh,??_IRH+11
  2314  00178E  CFF8 F01B          	movff	tblptru,??_IRH+12
  2315  001792  CFF5 F01C          	movff	tablat,??_IRH+13
  2316                           
  2317                           ;space shot.c: 189: if (PORTBbits.RB5==1){
  2318  001796  AA81               	btfss	3969,5,c	;volatile
  2319  001798  D006               	goto	i2l3519
  2320                           
  2321                           ;space shot.c: 190: One_Shot_N1 ();
  2322  00179A  EC4E  F00F         	call	_One_Shot_N1	;wreg free
  2323                           
  2324                           ;space shot.c: 191: if (ons_N1 == 1)
  2325  00179E  040C               	decf	_ons_N1,w,c
  2326  0017A0  B4D8               	btfsc	status,2,c
  2327                           
  2328                           ;space shot.c: 192: Reset_One_Shot_N1();
  2329  0017A2  EC76  F00F         	call	_Reset_One_Shot_N1	;wreg free
  2330  0017A6                     i2l3519:
  2331                           
  2332                           ;space shot.c: 193: }
  2333                           ;space shot.c: 194: if (PORTBbits.RB6==1){
  2334  0017A6  AC81               	btfss	3969,6,c	;volatile
  2335  0017A8  D006               	goto	i2l3527
  2336                           
  2337                           ;space shot.c: 195: One_Shot_N2 ();
  2338  0017AA  EC42  F00F         	call	_One_Shot_N2	;wreg free
  2339                           
  2340                           ;space shot.c: 196: if (ons_N2 == 1)
  2341  0017AE  040D               	decf	_ons_N2,w,c
  2342  0017B0  B4D8               	btfsc	status,2,c
  2343                           
  2344                           ;space shot.c: 197: Reset_One_Shot_N2();
  2345  0017B2  EC6D  F00F         	call	_Reset_One_Shot_N2	;wreg free
  2346  0017B6                     i2l3527:
  2347                           
  2348                           ;space shot.c: 198: }
  2349                           ;space shot.c: 199: if (PORTBbits.RB7==1){
  2350  0017B6  AE81               	btfss	3969,7,c	;volatile
  2351  0017B8  D006               	goto	i2l3535
  2352                           
  2353                           ;space shot.c: 200: One_Shot_N3 ();
  2354  0017BA  EC36  F00F         	call	_One_Shot_N3	;wreg free
  2355                           
  2356                           ;space shot.c: 201: if (ons_N3 == 1)
  2357  0017BE  040E               	decf	_ons_N3,w,c
  2358  0017C0  B4D8               	btfsc	status,2,c
  2359                           
  2360                           ;space shot.c: 202: Reset_One_Shot_N3();
  2361  0017C2  EC64  F00F         	call	_Reset_One_Shot_N3	;wreg free
  2362  0017C6                     i2l3535:
  2363                           
  2364                           ;space shot.c: 203: }
  2365                           ;space shot.c: 204: INTCONbits.RBIF=0;
  2366  0017C6  90F2               	bcf	intcon,0,c	;volatile
  2367  0017C8  C01C  FFF5         	movff	??_IRH+13,tablat
  2368  0017CC  C01B  FFF8         	movff	??_IRH+12,tblptru
  2369  0017D0  C01A  FFF7         	movff	??_IRH+11,tblptrh
  2370  0017D4  C019  FFF6         	movff	??_IRH+10,tblptrl
  2371  0017D8  C018  FFF4         	movff	??_IRH+9,prodh
  2372  0017DC  C017  FFF3         	movff	??_IRH+8,prodl
  2373  0017E0  C016  FFDA         	movff	??_IRH+7,fsr2h
  2374  0017E4  C015  FFD9         	movff	??_IRH+6,fsr2l
  2375  0017E8  C014  FFE2         	movff	??_IRH+5,fsr1h
  2376  0017EC  C013  FFE1         	movff	??_IRH+4,fsr1l
  2377  0017F0  C012  FFEA         	movff	??_IRH+3,fsr0h
  2378  0017F4  C011  FFE9         	movff	??_IRH+2,fsr0l
  2379  0017F8  C010  FFFB         	movff	??_IRH+1,pclatu
  2380  0017FC  C00F  FFFA         	movff	??_IRH,pclath
  2381  001800  921D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2382  001802  0011               	retfie		f
  2383  001804                     __end_of_IRH:
  2384                           	opt stack 0
  2385                           pclatu	equ	0xFFB
  2386                           pclath	equ	0xFFA
  2387                           tblptru	equ	0xFF8
  2388                           tblptrh	equ	0xFF7
  2389                           tblptrl	equ	0xFF6
  2390                           tablat	equ	0xFF5
  2391                           prodh	equ	0xFF4
  2392                           prodl	equ	0xFF3
  2393                           intcon	equ	0xFF2
  2394                           intcon2	equ	0xFF1
  2395                           postinc0	equ	0xFEE
  2396                           fsr0h	equ	0xFEA
  2397                           fsr0l	equ	0xFE9
  2398                           wreg	equ	0xFE8
  2399                           postdec1	equ	0xFE5
  2400                           fsr1h	equ	0xFE2
  2401                           fsr1l	equ	0xFE1
  2402                           indf2	equ	0xFDF
  2403                           fsr2h	equ	0xFDA
  2404                           fsr2l	equ	0xFD9
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _Reset_One_Shot_N3 *****************
  2408 ;; Defined at:
  2409 ;;		line 413 in file "space shot.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;		None
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg, status,2, status,0, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  2423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2427 ;;Total ram usage:        0 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    1
  2430 ;; This function calls:
  2431 ;;		_Antibounce
  2432 ;; This function is called by:
  2433 ;;		_IRH
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text14
  2438  001EC8                     __ptext14:
  2439                           	opt stack 0
  2440  001EC8                     _Reset_One_Shot_N3:
  2441                           	opt stack 24
  2442                           
  2443                           ;space shot.c: 414: if (PORTBbits.RB7==0)
  2444                           
  2445                           ;incstack = 0
  2446  001EC8  BE81               	btfsc	3969,7,c	;volatile
  2447  001ECA  0012               	return	
  2448                           
  2449                           ;space shot.c: 415: Antibounce();
  2450  001ECC  EC01  F00F         	call	_Antibounce	;wreg free
  2451                           
  2452                           ;space shot.c: 418: if (PORTBbits.RB7==0)
  2453                           
  2454                           ;space shot.c: 416: else
  2455                           ;space shot.c: 417: return;
  2456  001ED0  BE81               	btfsc	3969,7,c	;volatile
  2457  001ED2  0012               	return	
  2458                           
  2459                           ;space shot.c: 419: ons_N3 = 0;
  2460  001ED4  0E00               	movlw	0
  2461  001ED6  6E0E               	movwf	_ons_N3,c
  2462  001ED8  0012               	return	
  2463  001EDA                     __end_of_Reset_One_Shot_N3:
  2464                           	opt stack 0
  2465                           pclatu	equ	0xFFB
  2466                           pclath	equ	0xFFA
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           prodh	equ	0xFF4
  2472                           prodl	equ	0xFF3
  2473                           intcon	equ	0xFF2
  2474                           intcon2	equ	0xFF1
  2475                           postinc0	equ	0xFEE
  2476                           fsr0h	equ	0xFEA
  2477                           fsr0l	equ	0xFE9
  2478                           wreg	equ	0xFE8
  2479                           postdec1	equ	0xFE5
  2480                           fsr1h	equ	0xFE2
  2481                           fsr1l	equ	0xFE1
  2482                           indf2	equ	0xFDF
  2483                           fsr2h	equ	0xFDA
  2484                           fsr2l	equ	0xFD9
  2485                           status	equ	0xFD8
  2486                           
  2487 ;; *************** function _Reset_One_Shot_N2 *****************
  2488 ;; Defined at:
  2489 ;;		line 395 in file "space shot.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  2503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    1
  2510 ;; This function calls:
  2511 ;;		_Antibounce
  2512 ;; This function is called by:
  2513 ;;		_IRH
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text15
  2518  001EDA                     __ptext15:
  2519                           	opt stack 0
  2520  001EDA                     _Reset_One_Shot_N2:
  2521                           	opt stack 24
  2522                           
  2523                           ;space shot.c: 396: if (PORTBbits.RB6==0)
  2524                           
  2525                           ;incstack = 0
  2526  001EDA  BC81               	btfsc	3969,6,c	;volatile
  2527  001EDC  0012               	return	
  2528                           
  2529                           ;space shot.c: 397: Antibounce();
  2530  001EDE  EC01  F00F         	call	_Antibounce	;wreg free
  2531                           
  2532                           ;space shot.c: 400: if (PORTBbits.RB6==0)
  2533                           
  2534                           ;space shot.c: 398: else
  2535                           ;space shot.c: 399: return;
  2536  001EE2  BC81               	btfsc	3969,6,c	;volatile
  2537  001EE4  0012               	return	
  2538                           
  2539                           ;space shot.c: 401: ons_N2 = 0;
  2540  001EE6  0E00               	movlw	0
  2541  001EE8  6E0D               	movwf	_ons_N2,c
  2542  001EEA  0012               	return	
  2543  001EEC                     __end_of_Reset_One_Shot_N2:
  2544                           	opt stack 0
  2545                           pclatu	equ	0xFFB
  2546                           pclath	equ	0xFFA
  2547                           tblptru	equ	0xFF8
  2548                           tblptrh	equ	0xFF7
  2549                           tblptrl	equ	0xFF6
  2550                           tablat	equ	0xFF5
  2551                           prodh	equ	0xFF4
  2552                           prodl	equ	0xFF3
  2553                           intcon	equ	0xFF2
  2554                           intcon2	equ	0xFF1
  2555                           postinc0	equ	0xFEE
  2556                           fsr0h	equ	0xFEA
  2557                           fsr0l	equ	0xFE9
  2558                           wreg	equ	0xFE8
  2559                           postdec1	equ	0xFE5
  2560                           fsr1h	equ	0xFE2
  2561                           fsr1l	equ	0xFE1
  2562                           indf2	equ	0xFDF
  2563                           fsr2h	equ	0xFDA
  2564                           fsr2l	equ	0xFD9
  2565                           status	equ	0xFD8
  2566                           
  2567 ;; *************** function _Reset_One_Shot_N1 *****************
  2568 ;; Defined at:
  2569 ;;		line 377 in file "space shot.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;		None
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  2583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2587 ;;Total ram usage:        0 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    1
  2590 ;; This function calls:
  2591 ;;		_Antibounce
  2592 ;; This function is called by:
  2593 ;;		_IRH
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text16
  2598  001EEC                     __ptext16:
  2599                           	opt stack 0
  2600  001EEC                     _Reset_One_Shot_N1:
  2601                           	opt stack 24
  2602                           
  2603                           ;space shot.c: 378: if (PORTBbits.RB5==0)
  2604                           
  2605                           ;incstack = 0
  2606  001EEC  BA81               	btfsc	3969,5,c	;volatile
  2607  001EEE  0012               	return	
  2608                           
  2609                           ;space shot.c: 379: Antibounce();
  2610  001EF0  EC01  F00F         	call	_Antibounce	;wreg free
  2611                           
  2612                           ;space shot.c: 382: if (PORTBbits.RB5==0)
  2613                           
  2614                           ;space shot.c: 380: else
  2615                           ;space shot.c: 381: return;
  2616  001EF4  BA81               	btfsc	3969,5,c	;volatile
  2617  001EF6  0012               	return	
  2618                           
  2619                           ;space shot.c: 383: ons_N1 = 0;
  2620  001EF8  0E00               	movlw	0
  2621  001EFA  6E0C               	movwf	_ons_N1,c
  2622  001EFC  0012               	return	
  2623  001EFE                     __end_of_Reset_One_Shot_N1:
  2624                           	opt stack 0
  2625                           pclatu	equ	0xFFB
  2626                           pclath	equ	0xFFA
  2627                           tblptru	equ	0xFF8
  2628                           tblptrh	equ	0xFF7
  2629                           tblptrl	equ	0xFF6
  2630                           tablat	equ	0xFF5
  2631                           prodh	equ	0xFF4
  2632                           prodl	equ	0xFF3
  2633                           intcon	equ	0xFF2
  2634                           intcon2	equ	0xFF1
  2635                           postinc0	equ	0xFEE
  2636                           fsr0h	equ	0xFEA
  2637                           fsr0l	equ	0xFE9
  2638                           wreg	equ	0xFE8
  2639                           postdec1	equ	0xFE5
  2640                           fsr1h	equ	0xFE2
  2641                           fsr1l	equ	0xFE1
  2642                           indf2	equ	0xFDF
  2643                           fsr2h	equ	0xFDA
  2644                           fsr2l	equ	0xFD9
  2645                           status	equ	0xFD8
  2646                           
  2647 ;; *************** function _One_Shot_N3 *****************
  2648 ;; Defined at:
  2649 ;;		line 404 in file "space shot.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  2663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2667 ;;Total ram usage:        0 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    5
  2670 ;; This function calls:
  2671 ;;		_Antibounce
  2672 ;;		_N3
  2673 ;; This function is called by:
  2674 ;;		_IRH
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text17
  2679  001E6C                     __ptext17:
  2680                           	opt stack 0
  2681  001E6C                     _One_Shot_N3:
  2682                           	opt stack 20
  2683                           
  2684                           ;space shot.c: 405: if (ons_N3 == 1)
  2685                           
  2686                           ;incstack = 0
  2687  001E6C  040E               	decf	_ons_N3,w,c
  2688  001E6E  B4D8               	btfsc	status,2,c
  2689  001E70  0012               	return	
  2690                           
  2691                           ;space shot.c: 407: Antibounce();
  2692                           
  2693                           ;space shot.c: 406: return;
  2694  001E72  EC01  F00F         	call	_Antibounce	;wreg free
  2695                           
  2696                           ;space shot.c: 408: if (PORTBbits.RB7==1){
  2697  001E76  AE81               	btfss	3969,7,c	;volatile
  2698  001E78  0012               	return	
  2699                           
  2700                           ;space shot.c: 409: N3();
  2701  001E7A  EC3A  F009         	call	_N3	;wreg free
  2702                           
  2703                           ;space shot.c: 410: ons_N3=0;
  2704  001E7E  0E00               	movlw	0
  2705  001E80  6E0E               	movwf	_ons_N3,c
  2706  001E82  0012               	return	
  2707  001E84                     __end_of_One_Shot_N3:
  2708                           	opt stack 0
  2709                           pclatu	equ	0xFFB
  2710                           pclath	equ	0xFFA
  2711                           tblptru	equ	0xFF8
  2712                           tblptrh	equ	0xFF7
  2713                           tblptrl	equ	0xFF6
  2714                           tablat	equ	0xFF5
  2715                           prodh	equ	0xFF4
  2716                           prodl	equ	0xFF3
  2717                           intcon	equ	0xFF2
  2718                           intcon2	equ	0xFF1
  2719                           postinc0	equ	0xFEE
  2720                           fsr0h	equ	0xFEA
  2721                           fsr0l	equ	0xFE9
  2722                           wreg	equ	0xFE8
  2723                           postdec1	equ	0xFE5
  2724                           fsr1h	equ	0xFE2
  2725                           fsr1l	equ	0xFE1
  2726                           indf2	equ	0xFDF
  2727                           fsr2h	equ	0xFDA
  2728                           fsr2l	equ	0xFD9
  2729                           status	equ	0xFD8
  2730                           
  2731 ;; *************** function _N3 *****************
  2732 ;; Defined at:
  2733 ;;		line 792 in file "space shot.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  secuencia      10    0        unsigned char [10]
  2738 ;;  n3              1    5[COMRAM] unsigned char 
  2739 ;;  test            1    4[COMRAM] unsigned char 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  2749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2750 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2751 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2752 ;;      Totals:         1       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2753 ;;Total ram usage:        3 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    4
  2756 ;; This function calls:
  2757 ;;		_Resultado
  2758 ;;		___awmod
  2759 ;;		_rand
  2760 ;;		_srand
  2761 ;;		i2_Command
  2762 ;;		i2_LCDdisplay
  2763 ;;		i2_LCDready
  2764 ;;		i2_LCDsetup
  2765 ;; This function is called by:
  2766 ;;		_One_Shot_N3
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text18
  2771  001274                     __ptext18:
  2772                           	opt stack 0
  2773  001274                     _N3:
  2774                           	opt stack 20
  2775                           
  2776                           ;space shot.c: 793: PORTDbits.RD7=0;
  2777                           
  2778                           ;incstack = 0
  2779  001274  9E83               	bcf	3971,7,c	;volatile
  2780                           
  2781                           ;space shot.c: 794: LCDsetup();
  2782  001276  EC82  F00E         	call	i2_LCDsetup	;wreg free
  2783                           
  2784                           ;space shot.c: 795: unsigned char n3;
  2785                           ;space shot.c: 796: for(n3=0;n3<9;n3++){
  2786  00127A  0E00               	movlw	0
  2787  00127C  6E3F               	movwf	N3@n3,c
  2788  00127E                     i2l3119:
  2789  00127E  0E08               	movlw	8
  2790  001280  643F               	cpfsgt	N3@n3,c
  2791  001282  D001               	goto	i2l3123
  2792  001284  D026               	goto	i2l3135
  2793  001286                     i2l3123:
  2794                           
  2795                           ;space shot.c: 797: myRAMarray5 [n3] = NIVEL3[n3];
  2796  001286  503F               	movf	N3@n3,w,c
  2797  001288  0D01               	mullw	1
  2798  00128A  0E60               	movlw	96
  2799  00128C  24F3               	addwf	prodl,w,c
  2800  00128E  6EF6               	movwf	tblptrl,c
  2801  001290  0E00               	movlw	0
  2802  001292  20F4               	addwfc	prodh,w,c
  2803  001294  6EF7               	movwf	tblptrh,c
  2804  001296  6AF8               	clrf	tblptru,c
  2805  001298  0E00               	movlw	0
  2806  00129A  22F8               	addwfc	tblptru,f,c
  2807  00129C  503F               	movf	N3@n3,w,c
  2808  00129E  0D01               	mullw	1
  2809  0012A0  0E60               	movlw	96
  2810  0012A2  24F3               	addwf	prodl,w,c
  2811  0012A4  6ED9               	movwf	fsr2l,c
  2812  0012A6  0E00               	movlw	0
  2813  0012A8  20F4               	addwfc	prodh,w,c
  2814  0012AA  6EDA               	movwf	fsr2h,c
  2815  0012AC  0008               	tblrd		*
  2816  0012AE  CFF5 FFDF          	movff	tablat,indf2
  2817                           
  2818                           ;space shot.c: 798: PORTD=myRAMarray5[n3];
  2819  0012B2  503F               	movf	N3@n3,w,c
  2820  0012B4  0D01               	mullw	1
  2821  0012B6  0E60               	movlw	96
  2822  0012B8  24F3               	addwf	prodl,w,c
  2823  0012BA  6ED9               	movwf	fsr2l,c
  2824  0012BC  0E00               	movlw	0
  2825  0012BE  20F4               	addwfc	prodh,w,c
  2826  0012C0  6EDA               	movwf	fsr2h,c
  2827  0012C2  50DF               	movf	indf2,w,c
  2828  0012C4  6E83               	movwf	3971,c	;volatile
  2829                           
  2830                           ;space shot.c: 799: LCDdisplay();
  2831  0012C6  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  2832                           
  2833                           ;space shot.c: 800: LCDready();}
  2834  0012CA  EC29  F00F         	call	i2_LCDready	;wreg free
  2835  0012CE  2A3F               	incf	N3@n3,f,c
  2836  0012D0  D7D6               	goto	i2l3119
  2837  0012D2                     i2l3135:
  2838                           
  2839                           ;space shot.c: 801: for(n3=0; n3<10; n3++){
  2840  0012D2  0E00               	movlw	0
  2841  0012D4  6E3F               	movwf	N3@n3,c
  2842  0012D6                     i2l3137:
  2843  0012D6  0E09               	movlw	9
  2844  0012D8  643F               	cpfsgt	N3@n3,c
  2845  0012DA  D001               	goto	i2l3141
  2846  0012DC  D00A               	goto	i2l3145
  2847  0012DE                     i2l3141:
  2848                           
  2849                           ;space shot.c: 802: _delay(197000);
  2850  0012DE  0E00               	movlw	0
  2851  0012E0  6E5F               	movwf	??_N3& (0+255),c
  2852  0012E2  0ED7               	movlw	215
  2853  0012E4                     i2u381_47:
  2854  0012E4  2EE8               	decfsz	wreg,f,c
  2855  0012E6  D7FE               	goto	i2u381_47
  2856  0012E8  2E5F               	decfsz	??_N3& (0+255),f,c
  2857  0012EA  D7FC               	goto	i2u381_47
  2858  0012EC  F000               	nop	
  2859  0012EE  2A3F               	incf	N3@n3,f,c
  2860  0012F0  D7F2               	goto	i2l3137
  2861  0012F2                     i2l3145:
  2862                           
  2863                           ;space shot.c: 803: }
  2864                           ;space shot.c: 805: srand(t);
  2865  0012F2  C087  F057         	movff	_t,srand@x
  2866  0012F6  6A58               	clrf	srand@x+1,c
  2867  0012F8  ECB5  F00F         	call	_srand	;wreg free
  2868                           
  2869                           ;space shot.c: 806: unsigned char test= (rand()%5+1);
  2870  0012FC  ECA2  F00D         	call	_rand	;wreg free
  2871  001300  C04B  F03A         	movff	?_rand,___awmod@dividend
  2872  001304  C04C  F03B         	movff	?_rand+1,___awmod@dividend+1
  2873  001308  0E00               	movlw	0
  2874  00130A  6E3D               	movwf	___awmod@divisor+1,c
  2875  00130C  0E05               	movlw	5
  2876  00130E  6E3C               	movwf	___awmod@divisor,c
  2877  001310  EC6A  F00D         	call	___awmod	;wreg free
  2878  001314  283A               	incf	?___awmod,w,c
  2879  001316  6E3E               	movwf	N3@test,c
  2880                           
  2881                           ;space shot.c: 807: counter=0;
  2882  001318  0E00               	movlw	0
  2883  00131A  6E05               	movwf	_counter,c
  2884                           
  2885                           ;space shot.c: 808: acierto=0;
  2886  00131C  0E00               	movlw	0
  2887  00131E  6E04               	movwf	_acierto,c
  2888                           
  2889                           ;space shot.c: 809: unsigned char secuencia[10];
  2890                           ;space shot.c: 810: while (counter<=10){
  2891  001320  D07A               	goto	i2l3219
  2892  001322                     i2l3153:
  2893                           
  2894                           ;space shot.c: 811: test = (rand()%5+1);
  2895  001322  ECA2  F00D         	call	_rand	;wreg free
  2896  001326  C04B  F03A         	movff	?_rand,___awmod@dividend
  2897  00132A  C04C  F03B         	movff	?_rand+1,___awmod@dividend+1
  2898  00132E  0E00               	movlw	0
  2899  001330  6E3D               	movwf	___awmod@divisor+1,c
  2900  001332  0E05               	movlw	5
  2901  001334  6E3C               	movwf	___awmod@divisor,c
  2902  001336  EC6A  F00D         	call	___awmod	;wreg free
  2903  00133A  283A               	incf	?___awmod,w,c
  2904  00133C  6E3E               	movwf	N3@test,c
  2905                           
  2906                           ;space shot.c: 812: if (test<=1){
  2907  00133E  0E02               	movlw	2
  2908  001340  603E               	cpfslt	N3@test,c
  2909  001342  D012               	goto	i2l3167
  2910                           
  2911                           ;space shot.c: 813: PORTC=0b00001000;
  2912  001344  0E08               	movlw	8
  2913  001346  6E82               	movwf	3970,c	;volatile
  2914                           
  2915                           ;space shot.c: 815: for(n3=0; n3<6; n3++){
  2916  001348  0E00               	movlw	0
  2917  00134A  6E3F               	movwf	N3@n3,c
  2918  00134C                     i2l3159:
  2919  00134C  0E05               	movlw	5
  2920  00134E  643F               	cpfsgt	N3@n3,c
  2921  001350  D001               	goto	i2l3163
  2922  001352  D05E               	goto	i2l3215
  2923  001354                     i2l3163:
  2924                           
  2925                           ;space shot.c: 816: _delay(197000);
  2926  001354  0E00               	movlw	0
  2927  001356  6E5F               	movwf	??_N3& (0+255),c
  2928  001358  0ED7               	movlw	215
  2929  00135A                     i2u382_47:
  2930  00135A  2EE8               	decfsz	wreg,f,c
  2931  00135C  D7FE               	goto	i2u382_47
  2932  00135E  2E5F               	decfsz	??_N3& (0+255),f,c
  2933  001360  D7FC               	goto	i2u382_47
  2934  001362  F000               	nop	
  2935  001364  2A3F               	incf	N3@n3,f,c
  2936  001366  D7F2               	goto	i2l3159
  2937  001368                     i2l3167:
  2938                           
  2939                           ;space shot.c: 819: else if(test<=2){
  2940  001368  0E03               	movlw	3
  2941  00136A  603E               	cpfslt	N3@test,c
  2942  00136C  D012               	goto	i2l3179
  2943                           
  2944                           ;space shot.c: 820: PORTC=0b00010000;
  2945  00136E  0E10               	movlw	16
  2946  001370  6E82               	movwf	3970,c	;volatile
  2947                           
  2948                           ;space shot.c: 822: for(n3=0; n3<6; n3++){
  2949  001372  0E00               	movlw	0
  2950  001374  6E3F               	movwf	N3@n3,c
  2951  001376                     i2l3171:
  2952  001376  0E05               	movlw	5
  2953  001378  643F               	cpfsgt	N3@n3,c
  2954  00137A  D001               	goto	i2l3175
  2955  00137C  D049               	goto	i2l3215
  2956  00137E                     i2l3175:
  2957                           
  2958                           ;space shot.c: 823: _delay(197000);
  2959  00137E  0E00               	movlw	0
  2960  001380  6E5F               	movwf	??_N3& (0+255),c
  2961  001382  0ED7               	movlw	215
  2962  001384                     i2u383_47:
  2963  001384  2EE8               	decfsz	wreg,f,c
  2964  001386  D7FE               	goto	i2u383_47
  2965  001388  2E5F               	decfsz	??_N3& (0+255),f,c
  2966  00138A  D7FC               	goto	i2u383_47
  2967  00138C  F000               	nop	
  2968  00138E  2A3F               	incf	N3@n3,f,c
  2969  001390  D7F2               	goto	i2l3171
  2970  001392                     i2l3179:
  2971                           
  2972                           ;space shot.c: 826: else if(test<=3){
  2973  001392  0E04               	movlw	4
  2974  001394  603E               	cpfslt	N3@test,c
  2975  001396  D012               	goto	i2l3191
  2976                           
  2977                           ;space shot.c: 827: PORTC=0b00100000;
  2978  001398  0E20               	movlw	32
  2979  00139A  6E82               	movwf	3970,c	;volatile
  2980                           
  2981                           ;space shot.c: 829: for(n3=0; n3<6; n3++){
  2982  00139C  0E00               	movlw	0
  2983  00139E  6E3F               	movwf	N3@n3,c
  2984  0013A0                     i2l3183:
  2985  0013A0  0E05               	movlw	5
  2986  0013A2  643F               	cpfsgt	N3@n3,c
  2987  0013A4  D001               	goto	i2l3187
  2988  0013A6  D034               	goto	i2l3215
  2989  0013A8                     i2l3187:
  2990                           
  2991                           ;space shot.c: 830: _delay(197000);
  2992  0013A8  0E00               	movlw	0
  2993  0013AA  6E5F               	movwf	??_N3& (0+255),c
  2994  0013AC  0ED7               	movlw	215
  2995  0013AE                     i2u384_47:
  2996  0013AE  2EE8               	decfsz	wreg,f,c
  2997  0013B0  D7FE               	goto	i2u384_47
  2998  0013B2  2E5F               	decfsz	??_N3& (0+255),f,c
  2999  0013B4  D7FC               	goto	i2u384_47
  3000  0013B6  F000               	nop	
  3001  0013B8  2A3F               	incf	N3@n3,f,c
  3002  0013BA  D7F2               	goto	i2l3183
  3003  0013BC                     i2l3191:
  3004                           
  3005                           ;space shot.c: 833: else if(test<=4){
  3006  0013BC  0E05               	movlw	5
  3007  0013BE  603E               	cpfslt	N3@test,c
  3008  0013C0  D012               	goto	i2l3203
  3009                           
  3010                           ;space shot.c: 834: PORTC=0b01000000;
  3011  0013C2  0E40               	movlw	64
  3012  0013C4  6E82               	movwf	3970,c	;volatile
  3013                           
  3014                           ;space shot.c: 836: for(n3=0; n3<6; n3++){
  3015  0013C6  0E00               	movlw	0
  3016  0013C8  6E3F               	movwf	N3@n3,c
  3017  0013CA                     i2l3195:
  3018  0013CA  0E05               	movlw	5
  3019  0013CC  643F               	cpfsgt	N3@n3,c
  3020  0013CE  D001               	goto	i2l3199
  3021  0013D0  D01F               	goto	i2l3215
  3022  0013D2                     i2l3199:
  3023                           
  3024                           ;space shot.c: 837: _delay(197000);
  3025  0013D2  0E00               	movlw	0
  3026  0013D4  6E5F               	movwf	??_N3& (0+255),c
  3027  0013D6  0ED7               	movlw	215
  3028  0013D8                     i2u385_47:
  3029  0013D8  2EE8               	decfsz	wreg,f,c
  3030  0013DA  D7FE               	goto	i2u385_47
  3031  0013DC  2E5F               	decfsz	??_N3& (0+255),f,c
  3032  0013DE  D7FC               	goto	i2u385_47
  3033  0013E0  F000               	nop	
  3034  0013E2  2A3F               	incf	N3@n3,f,c
  3035  0013E4  D7F2               	goto	i2l3195
  3036  0013E6                     i2l3203:
  3037                           
  3038                           ;space shot.c: 840: else if(test<=5){
  3039  0013E6  0E06               	movlw	6
  3040  0013E8  603E               	cpfslt	N3@test,c
  3041  0013EA  D012               	goto	i2l3215
  3042                           
  3043                           ;space shot.c: 841: PORTC=0b10000000;
  3044  0013EC  0E80               	movlw	128
  3045  0013EE  6E82               	movwf	3970,c	;volatile
  3046                           
  3047                           ;space shot.c: 843: for(n3=0; n3<6; n3++){
  3048  0013F0  0E00               	movlw	0
  3049  0013F2  6E3F               	movwf	N3@n3,c
  3050  0013F4                     i2l3207:
  3051  0013F4  0E05               	movlw	5
  3052  0013F6  643F               	cpfsgt	N3@n3,c
  3053  0013F8  D001               	goto	i2l3211
  3054  0013FA  D00A               	goto	i2l3215
  3055  0013FC                     i2l3211:
  3056                           
  3057                           ;space shot.c: 844: _delay(197000);
  3058  0013FC  0E00               	movlw	0
  3059  0013FE  6E5F               	movwf	??_N3& (0+255),c
  3060  001400  0ED7               	movlw	215
  3061  001402                     i2u386_47:
  3062  001402  2EE8               	decfsz	wreg,f,c
  3063  001404  D7FE               	goto	i2u386_47
  3064  001406  2E5F               	decfsz	??_N3& (0+255),f,c
  3065  001408  D7FC               	goto	i2u386_47
  3066  00140A  F000               	nop	
  3067  00140C  2A3F               	incf	N3@n3,f,c
  3068  00140E  D7F2               	goto	i2l3207
  3069  001410                     i2l3215:
  3070                           
  3071                           ;space shot.c: 845: }
  3072                           ;space shot.c: 846: }
  3073                           ;space shot.c: 847: counter++;
  3074  001410  2A05               	incf	_counter,f,c
  3075                           
  3076                           ;space shot.c: 848: PORTC=0;
  3077  001412  0E00               	movlw	0
  3078  001414  6E82               	movwf	3970,c	;volatile
  3079  001416                     i2l3219:
  3080  001416  0E0A               	movlw	10
  3081  001418  6405               	cpfsgt	_counter,c
  3082  00141A  D783               	goto	i2l3153
  3083                           
  3084                           ;space shot.c: 849: }
  3085                           ;space shot.c: 851: Resultado();
  3086  00141C  ECF4  F00A         	call	_Resultado	;wreg free
  3087                           
  3088                           ;space shot.c: 852: PORTD= 0x01;
  3089  001420  0E01               	movlw	1
  3090  001422  6E83               	movwf	3971,c	;volatile
  3091                           
  3092                           ;space shot.c: 853: Command ();
  3093  001424  ECCB  F00F         	call	i2_Command	;wreg free
  3094                           
  3095                           ;space shot.c: 854: LCDready();
  3096  001428  EC29  F00F         	call	i2_LCDready	;wreg free
  3097  00142C  0012               	return		;funcret
  3098  00142E                     __end_of_N3:
  3099                           	opt stack 0
  3100                           pclatu	equ	0xFFB
  3101                           pclath	equ	0xFFA
  3102                           tblptru	equ	0xFF8
  3103                           tblptrh	equ	0xFF7
  3104                           tblptrl	equ	0xFF6
  3105                           tablat	equ	0xFF5
  3106                           prodh	equ	0xFF4
  3107                           prodl	equ	0xFF3
  3108                           intcon	equ	0xFF2
  3109                           intcon2	equ	0xFF1
  3110                           postinc0	equ	0xFEE
  3111                           fsr0h	equ	0xFEA
  3112                           fsr0l	equ	0xFE9
  3113                           wreg	equ	0xFE8
  3114                           postdec1	equ	0xFE5
  3115                           fsr1h	equ	0xFE2
  3116                           fsr1l	equ	0xFE1
  3117                           indf2	equ	0xFDF
  3118                           fsr2h	equ	0xFDA
  3119                           fsr2l	equ	0xFD9
  3120                           status	equ	0xFD8
  3121                           
  3122 ;; *************** function _One_Shot_N2 *****************
  3123 ;; Defined at:
  3124 ;;		line 386 in file "space shot.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    5
  3145 ;; This function calls:
  3146 ;;		_Antibounce
  3147 ;;		_N2
  3148 ;; This function is called by:
  3149 ;;		_IRH
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text19
  3154  001E84                     __ptext19:
  3155                           	opt stack 0
  3156  001E84                     _One_Shot_N2:
  3157                           	opt stack 20
  3158                           
  3159                           ;space shot.c: 387: if (ons_N2 == 1)
  3160                           
  3161                           ;incstack = 0
  3162  001E84  040D               	decf	_ons_N2,w,c
  3163  001E86  B4D8               	btfsc	status,2,c
  3164  001E88  0012               	return	
  3165                           
  3166                           ;space shot.c: 389: Antibounce();
  3167                           
  3168                           ;space shot.c: 388: return;
  3169  001E8A  EC01  F00F         	call	_Antibounce	;wreg free
  3170                           
  3171                           ;space shot.c: 390: if (PORTBbits.RB6==1){
  3172  001E8E  AC81               	btfss	3969,6,c	;volatile
  3173  001E90  0012               	return	
  3174                           
  3175                           ;space shot.c: 391: N2();
  3176  001E92  EC17  F00A         	call	_N2	;wreg free
  3177                           
  3178                           ;space shot.c: 392: ons_N2=0;
  3179  001E96  0E00               	movlw	0
  3180  001E98  6E0D               	movwf	_ons_N2,c
  3181  001E9A  0012               	return	
  3182  001E9C                     __end_of_One_Shot_N2:
  3183                           	opt stack 0
  3184                           pclatu	equ	0xFFB
  3185                           pclath	equ	0xFFA
  3186                           tblptru	equ	0xFF8
  3187                           tblptrh	equ	0xFF7
  3188                           tblptrl	equ	0xFF6
  3189                           tablat	equ	0xFF5
  3190                           prodh	equ	0xFF4
  3191                           prodl	equ	0xFF3
  3192                           intcon	equ	0xFF2
  3193                           intcon2	equ	0xFF1
  3194                           postinc0	equ	0xFEE
  3195                           fsr0h	equ	0xFEA
  3196                           fsr0l	equ	0xFE9
  3197                           wreg	equ	0xFE8
  3198                           postdec1	equ	0xFE5
  3199                           fsr1h	equ	0xFE2
  3200                           fsr1l	equ	0xFE1
  3201                           indf2	equ	0xFDF
  3202                           fsr2h	equ	0xFDA
  3203                           fsr2l	equ	0xFD9
  3204                           status	equ	0xFD8
  3205                           
  3206 ;; *************** function _N2 *****************
  3207 ;; Defined at:
  3208 ;;		line 725 in file "space shot.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  secuencia       7    0        unsigned char [7]
  3213 ;;  n2              1    5[COMRAM] unsigned char 
  3214 ;;  test            1    4[COMRAM] unsigned char 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  3224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3225 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3226 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3227 ;;      Totals:         1       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3228 ;;Total ram usage:        3 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    4
  3231 ;; This function calls:
  3232 ;;		_Resultado
  3233 ;;		___awmod
  3234 ;;		_rand
  3235 ;;		_srand
  3236 ;;		i2_Command
  3237 ;;		i2_LCDdisplay
  3238 ;;		i2_LCDready
  3239 ;;		i2_LCDsetup
  3240 ;; This function is called by:
  3241 ;;		_One_Shot_N2
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text20
  3246  00142E                     __ptext20:
  3247                           	opt stack 0
  3248  00142E                     _N2:
  3249                           	opt stack 20
  3250                           
  3251                           ;space shot.c: 726: PORTDbits.RD7=0;
  3252                           
  3253                           ;incstack = 0
  3254  00142E  9E83               	bcf	3971,7,c	;volatile
  3255                           
  3256                           ;space shot.c: 727: LCDsetup();
  3257  001430  EC82  F00E         	call	i2_LCDsetup	;wreg free
  3258                           
  3259                           ;space shot.c: 728: unsigned char n2;
  3260                           ;space shot.c: 729: for(n2=0;n2<7;n2++){
  3261  001434  0E00               	movlw	0
  3262  001436  6E3F               	movwf	N2@n2,c
  3263  001438                     i2l3003:
  3264  001438  0E06               	movlw	6
  3265  00143A  643F               	cpfsgt	N2@n2,c
  3266  00143C  D001               	goto	i2l3007
  3267  00143E  D026               	goto	i2l3019
  3268  001440                     i2l3007:
  3269                           
  3270                           ;space shot.c: 730: myRAMarray4 [n2] = NIVEL2[n2];
  3271  001440  503F               	movf	N2@n2,w,c
  3272  001442  0D01               	mullw	1
  3273  001444  0E50               	movlw	80
  3274  001446  24F3               	addwf	prodl,w,c
  3275  001448  6EF6               	movwf	tblptrl,c
  3276  00144A  0E00               	movlw	0
  3277  00144C  20F4               	addwfc	prodh,w,c
  3278  00144E  6EF7               	movwf	tblptrh,c
  3279  001450  6AF8               	clrf	tblptru,c
  3280  001452  0E00               	movlw	0
  3281  001454  22F8               	addwfc	tblptru,f,c
  3282  001456  503F               	movf	N2@n2,w,c
  3283  001458  0D01               	mullw	1
  3284  00145A  0E50               	movlw	80
  3285  00145C  24F3               	addwf	prodl,w,c
  3286  00145E  6ED9               	movwf	fsr2l,c
  3287  001460  0E00               	movlw	0
  3288  001462  20F4               	addwfc	prodh,w,c
  3289  001464  6EDA               	movwf	fsr2h,c
  3290  001466  0008               	tblrd		*
  3291  001468  CFF5 FFDF          	movff	tablat,indf2
  3292                           
  3293                           ;space shot.c: 731: PORTD=myRAMarray4[n2];
  3294  00146C  503F               	movf	N2@n2,w,c
  3295  00146E  0D01               	mullw	1
  3296  001470  0E50               	movlw	80
  3297  001472  24F3               	addwf	prodl,w,c
  3298  001474  6ED9               	movwf	fsr2l,c
  3299  001476  0E00               	movlw	0
  3300  001478  20F4               	addwfc	prodh,w,c
  3301  00147A  6EDA               	movwf	fsr2h,c
  3302  00147C  50DF               	movf	indf2,w,c
  3303  00147E  6E83               	movwf	3971,c	;volatile
  3304                           
  3305                           ;space shot.c: 732: LCDdisplay();
  3306  001480  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  3307                           
  3308                           ;space shot.c: 733: LCDready();
  3309  001484  EC29  F00F         	call	i2_LCDready	;wreg free
  3310  001488  2A3F               	incf	N2@n2,f,c
  3311  00148A  D7D6               	goto	i2l3003
  3312  00148C                     i2l3019:
  3313                           
  3314                           ;space shot.c: 734: }
  3315                           ;space shot.c: 735: for(n2=0; n2<10; n2++){
  3316  00148C  0E00               	movlw	0
  3317  00148E  6E3F               	movwf	N2@n2,c
  3318  001490                     i2l3021:
  3319  001490  0E09               	movlw	9
  3320  001492  643F               	cpfsgt	N2@n2,c
  3321  001494  D001               	goto	i2l3025
  3322  001496  D00A               	goto	i2l3029
  3323  001498                     i2l3025:
  3324                           
  3325                           ;space shot.c: 736: _delay(197000);
  3326  001498  0E00               	movlw	0
  3327  00149A  6E5F               	movwf	??_N2& (0+255),c
  3328  00149C  0ED7               	movlw	215
  3329  00149E                     i2u387_47:
  3330  00149E  2EE8               	decfsz	wreg,f,c
  3331  0014A0  D7FE               	goto	i2u387_47
  3332  0014A2  2E5F               	decfsz	??_N2& (0+255),f,c
  3333  0014A4  D7FC               	goto	i2u387_47
  3334  0014A6  F000               	nop	
  3335  0014A8  2A3F               	incf	N2@n2,f,c
  3336  0014AA  D7F2               	goto	i2l3021
  3337  0014AC                     i2l3029:
  3338                           
  3339                           ;space shot.c: 737: }
  3340                           ;space shot.c: 739: srand(t);
  3341  0014AC  C087  F057         	movff	_t,srand@x
  3342  0014B0  6A58               	clrf	srand@x+1,c
  3343  0014B2  ECB5  F00F         	call	_srand	;wreg free
  3344                           
  3345                           ;space shot.c: 740: unsigned char test= (rand()%5+1);
  3346  0014B6  ECA2  F00D         	call	_rand	;wreg free
  3347  0014BA  C04B  F03A         	movff	?_rand,___awmod@dividend
  3348  0014BE  C04C  F03B         	movff	?_rand+1,___awmod@dividend+1
  3349  0014C2  0E00               	movlw	0
  3350  0014C4  6E3D               	movwf	___awmod@divisor+1,c
  3351  0014C6  0E05               	movlw	5
  3352  0014C8  6E3C               	movwf	___awmod@divisor,c
  3353  0014CA  EC6A  F00D         	call	___awmod	;wreg free
  3354  0014CE  283A               	incf	?___awmod,w,c
  3355  0014D0  6E3E               	movwf	N2@test,c
  3356                           
  3357                           ;space shot.c: 741: counter=0;
  3358  0014D2  0E00               	movlw	0
  3359  0014D4  6E05               	movwf	_counter,c
  3360                           
  3361                           ;space shot.c: 742: acierto=0;
  3362  0014D6  0E00               	movlw	0
  3363  0014D8  6E04               	movwf	_acierto,c
  3364                           
  3365                           ;space shot.c: 743: unsigned char secuencia[7];
  3366                           ;space shot.c: 744: while (counter<=7){
  3367  0014DA  D07A               	goto	i2l3103
  3368  0014DC                     i2l3037:
  3369                           
  3370                           ;space shot.c: 745: test = (rand()%5+1);
  3371  0014DC  ECA2  F00D         	call	_rand	;wreg free
  3372  0014E0  C04B  F03A         	movff	?_rand,___awmod@dividend
  3373  0014E4  C04C  F03B         	movff	?_rand+1,___awmod@dividend+1
  3374  0014E8  0E00               	movlw	0
  3375  0014EA  6E3D               	movwf	___awmod@divisor+1,c
  3376  0014EC  0E05               	movlw	5
  3377  0014EE  6E3C               	movwf	___awmod@divisor,c
  3378  0014F0  EC6A  F00D         	call	___awmod	;wreg free
  3379  0014F4  283A               	incf	?___awmod,w,c
  3380  0014F6  6E3E               	movwf	N2@test,c
  3381                           
  3382                           ;space shot.c: 746: if (test<=1){
  3383  0014F8  0E02               	movlw	2
  3384  0014FA  603E               	cpfslt	N2@test,c
  3385  0014FC  D012               	goto	i2l3051
  3386                           
  3387                           ;space shot.c: 747: PORTC=0b00001000;
  3388  0014FE  0E08               	movlw	8
  3389  001500  6E82               	movwf	3970,c	;volatile
  3390                           
  3391                           ;space shot.c: 749: for(n2=0; n2<8; n2++){
  3392  001502  0E00               	movlw	0
  3393  001504  6E3F               	movwf	N2@n2,c
  3394  001506                     i2l3043:
  3395  001506  0E07               	movlw	7
  3396  001508  643F               	cpfsgt	N2@n2,c
  3397  00150A  D001               	goto	i2l3047
  3398  00150C  D05E               	goto	i2l3099
  3399  00150E                     i2l3047:
  3400                           
  3401                           ;space shot.c: 750: _delay(197000);
  3402  00150E  0E00               	movlw	0
  3403  001510  6E5F               	movwf	??_N2& (0+255),c
  3404  001512  0ED7               	movlw	215
  3405  001514                     i2u388_47:
  3406  001514  2EE8               	decfsz	wreg,f,c
  3407  001516  D7FE               	goto	i2u388_47
  3408  001518  2E5F               	decfsz	??_N2& (0+255),f,c
  3409  00151A  D7FC               	goto	i2u388_47
  3410  00151C  F000               	nop	
  3411  00151E  2A3F               	incf	N2@n2,f,c
  3412  001520  D7F2               	goto	i2l3043
  3413  001522                     i2l3051:
  3414                           
  3415                           ;space shot.c: 753: else if(test<=2){
  3416  001522  0E03               	movlw	3
  3417  001524  603E               	cpfslt	N2@test,c
  3418  001526  D012               	goto	i2l3063
  3419                           
  3420                           ;space shot.c: 754: PORTC=0b00010000;
  3421  001528  0E10               	movlw	16
  3422  00152A  6E82               	movwf	3970,c	;volatile
  3423                           
  3424                           ;space shot.c: 756: for(n2=0; n2<8; n2++){
  3425  00152C  0E00               	movlw	0
  3426  00152E  6E3F               	movwf	N2@n2,c
  3427  001530                     i2l3055:
  3428  001530  0E07               	movlw	7
  3429  001532  643F               	cpfsgt	N2@n2,c
  3430  001534  D001               	goto	i2l3059
  3431  001536  D049               	goto	i2l3099
  3432  001538                     i2l3059:
  3433                           
  3434                           ;space shot.c: 757: _delay(197000);
  3435  001538  0E00               	movlw	0
  3436  00153A  6E5F               	movwf	??_N2& (0+255),c
  3437  00153C  0ED7               	movlw	215
  3438  00153E                     i2u389_47:
  3439  00153E  2EE8               	decfsz	wreg,f,c
  3440  001540  D7FE               	goto	i2u389_47
  3441  001542  2E5F               	decfsz	??_N2& (0+255),f,c
  3442  001544  D7FC               	goto	i2u389_47
  3443  001546  F000               	nop	
  3444  001548  2A3F               	incf	N2@n2,f,c
  3445  00154A  D7F2               	goto	i2l3055
  3446  00154C                     i2l3063:
  3447                           
  3448                           ;space shot.c: 760: else if(test<=3){
  3449  00154C  0E04               	movlw	4
  3450  00154E  603E               	cpfslt	N2@test,c
  3451  001550  D012               	goto	i2l3075
  3452                           
  3453                           ;space shot.c: 761: PORTC=0b00100000;
  3454  001552  0E20               	movlw	32
  3455  001554  6E82               	movwf	3970,c	;volatile
  3456                           
  3457                           ;space shot.c: 763: for(n2=0; n2<8; n2++){
  3458  001556  0E00               	movlw	0
  3459  001558  6E3F               	movwf	N2@n2,c
  3460  00155A                     i2l3067:
  3461  00155A  0E07               	movlw	7
  3462  00155C  643F               	cpfsgt	N2@n2,c
  3463  00155E  D001               	goto	i2l3071
  3464  001560  D034               	goto	i2l3099
  3465  001562                     i2l3071:
  3466                           
  3467                           ;space shot.c: 764: _delay(197000);
  3468  001562  0E00               	movlw	0
  3469  001564  6E5F               	movwf	??_N2& (0+255),c
  3470  001566  0ED7               	movlw	215
  3471  001568                     i2u390_47:
  3472  001568  2EE8               	decfsz	wreg,f,c
  3473  00156A  D7FE               	goto	i2u390_47
  3474  00156C  2E5F               	decfsz	??_N2& (0+255),f,c
  3475  00156E  D7FC               	goto	i2u390_47
  3476  001570  F000               	nop	
  3477  001572  2A3F               	incf	N2@n2,f,c
  3478  001574  D7F2               	goto	i2l3067
  3479  001576                     i2l3075:
  3480                           
  3481                           ;space shot.c: 767: else if(test<=4){
  3482  001576  0E05               	movlw	5
  3483  001578  603E               	cpfslt	N2@test,c
  3484  00157A  D012               	goto	i2l3087
  3485                           
  3486                           ;space shot.c: 768: PORTC=0b01000000;
  3487  00157C  0E40               	movlw	64
  3488  00157E  6E82               	movwf	3970,c	;volatile
  3489                           
  3490                           ;space shot.c: 770: for(n2=0; n2<8; n2++){
  3491  001580  0E00               	movlw	0
  3492  001582  6E3F               	movwf	N2@n2,c
  3493  001584                     i2l3079:
  3494  001584  0E07               	movlw	7
  3495  001586  643F               	cpfsgt	N2@n2,c
  3496  001588  D001               	goto	i2l3083
  3497  00158A  D01F               	goto	i2l3099
  3498  00158C                     i2l3083:
  3499                           
  3500                           ;space shot.c: 771: _delay(197000);
  3501  00158C  0E00               	movlw	0
  3502  00158E  6E5F               	movwf	??_N2& (0+255),c
  3503  001590  0ED7               	movlw	215
  3504  001592                     i2u391_47:
  3505  001592  2EE8               	decfsz	wreg,f,c
  3506  001594  D7FE               	goto	i2u391_47
  3507  001596  2E5F               	decfsz	??_N2& (0+255),f,c
  3508  001598  D7FC               	goto	i2u391_47
  3509  00159A  F000               	nop	
  3510  00159C  2A3F               	incf	N2@n2,f,c
  3511  00159E  D7F2               	goto	i2l3079
  3512  0015A0                     i2l3087:
  3513                           
  3514                           ;space shot.c: 774: else if(test<=5){
  3515  0015A0  0E06               	movlw	6
  3516  0015A2  603E               	cpfslt	N2@test,c
  3517  0015A4  D012               	goto	i2l3099
  3518                           
  3519                           ;space shot.c: 775: PORTC=0b10000000;
  3520  0015A6  0E80               	movlw	128
  3521  0015A8  6E82               	movwf	3970,c	;volatile
  3522                           
  3523                           ;space shot.c: 777: for(n2=0; n2<8; n2++){
  3524  0015AA  0E00               	movlw	0
  3525  0015AC  6E3F               	movwf	N2@n2,c
  3526  0015AE                     i2l3091:
  3527  0015AE  0E07               	movlw	7
  3528  0015B0  643F               	cpfsgt	N2@n2,c
  3529  0015B2  D001               	goto	i2l3095
  3530  0015B4  D00A               	goto	i2l3099
  3531  0015B6                     i2l3095:
  3532                           
  3533                           ;space shot.c: 778: _delay(197000);
  3534  0015B6  0E00               	movlw	0
  3535  0015B8  6E5F               	movwf	??_N2& (0+255),c
  3536  0015BA  0ED7               	movlw	215
  3537  0015BC                     i2u392_47:
  3538  0015BC  2EE8               	decfsz	wreg,f,c
  3539  0015BE  D7FE               	goto	i2u392_47
  3540  0015C0  2E5F               	decfsz	??_N2& (0+255),f,c
  3541  0015C2  D7FC               	goto	i2u392_47
  3542  0015C4  F000               	nop	
  3543  0015C6  2A3F               	incf	N2@n2,f,c
  3544  0015C8  D7F2               	goto	i2l3091
  3545  0015CA                     i2l3099:
  3546                           
  3547                           ;space shot.c: 779: }
  3548                           ;space shot.c: 780: }
  3549                           ;space shot.c: 781: counter++;
  3550  0015CA  2A05               	incf	_counter,f,c
  3551                           
  3552                           ;space shot.c: 782: PORTC=0;
  3553  0015CC  0E00               	movlw	0
  3554  0015CE  6E82               	movwf	3970,c	;volatile
  3555  0015D0                     i2l3103:
  3556  0015D0  0E07               	movlw	7
  3557  0015D2  6405               	cpfsgt	_counter,c
  3558  0015D4  D783               	goto	i2l3037
  3559                           
  3560                           ;space shot.c: 783: }
  3561                           ;space shot.c: 784: Resultado();
  3562  0015D6  ECF4  F00A         	call	_Resultado	;wreg free
  3563                           
  3564                           ;space shot.c: 785: PORTD= 0x01;
  3565  0015DA  0E01               	movlw	1
  3566  0015DC  6E83               	movwf	3971,c	;volatile
  3567                           
  3568                           ;space shot.c: 786: Command ();
  3569  0015DE  ECCB  F00F         	call	i2_Command	;wreg free
  3570                           
  3571                           ;space shot.c: 787: LCDready();
  3572  0015E2  EC29  F00F         	call	i2_LCDready	;wreg free
  3573  0015E6  0012               	return		;funcret
  3574  0015E8                     __end_of_N2:
  3575                           	opt stack 0
  3576                           pclatu	equ	0xFFB
  3577                           pclath	equ	0xFFA
  3578                           tblptru	equ	0xFF8
  3579                           tblptrh	equ	0xFF7
  3580                           tblptrl	equ	0xFF6
  3581                           tablat	equ	0xFF5
  3582                           prodh	equ	0xFF4
  3583                           prodl	equ	0xFF3
  3584                           intcon	equ	0xFF2
  3585                           intcon2	equ	0xFF1
  3586                           postinc0	equ	0xFEE
  3587                           fsr0h	equ	0xFEA
  3588                           fsr0l	equ	0xFE9
  3589                           wreg	equ	0xFE8
  3590                           postdec1	equ	0xFE5
  3591                           fsr1h	equ	0xFE2
  3592                           fsr1l	equ	0xFE1
  3593                           indf2	equ	0xFDF
  3594                           fsr2h	equ	0xFDA
  3595                           fsr2l	equ	0xFD9
  3596                           status	equ	0xFD8
  3597                           
  3598 ;; *************** function _One_Shot_N1 *****************
  3599 ;; Defined at:
  3600 ;;		line 368 in file "space shot.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    5
  3621 ;; This function calls:
  3622 ;;		_Antibounce
  3623 ;;		_N1
  3624 ;; This function is called by:
  3625 ;;		_IRH
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text21
  3630  001E9C                     __ptext21:
  3631                           	opt stack 0
  3632  001E9C                     _One_Shot_N1:
  3633                           	opt stack 20
  3634                           
  3635                           ;space shot.c: 369: if (ons_N1 == 1)
  3636                           
  3637                           ;incstack = 0
  3638  001E9C  040C               	decf	_ons_N1,w,c
  3639  001E9E  B4D8               	btfsc	status,2,c
  3640  001EA0  0012               	return	
  3641                           
  3642                           ;space shot.c: 371: Antibounce();
  3643                           
  3644                           ;space shot.c: 370: return;
  3645  001EA2  EC01  F00F         	call	_Antibounce	;wreg free
  3646                           
  3647                           ;space shot.c: 372: if (PORTBbits.RB5==1){
  3648  001EA6  AA81               	btfss	3969,5,c	;volatile
  3649  001EA8  0012               	return	
  3650                           
  3651                           ;space shot.c: 373: N1();
  3652  001EAA  EC81  F006         	call	_N1	;wreg free
  3653                           
  3654                           ;space shot.c: 374: ons_N1=0;
  3655  001EAE  0E00               	movlw	0
  3656  001EB0  6E0C               	movwf	_ons_N1,c
  3657  001EB2  0012               	return	
  3658  001EB4                     __end_of_One_Shot_N1:
  3659                           	opt stack 0
  3660                           pclatu	equ	0xFFB
  3661                           pclath	equ	0xFFA
  3662                           tblptru	equ	0xFF8
  3663                           tblptrh	equ	0xFF7
  3664                           tblptrl	equ	0xFF6
  3665                           tablat	equ	0xFF5
  3666                           prodh	equ	0xFF4
  3667                           prodl	equ	0xFF3
  3668                           intcon	equ	0xFF2
  3669                           intcon2	equ	0xFF1
  3670                           postinc0	equ	0xFEE
  3671                           fsr0h	equ	0xFEA
  3672                           fsr0l	equ	0xFE9
  3673                           wreg	equ	0xFE8
  3674                           postdec1	equ	0xFE5
  3675                           fsr1h	equ	0xFE2
  3676                           fsr1l	equ	0xFE1
  3677                           indf2	equ	0xFDF
  3678                           fsr2h	equ	0xFDA
  3679                           fsr2l	equ	0xFD9
  3680                           status	equ	0xFD8
  3681                           
  3682 ;; *************** function _N1 *****************
  3683 ;; Defined at:
  3684 ;;		line 530 in file "space shot.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  secuencia_ge    2    3[COMRAM] unsigned char [2]
  3689 ;;  secuencia       2    0[COMRAM] unsigned char [2]
  3690 ;;  n1              1    5[COMRAM] unsigned char 
  3691 ;;  test            1    2[COMRAM] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  3701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3702 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3703 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3704 ;;      Totals:         0       0       2       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3705 ;;Total ram usage:        8 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:    4
  3708 ;; This function calls:
  3709 ;;		_One_Shot_B1
  3710 ;;		_One_Shot_B2
  3711 ;;		_One_Shot_B3
  3712 ;;		_One_Shot_B4
  3713 ;;		_One_Shot_B5
  3714 ;;		_Reset_One_Shot_B1
  3715 ;;		_Reset_One_Shot_B2
  3716 ;;		_Reset_One_Shot_B3
  3717 ;;		_Reset_One_Shot_B4
  3718 ;;		_Reset_One_Shot_B5
  3719 ;;		_Resultado
  3720 ;;		___awmod
  3721 ;;		_rand
  3722 ;;		_srand
  3723 ;;		i2_Command
  3724 ;;		i2_LCDdisplay
  3725 ;;		i2_LCDready
  3726 ;;		i2_LCDsetup
  3727 ;; This function is called by:
  3728 ;;		_One_Shot_N1
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text22
  3733  000D02                     __ptext22:
  3734                           	opt stack 0
  3735  000D02                     _N1:
  3736                           	opt stack 20
  3737                           
  3738                           ;space shot.c: 531: PORTDbits.RD7=0;
  3739                           
  3740                           ;incstack = 0
  3741  000D02  9E83               	bcf	3971,7,c	;volatile
  3742                           
  3743                           ;space shot.c: 532: LCDsetup();
  3744  000D04  EC82  F00E         	call	i2_LCDsetup	;wreg free
  3745                           
  3746                           ;space shot.c: 533: unsigned char n1;
  3747                           ;space shot.c: 534: for(n1=0;n1<7;n1++){
  3748  000D08  0E00               	movlw	0
  3749  000D0A  6E2F               	movwf	N1@n1,c
  3750  000D0C                     i2l2693:
  3751  000D0C  0E06               	movlw	6
  3752  000D0E  642F               	cpfsgt	N1@n1,c
  3753  000D10  D001               	goto	i2l2697
  3754  000D12  D026               	goto	i2l2709
  3755  000D14                     i2l2697:
  3756                           
  3757                           ;space shot.c: 535: myRAMarray3 [n1] = NIVEL1[n1];
  3758  000D14  502F               	movf	N1@n1,w,c
  3759  000D16  0D01               	mullw	1
  3760  000D18  0E40               	movlw	64
  3761  000D1A  24F3               	addwf	prodl,w,c
  3762  000D1C  6EF6               	movwf	tblptrl,c
  3763  000D1E  0E00               	movlw	0
  3764  000D20  20F4               	addwfc	prodh,w,c
  3765  000D22  6EF7               	movwf	tblptrh,c
  3766  000D24  6AF8               	clrf	tblptru,c
  3767  000D26  0E00               	movlw	0
  3768  000D28  22F8               	addwfc	tblptru,f,c
  3769  000D2A  502F               	movf	N1@n1,w,c
  3770  000D2C  0D01               	mullw	1
  3771  000D2E  0E40               	movlw	64
  3772  000D30  24F3               	addwf	prodl,w,c
  3773  000D32  6ED9               	movwf	fsr2l,c
  3774  000D34  0E00               	movlw	0
  3775  000D36  20F4               	addwfc	prodh,w,c
  3776  000D38  6EDA               	movwf	fsr2h,c
  3777  000D3A  0008               	tblrd		*
  3778  000D3C  CFF5 FFDF          	movff	tablat,indf2
  3779                           
  3780                           ;space shot.c: 536: PORTD=myRAMarray3[n1];
  3781  000D40  502F               	movf	N1@n1,w,c
  3782  000D42  0D01               	mullw	1
  3783  000D44  0E40               	movlw	64
  3784  000D46  24F3               	addwf	prodl,w,c
  3785  000D48  6ED9               	movwf	fsr2l,c
  3786  000D4A  0E00               	movlw	0
  3787  000D4C  20F4               	addwfc	prodh,w,c
  3788  000D4E  6EDA               	movwf	fsr2h,c
  3789  000D50  50DF               	movf	indf2,w,c
  3790  000D52  6E83               	movwf	3971,c	;volatile
  3791                           
  3792                           ;space shot.c: 537: LCDdisplay();
  3793  000D54  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  3794                           
  3795                           ;space shot.c: 538: LCDready();
  3796  000D58  EC29  F00F         	call	i2_LCDready	;wreg free
  3797  000D5C  2A2F               	incf	N1@n1,f,c
  3798  000D5E  D7D6               	goto	i2l2693
  3799  000D60                     i2l2709:
  3800                           
  3801                           ;space shot.c: 539: }
  3802                           ;space shot.c: 540: for(n1=0; n1<10; n1++){
  3803  000D60  0E00               	movlw	0
  3804  000D62  6E2F               	movwf	N1@n1,c
  3805  000D64                     i2l2711:
  3806  000D64  0E09               	movlw	9
  3807  000D66  642F               	cpfsgt	N1@n1,c
  3808  000D68  D001               	goto	i2l2715
  3809  000D6A  D00A               	goto	i2l2719
  3810  000D6C                     i2l2715:
  3811                           
  3812                           ;space shot.c: 541: _delay(197000);
  3813  000D6C  0E00               	movlw	0
  3814  000D6E  6E3E               	movwf	??_N1& (0+255),c
  3815  000D70  0ED7               	movlw	215
  3816  000D72                     i2u393_47:
  3817  000D72  2EE8               	decfsz	wreg,f,c
  3818  000D74  D7FE               	goto	i2u393_47
  3819  000D76  2E3E               	decfsz	??_N1& (0+255),f,c
  3820  000D78  D7FC               	goto	i2u393_47
  3821  000D7A  F000               	nop	
  3822  000D7C  2A2F               	incf	N1@n1,f,c
  3823  000D7E  D7F2               	goto	i2l2711
  3824  000D80                     i2l2719:
  3825                           
  3826                           ;space shot.c: 542: }
  3827                           ;space shot.c: 543: PORTD= 0x01;
  3828  000D80  0E01               	movlw	1
  3829  000D82  6E83               	movwf	3971,c	;volatile
  3830                           
  3831                           ;space shot.c: 544: Command ();
  3832  000D84  ECCB  F00F         	call	i2_Command	;wreg free
  3833                           
  3834                           ;space shot.c: 546: srand(t);
  3835  000D88  C087  F057         	movff	_t,srand@x
  3836  000D8C  6A58               	clrf	srand@x+1,c
  3837  000D8E  ECB5  F00F         	call	_srand	;wreg free
  3838                           
  3839                           ;space shot.c: 547: unsigned char test= (rand()%5+1);
  3840  000D92  ECA2  F00D         	call	_rand	;wreg free
  3841  000D96  C04B  F03A         	movff	?_rand,___awmod@dividend
  3842  000D9A  C04C  F03B         	movff	?_rand+1,___awmod@dividend+1
  3843  000D9E  0E00               	movlw	0
  3844  000DA0  6E3D               	movwf	___awmod@divisor+1,c
  3845  000DA2  0E05               	movlw	5
  3846  000DA4  6E3C               	movwf	___awmod@divisor,c
  3847  000DA6  EC6A  F00D         	call	___awmod	;wreg free
  3848  000DAA  283A               	incf	?___awmod,w,c
  3849  000DAC  6E2C               	movwf	N1@test,c
  3850                           
  3851                           ;space shot.c: 548: acierto=0;
  3852  000DAE  0E00               	movlw	0
  3853  000DB0  6E04               	movwf	_acierto,c
  3854                           
  3855                           ;space shot.c: 549: unsigned char secuencia[2];
  3856                           ;space shot.c: 550: unsigned char secuencia_gen[2];
  3857                           ;space shot.c: 551: while (acierto<3){
  3858  000DB2  D254               	goto	i2l2987
  3859  000DB4                     i2l2729:
  3860                           
  3861                           ;space shot.c: 552: for (counter=1 ; counter<=2; counter++){
  3862  000DB4  0E01               	movlw	1
  3863  000DB6  6E05               	movwf	_counter,c
  3864  000DB8                     i2l2731:
  3865  000DB8  0E02               	movlw	2
  3866  000DBA  6405               	cpfsgt	_counter,c
  3867  000DBC  D001               	goto	i2l2735
  3868  000DBE  D0DE               	goto	i2l2859
  3869  000DC0                     i2l2735:
  3870                           
  3871                           ;space shot.c: 553: test = (rand()%5+1);
  3872  000DC0  ECA2  F00D         	call	_rand	;wreg free
  3873  000DC4  C04B  F03A         	movff	?_rand,___awmod@dividend
  3874  000DC8  C04C  F03B         	movff	?_rand+1,___awmod@dividend+1
  3875  000DCC  0E00               	movlw	0
  3876  000DCE  6E3D               	movwf	___awmod@divisor+1,c
  3877  000DD0  0E05               	movlw	5
  3878  000DD2  6E3C               	movwf	___awmod@divisor,c
  3879  000DD4  EC6A  F00D         	call	___awmod	;wreg free
  3880  000DD8  283A               	incf	?___awmod,w,c
  3881  000DDA  6E2C               	movwf	N1@test,c
  3882                           
  3883                           ;space shot.c: 554: if (test<=1){
  3884  000DDC  0E02               	movlw	2
  3885  000DDE  602C               	cpfslt	N1@test,c
  3886  000DE0  D023               	goto	i2l2759
  3887                           
  3888                           ;space shot.c: 555: PORTC=0b00001000;
  3889  000DE2  0E08               	movlw	8
  3890  000DE4  6E82               	movwf	3970,c	;volatile
  3891                           
  3892                           ;space shot.c: 556: secuencia[counter]=1;
  3893  000DE6  5005               	movf	_counter,w,c
  3894  000DE8  0D01               	mullw	1
  3895  000DEA  0E2A               	movlw	low N1@secuencia
  3896  000DEC  24F3               	addwf	prodl,w,c
  3897  000DEE  6ED9               	movwf	fsr2l,c
  3898  000DF0  0E00               	movlw	high N1@secuencia
  3899  000DF2  20F4               	addwfc	prodh,w,c
  3900  000DF4  6EDA               	movwf	fsr2h,c
  3901  000DF6  0E01               	movlw	1
  3902  000DF8  6EDF               	movwf	indf2,c
  3903                           
  3904                           ;space shot.c: 557: PORTD= test+48;
  3905  000DFA  502C               	movf	N1@test,w,c
  3906  000DFC  0F30               	addlw	48
  3907  000DFE  6E83               	movwf	3971,c	;volatile
  3908                           
  3909                           ;space shot.c: 558: LCDdisplay();
  3910  000E00  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  3911                           
  3912                           ;space shot.c: 559: LCDready();
  3913  000E04  EC29  F00F         	call	i2_LCDready	;wreg free
  3914                           
  3915                           ;space shot.c: 560: for(n1=0; n1<10; n1++){
  3916  000E08  0E00               	movlw	0
  3917  000E0A  6E2F               	movwf	N1@n1,c
  3918  000E0C                     i2l2751:
  3919  000E0C  0E09               	movlw	9
  3920  000E0E  642F               	cpfsgt	N1@n1,c
  3921  000E10  D001               	goto	i2l2755
  3922  000E12  D0A2               	goto	i2l2847
  3923  000E14                     i2l2755:
  3924                           
  3925                           ;space shot.c: 561: _delay(197000);
  3926  000E14  0E00               	movlw	0
  3927  000E16  6E3E               	movwf	??_N1& (0+255),c
  3928  000E18  0ED7               	movlw	215
  3929  000E1A                     i2u394_47:
  3930  000E1A  2EE8               	decfsz	wreg,f,c
  3931  000E1C  D7FE               	goto	i2u394_47
  3932  000E1E  2E3E               	decfsz	??_N1& (0+255),f,c
  3933  000E20  D7FC               	goto	i2u394_47
  3934  000E22  F000               	nop	
  3935  000E24  2A2F               	incf	N1@n1,f,c
  3936  000E26  D7F2               	goto	i2l2751
  3937  000E28                     i2l2759:
  3938                           
  3939                           ;space shot.c: 564: else if(test<=2){
  3940  000E28  0E03               	movlw	3
  3941  000E2A  602C               	cpfslt	N1@test,c
  3942  000E2C  D023               	goto	i2l2781
  3943                           
  3944                           ;space shot.c: 565: PORTC=0b00010000;
  3945  000E2E  0E10               	movlw	16
  3946  000E30  6E82               	movwf	3970,c	;volatile
  3947                           
  3948                           ;space shot.c: 566: secuencia[counter]=2;
  3949  000E32  5005               	movf	_counter,w,c
  3950  000E34  0D01               	mullw	1
  3951  000E36  0E2A               	movlw	low N1@secuencia
  3952  000E38  24F3               	addwf	prodl,w,c
  3953  000E3A  6ED9               	movwf	fsr2l,c
  3954  000E3C  0E00               	movlw	high N1@secuencia
  3955  000E3E  20F4               	addwfc	prodh,w,c
  3956  000E40  6EDA               	movwf	fsr2h,c
  3957  000E42  0E02               	movlw	2
  3958  000E44  6EDF               	movwf	indf2,c
  3959                           
  3960                           ;space shot.c: 567: PORTD= test+48;
  3961  000E46  502C               	movf	N1@test,w,c
  3962  000E48  0F30               	addlw	48
  3963  000E4A  6E83               	movwf	3971,c	;volatile
  3964                           
  3965                           ;space shot.c: 568: LCDdisplay();
  3966  000E4C  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  3967                           
  3968                           ;space shot.c: 569: LCDready();
  3969  000E50  EC29  F00F         	call	i2_LCDready	;wreg free
  3970                           
  3971                           ;space shot.c: 570: for(n1=0; n1<10; n1++){
  3972  000E54  0E00               	movlw	0
  3973  000E56  6E2F               	movwf	N1@n1,c
  3974  000E58                     i2l2773:
  3975  000E58  0E09               	movlw	9
  3976  000E5A  642F               	cpfsgt	N1@n1,c
  3977  000E5C  D001               	goto	i2l2777
  3978  000E5E  D07C               	goto	i2l2847
  3979  000E60                     i2l2777:
  3980                           
  3981                           ;space shot.c: 571: _delay(197000);
  3982  000E60  0E00               	movlw	0
  3983  000E62  6E3E               	movwf	??_N1& (0+255),c
  3984  000E64  0ED7               	movlw	215
  3985  000E66                     i2u395_47:
  3986  000E66  2EE8               	decfsz	wreg,f,c
  3987  000E68  D7FE               	goto	i2u395_47
  3988  000E6A  2E3E               	decfsz	??_N1& (0+255),f,c
  3989  000E6C  D7FC               	goto	i2u395_47
  3990  000E6E  F000               	nop	
  3991  000E70  2A2F               	incf	N1@n1,f,c
  3992  000E72  D7F2               	goto	i2l2773
  3993  000E74                     i2l2781:
  3994                           
  3995                           ;space shot.c: 574: else if(test<=3){
  3996  000E74  0E04               	movlw	4
  3997  000E76  602C               	cpfslt	N1@test,c
  3998  000E78  D023               	goto	i2l2803
  3999                           
  4000                           ;space shot.c: 575: PORTC=0b00100000;
  4001  000E7A  0E20               	movlw	32
  4002  000E7C  6E82               	movwf	3970,c	;volatile
  4003                           
  4004                           ;space shot.c: 576: secuencia[counter]=3;
  4005  000E7E  5005               	movf	_counter,w,c
  4006  000E80  0D01               	mullw	1
  4007  000E82  0E2A               	movlw	low N1@secuencia
  4008  000E84  24F3               	addwf	prodl,w,c
  4009  000E86  6ED9               	movwf	fsr2l,c
  4010  000E88  0E00               	movlw	high N1@secuencia
  4011  000E8A  20F4               	addwfc	prodh,w,c
  4012  000E8C  6EDA               	movwf	fsr2h,c
  4013  000E8E  0E03               	movlw	3
  4014  000E90  6EDF               	movwf	indf2,c
  4015                           
  4016                           ;space shot.c: 577: PORTD= test+48;
  4017  000E92  502C               	movf	N1@test,w,c
  4018  000E94  0F30               	addlw	48
  4019  000E96  6E83               	movwf	3971,c	;volatile
  4020                           
  4021                           ;space shot.c: 578: LCDdisplay();
  4022  000E98  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  4023                           
  4024                           ;space shot.c: 579: LCDready();
  4025  000E9C  EC29  F00F         	call	i2_LCDready	;wreg free
  4026                           
  4027                           ;space shot.c: 580: for(n1=0; n1<10; n1++){
  4028  000EA0  0E00               	movlw	0
  4029  000EA2  6E2F               	movwf	N1@n1,c
  4030  000EA4                     i2l2795:
  4031  000EA4  0E09               	movlw	9
  4032  000EA6  642F               	cpfsgt	N1@n1,c
  4033  000EA8  D001               	goto	i2l2799
  4034  000EAA  D056               	goto	i2l2847
  4035  000EAC                     i2l2799:
  4036                           
  4037                           ;space shot.c: 581: _delay(197000);
  4038  000EAC  0E00               	movlw	0
  4039  000EAE  6E3E               	movwf	??_N1& (0+255),c
  4040  000EB0  0ED7               	movlw	215
  4041  000EB2                     i2u396_47:
  4042  000EB2  2EE8               	decfsz	wreg,f,c
  4043  000EB4  D7FE               	goto	i2u396_47
  4044  000EB6  2E3E               	decfsz	??_N1& (0+255),f,c
  4045  000EB8  D7FC               	goto	i2u396_47
  4046  000EBA  F000               	nop	
  4047  000EBC  2A2F               	incf	N1@n1,f,c
  4048  000EBE  D7F2               	goto	i2l2795
  4049  000EC0                     i2l2803:
  4050                           
  4051                           ;space shot.c: 584: else if(test<=4){
  4052  000EC0  0E05               	movlw	5
  4053  000EC2  602C               	cpfslt	N1@test,c
  4054  000EC4  D023               	goto	i2l2825
  4055                           
  4056                           ;space shot.c: 585: PORTC=0b01000000;
  4057  000EC6  0E40               	movlw	64
  4058  000EC8  6E82               	movwf	3970,c	;volatile
  4059                           
  4060                           ;space shot.c: 586: secuencia[counter]=4;
  4061  000ECA  5005               	movf	_counter,w,c
  4062  000ECC  0D01               	mullw	1
  4063  000ECE  0E2A               	movlw	low N1@secuencia
  4064  000ED0  24F3               	addwf	prodl,w,c
  4065  000ED2  6ED9               	movwf	fsr2l,c
  4066  000ED4  0E00               	movlw	high N1@secuencia
  4067  000ED6  20F4               	addwfc	prodh,w,c
  4068  000ED8  6EDA               	movwf	fsr2h,c
  4069  000EDA  0E04               	movlw	4
  4070  000EDC  6EDF               	movwf	indf2,c
  4071                           
  4072                           ;space shot.c: 587: PORTD= test+48;
  4073  000EDE  502C               	movf	N1@test,w,c
  4074  000EE0  0F30               	addlw	48
  4075  000EE2  6E83               	movwf	3971,c	;volatile
  4076                           
  4077                           ;space shot.c: 588: LCDdisplay();
  4078  000EE4  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  4079                           
  4080                           ;space shot.c: 589: LCDready();
  4081  000EE8  EC29  F00F         	call	i2_LCDready	;wreg free
  4082                           
  4083                           ;space shot.c: 590: for(n1=0; n1<10; n1++){
  4084  000EEC  0E00               	movlw	0
  4085  000EEE  6E2F               	movwf	N1@n1,c
  4086  000EF0                     i2l2817:
  4087  000EF0  0E09               	movlw	9
  4088  000EF2  642F               	cpfsgt	N1@n1,c
  4089  000EF4  D001               	goto	i2l2821
  4090  000EF6  D030               	goto	i2l2847
  4091  000EF8                     i2l2821:
  4092                           
  4093                           ;space shot.c: 591: _delay(197000);
  4094  000EF8  0E00               	movlw	0
  4095  000EFA  6E3E               	movwf	??_N1& (0+255),c
  4096  000EFC  0ED7               	movlw	215
  4097  000EFE                     i2u397_47:
  4098  000EFE  2EE8               	decfsz	wreg,f,c
  4099  000F00  D7FE               	goto	i2u397_47
  4100  000F02  2E3E               	decfsz	??_N1& (0+255),f,c
  4101  000F04  D7FC               	goto	i2u397_47
  4102  000F06  F000               	nop	
  4103  000F08  2A2F               	incf	N1@n1,f,c
  4104  000F0A  D7F2               	goto	i2l2817
  4105  000F0C                     i2l2825:
  4106                           
  4107                           ;space shot.c: 594: else if(test<=5){
  4108  000F0C  0E06               	movlw	6
  4109  000F0E  602C               	cpfslt	N1@test,c
  4110  000F10  D023               	goto	i2l2847
  4111                           
  4112                           ;space shot.c: 595: PORTC=0b10000000;
  4113  000F12  0E80               	movlw	128
  4114  000F14  6E82               	movwf	3970,c	;volatile
  4115                           
  4116                           ;space shot.c: 596: secuencia[counter]=5;
  4117  000F16  5005               	movf	_counter,w,c
  4118  000F18  0D01               	mullw	1
  4119  000F1A  0E2A               	movlw	low N1@secuencia
  4120  000F1C  24F3               	addwf	prodl,w,c
  4121  000F1E  6ED9               	movwf	fsr2l,c
  4122  000F20  0E00               	movlw	high N1@secuencia
  4123  000F22  20F4               	addwfc	prodh,w,c
  4124  000F24  6EDA               	movwf	fsr2h,c
  4125  000F26  0E05               	movlw	5
  4126  000F28  6EDF               	movwf	indf2,c
  4127                           
  4128                           ;space shot.c: 597: PORTD= test+48;
  4129  000F2A  502C               	movf	N1@test,w,c
  4130  000F2C  0F30               	addlw	48
  4131  000F2E  6E83               	movwf	3971,c	;volatile
  4132                           
  4133                           ;space shot.c: 598: LCDdisplay();
  4134  000F30  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  4135                           
  4136                           ;space shot.c: 599: LCDready();
  4137  000F34  EC29  F00F         	call	i2_LCDready	;wreg free
  4138                           
  4139                           ;space shot.c: 600: for(n1=0; n1<10; n1++){
  4140  000F38  0E00               	movlw	0
  4141  000F3A  6E2F               	movwf	N1@n1,c
  4142  000F3C                     i2l2839:
  4143  000F3C  0E09               	movlw	9
  4144  000F3E  642F               	cpfsgt	N1@n1,c
  4145  000F40  D001               	goto	i2l2843
  4146  000F42  D00A               	goto	i2l2847
  4147  000F44                     i2l2843:
  4148                           
  4149                           ;space shot.c: 601: _delay(197000);
  4150  000F44  0E00               	movlw	0
  4151  000F46  6E3E               	movwf	??_N1& (0+255),c
  4152  000F48  0ED7               	movlw	215
  4153  000F4A                     i2u398_47:
  4154  000F4A  2EE8               	decfsz	wreg,f,c
  4155  000F4C  D7FE               	goto	i2u398_47
  4156  000F4E  2E3E               	decfsz	??_N1& (0+255),f,c
  4157  000F50  D7FC               	goto	i2u398_47
  4158  000F52  F000               	nop	
  4159  000F54  2A2F               	incf	N1@n1,f,c
  4160  000F56  D7F2               	goto	i2l2839
  4161  000F58                     i2l2847:
  4162                           
  4163                           ;space shot.c: 602: }
  4164                           ;space shot.c: 603: }
  4165                           ;space shot.c: 604: PORTC=0;
  4166  000F58  0E00               	movlw	0
  4167  000F5A  6E82               	movwf	3970,c	;volatile
  4168                           
  4169                           ;space shot.c: 605: PORTD= 0x01;
  4170  000F5C  0E01               	movlw	1
  4171  000F5E  6E83               	movwf	3971,c	;volatile
  4172                           
  4173                           ;space shot.c: 606: Command ();
  4174  000F60  ECCB  F00F         	call	i2_Command	;wreg free
  4175                           
  4176                           ;space shot.c: 607: LCDready();
  4177  000F64  EC29  F00F         	call	i2_LCDready	;wreg free
  4178                           
  4179                           ;space shot.c: 608: _delay(197000);
  4180  000F68  0E00               	movlw	0
  4181  000F6A  6E3E               	movwf	??_N1& (0+255),c
  4182  000F6C  0ED7               	movlw	215
  4183  000F6E                     i2u399_47:
  4184  000F6E  2EE8               	decfsz	wreg,f,c
  4185  000F70  D7FE               	goto	i2u399_47
  4186  000F72  2E3E               	decfsz	??_N1& (0+255),f,c
  4187  000F74  D7FC               	goto	i2u399_47
  4188  000F76  F000               	nop	
  4189  000F78  2A05               	incf	_counter,f,c
  4190  000F7A  D71E               	goto	i2l2731
  4191  000F7C                     i2l2859:
  4192                           
  4193                           ;space shot.c: 609: }
  4194                           ;space shot.c: 610: for (counter2= 0; counter2<2;) {
  4195  000F7C  0E00               	movlw	0
  4196  000F7E  6E4F               	movwf	_counter2,c
  4197  000F80                     i2l2861:
  4198  000F80  0E01               	movlw	1
  4199  000F82  644F               	cpfsgt	_counter2,c
  4200  000F84  D001               	goto	i2l370
  4201  000F86  D157               	goto	i2l371
  4202  000F88                     i2l370:
  4203                           
  4204                           ;space shot.c: 611: if(PORTAbits.RA0==1){
  4205  000F88  A080               	btfss	3968,0,c	;volatile
  4206  000F8A  D03E               	goto	i2l372
  4207                           
  4208                           ;space shot.c: 612: One_Shot_B1();
  4209  000F8C  ECEC  F00E         	call	_One_Shot_B1	;wreg free
  4210                           
  4211                           ;space shot.c: 613: if (ons_B1 == 1) {
  4212  000F90  0407               	decf	_ons_B1,w,c
  4213  000F92  B4D8               	btfsc	status,2,c
  4214                           
  4215                           ;space shot.c: 614: Reset_One_Shot_B1();
  4216  000F94  ECAC  F00F         	call	_Reset_One_Shot_B1	;wreg free
  4217                           
  4218                           ;space shot.c: 615: }
  4219                           ;space shot.c: 616: secuencia_gen[counter2]=1;
  4220  000F98  504F               	movf	_counter2,w,c
  4221  000F9A  0D01               	mullw	1
  4222  000F9C  0E2D               	movlw	low N1@secuencia_gen
  4223  000F9E  24F3               	addwf	prodl,w,c
  4224  000FA0  6ED9               	movwf	fsr2l,c
  4225  000FA2  0E00               	movlw	high N1@secuencia_gen
  4226  000FA4  20F4               	addwfc	prodh,w,c
  4227  000FA6  6EDA               	movwf	fsr2h,c
  4228  000FA8  0E01               	movlw	1
  4229  000FAA  6EDF               	movwf	indf2,c
  4230                           
  4231                           ;space shot.c: 617: PORTD= secuencia_gen[counter2]+48;
  4232  000FAC  504F               	movf	_counter2,w,c
  4233  000FAE  0D01               	mullw	1
  4234  000FB0  0E2D               	movlw	low N1@secuencia_gen
  4235  000FB2  24F3               	addwf	prodl,w,c
  4236  000FB4  6ED9               	movwf	fsr2l,c
  4237  000FB6  0E00               	movlw	high N1@secuencia_gen
  4238  000FB8  20F4               	addwfc	prodh,w,c
  4239  000FBA  6EDA               	movwf	fsr2h,c
  4240  000FBC  50DF               	movf	indf2,w,c
  4241  000FBE  0F30               	addlw	48
  4242  000FC0  6E83               	movwf	3971,c	;volatile
  4243                           
  4244                           ;space shot.c: 618: LCDdisplay();
  4245  000FC2  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  4246                           
  4247                           ;space shot.c: 619: LCDready();
  4248  000FC6  EC29  F00F         	call	i2_LCDready	;wreg free
  4249                           
  4250                           ;space shot.c: 620: _delay(19700);
  4251  000FCA  0E1A               	movlw	26
  4252  000FCC  6E3E               	movwf	??_N1& (0+255),c
  4253  000FCE  0E94               	movlw	148
  4254  000FD0                     i2u400_47:
  4255  000FD0  2EE8               	decfsz	wreg,f,c
  4256  000FD2  D7FE               	goto	i2u400_47
  4257  000FD4  2E3E               	decfsz	??_N1& (0+255),f,c
  4258  000FD6  D7FC               	goto	i2u400_47
  4259  000FD8  D000               	nop2	
  4260                           
  4261                           ;space shot.c: 621: if(secuencia[counter2]!=secuencia_gen[counter2]){
  4262  000FDA  504F               	movf	_counter2,w,c
  4263  000FDC  0D01               	mullw	1
  4264  000FDE  0E2D               	movlw	low N1@secuencia_gen
  4265  000FE0  24F3               	addwf	prodl,w,c
  4266  000FE2  6ED9               	movwf	fsr2l,c
  4267  000FE4  0E00               	movlw	high N1@secuencia_gen
  4268  000FE6  20F4               	addwfc	prodh,w,c
  4269  000FE8  6EDA               	movwf	fsr2h,c
  4270  000FEA  504F               	movf	_counter2,w,c
  4271  000FEC  0D01               	mullw	1
  4272  000FEE  0E2A               	movlw	low N1@secuencia
  4273  000FF0  24F3               	addwf	prodl,w,c
  4274  000FF2  6EE1               	movwf	fsr1l,c
  4275  000FF4  0E00               	movlw	high N1@secuencia
  4276  000FF6  20F4               	addwfc	prodh,w,c
  4277  000FF8  6EE2               	movwf	fsr1h,c
  4278  000FFA  50DE               	movf	postinc2,w,c
  4279  000FFC  18E6               	xorwf	postinc1,w,c
  4280  000FFE  B4D8               	btfsc	status,2,c
  4281  001000  D003               	goto	i2l372
  4282  001002  D0F6               	goto	i2l2951
  4283  001004                     i2l2881:
  4284                           
  4285                           ;space shot.c: 623: intentos++;
  4286  001004  2A06               	incf	_intentos,f,c
  4287                           
  4288                           ;space shot.c: 624: break;
  4289  001006  D117               	goto	i2l371
  4290  001008                     i2l372:
  4291                           
  4292                           ;space shot.c: 625: }
  4293                           ;space shot.c: 626: }
  4294                           ;space shot.c: 627: if(PORTAbits.RA1==1){
  4295  001008  A280               	btfss	3968,1,c	;volatile
  4296  00100A  D03B               	goto	i2l375
  4297                           
  4298                           ;space shot.c: 628: One_Shot_B2();
  4299  00100C  ECD7  F00E         	call	_One_Shot_B2	;wreg free
  4300                           
  4301                           ;space shot.c: 629: if (ons_B2 == 1){
  4302  001010  0408               	decf	_ons_B2,w,c
  4303  001012  B4D8               	btfsc	status,2,c
  4304                           
  4305                           ;space shot.c: 630: Reset_One_Shot_B2();
  4306  001014  ECA3  F00F         	call	_Reset_One_Shot_B2	;wreg free
  4307                           
  4308                           ;space shot.c: 631: }
  4309                           ;space shot.c: 632: secuencia_gen[counter2]=2;
  4310  001018  504F               	movf	_counter2,w,c
  4311  00101A  0D01               	mullw	1
  4312  00101C  0E2D               	movlw	low N1@secuencia_gen
  4313  00101E  24F3               	addwf	prodl,w,c
  4314  001020  6ED9               	movwf	fsr2l,c
  4315  001022  0E00               	movlw	high N1@secuencia_gen
  4316  001024  20F4               	addwfc	prodh,w,c
  4317  001026  6EDA               	movwf	fsr2h,c
  4318  001028  0E02               	movlw	2
  4319  00102A  6EDF               	movwf	indf2,c
  4320                           
  4321                           ;space shot.c: 633: PORTD= secuencia_gen[counter2]+48;
  4322  00102C  504F               	movf	_counter2,w,c
  4323  00102E  0D01               	mullw	1
  4324  001030  0E2D               	movlw	low N1@secuencia_gen
  4325  001032  24F3               	addwf	prodl,w,c
  4326  001034  6ED9               	movwf	fsr2l,c
  4327  001036  0E00               	movlw	high N1@secuencia_gen
  4328  001038  20F4               	addwfc	prodh,w,c
  4329  00103A  6EDA               	movwf	fsr2h,c
  4330  00103C  50DF               	movf	indf2,w,c
  4331  00103E  0F30               	addlw	48
  4332  001040  6E83               	movwf	3971,c	;volatile
  4333                           
  4334                           ;space shot.c: 634: LCDdisplay();
  4335  001042  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  4336                           
  4337                           ;space shot.c: 635: LCDready();
  4338  001046  EC29  F00F         	call	i2_LCDready	;wreg free
  4339                           
  4340                           ;space shot.c: 636: _delay(19700);
  4341  00104A  0E1A               	movlw	26
  4342  00104C  6E3E               	movwf	??_N1& (0+255),c
  4343  00104E  0E94               	movlw	148
  4344  001050                     i2u401_47:
  4345  001050  2EE8               	decfsz	wreg,f,c
  4346  001052  D7FE               	goto	i2u401_47
  4347  001054  2E3E               	decfsz	??_N1& (0+255),f,c
  4348  001056  D7FC               	goto	i2u401_47
  4349  001058  D000               	nop2	
  4350                           
  4351                           ;space shot.c: 637: if(secuencia[counter2]!=secuencia_gen[counter2]){
  4352  00105A  504F               	movf	_counter2,w,c
  4353  00105C  0D01               	mullw	1
  4354  00105E  0E2D               	movlw	low N1@secuencia_gen
  4355  001060  24F3               	addwf	prodl,w,c
  4356  001062  6ED9               	movwf	fsr2l,c
  4357  001064  0E00               	movlw	high N1@secuencia_gen
  4358  001066  20F4               	addwfc	prodh,w,c
  4359  001068  6EDA               	movwf	fsr2h,c
  4360  00106A  504F               	movf	_counter2,w,c
  4361  00106C  0D01               	mullw	1
  4362  00106E  0E2A               	movlw	low N1@secuencia
  4363  001070  24F3               	addwf	prodl,w,c
  4364  001072  6EE1               	movwf	fsr1l,c
  4365  001074  0E00               	movlw	high N1@secuencia
  4366  001076  20F4               	addwfc	prodh,w,c
  4367  001078  6EE2               	movwf	fsr1h,c
  4368  00107A  50DE               	movf	postinc2,w,c
  4369  00107C  18E6               	xorwf	postinc1,w,c
  4370  00107E  A4D8               	btfss	status,2,c
  4371  001080  D0B7               	goto	i2l2951
  4372  001082                     i2l375:
  4373                           
  4374                           ;space shot.c: 641: }
  4375                           ;space shot.c: 642: }
  4376                           ;space shot.c: 643: if(PORTAbits.RA2==1){
  4377  001082  A480               	btfss	3968,2,c	;volatile
  4378  001084  D03B               	goto	i2l378
  4379                           
  4380                           ;space shot.c: 644: One_Shot_B3();
  4381  001086  ECC2  F00E         	call	_One_Shot_B3	;wreg free
  4382                           
  4383                           ;space shot.c: 645: if (ons_B3 == 1){
  4384  00108A  0409               	decf	_ons_B3,w,c
  4385  00108C  B4D8               	btfsc	status,2,c
  4386                           
  4387                           ;space shot.c: 646: Reset_One_Shot_B3();
  4388  00108E  EC9A  F00F         	call	_Reset_One_Shot_B3	;wreg free
  4389                           
  4390                           ;space shot.c: 647: }
  4391                           ;space shot.c: 648: secuencia_gen[counter2]=3;
  4392  001092  504F               	movf	_counter2,w,c
  4393  001094  0D01               	mullw	1
  4394  001096  0E2D               	movlw	low N1@secuencia_gen
  4395  001098  24F3               	addwf	prodl,w,c
  4396  00109A  6ED9               	movwf	fsr2l,c
  4397  00109C  0E00               	movlw	high N1@secuencia_gen
  4398  00109E  20F4               	addwfc	prodh,w,c
  4399  0010A0  6EDA               	movwf	fsr2h,c
  4400  0010A2  0E03               	movlw	3
  4401  0010A4  6EDF               	movwf	indf2,c
  4402                           
  4403                           ;space shot.c: 649: PORTD= secuencia_gen[counter2]+48;
  4404  0010A6  504F               	movf	_counter2,w,c
  4405  0010A8  0D01               	mullw	1
  4406  0010AA  0E2D               	movlw	low N1@secuencia_gen
  4407  0010AC  24F3               	addwf	prodl,w,c
  4408  0010AE  6ED9               	movwf	fsr2l,c
  4409  0010B0  0E00               	movlw	high N1@secuencia_gen
  4410  0010B2  20F4               	addwfc	prodh,w,c
  4411  0010B4  6EDA               	movwf	fsr2h,c
  4412  0010B6  50DF               	movf	indf2,w,c
  4413  0010B8  0F30               	addlw	48
  4414  0010BA  6E83               	movwf	3971,c	;volatile
  4415                           
  4416                           ;space shot.c: 650: LCDdisplay();
  4417  0010BC  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  4418                           
  4419                           ;space shot.c: 651: LCDready();
  4420  0010C0  EC29  F00F         	call	i2_LCDready	;wreg free
  4421                           
  4422                           ;space shot.c: 652: _delay(19700);
  4423  0010C4  0E1A               	movlw	26
  4424  0010C6  6E3E               	movwf	??_N1& (0+255),c
  4425  0010C8  0E94               	movlw	148
  4426  0010CA                     i2u402_47:
  4427  0010CA  2EE8               	decfsz	wreg,f,c
  4428  0010CC  D7FE               	goto	i2u402_47
  4429  0010CE  2E3E               	decfsz	??_N1& (0+255),f,c
  4430  0010D0  D7FC               	goto	i2u402_47
  4431  0010D2  D000               	nop2	
  4432                           
  4433                           ;space shot.c: 653: if(secuencia[counter2]!=secuencia_gen[counter2]){
  4434  0010D4  504F               	movf	_counter2,w,c
  4435  0010D6  0D01               	mullw	1
  4436  0010D8  0E2D               	movlw	low N1@secuencia_gen
  4437  0010DA  24F3               	addwf	prodl,w,c
  4438  0010DC  6ED9               	movwf	fsr2l,c
  4439  0010DE  0E00               	movlw	high N1@secuencia_gen
  4440  0010E0  20F4               	addwfc	prodh,w,c
  4441  0010E2  6EDA               	movwf	fsr2h,c
  4442  0010E4  504F               	movf	_counter2,w,c
  4443  0010E6  0D01               	mullw	1
  4444  0010E8  0E2A               	movlw	low N1@secuencia
  4445  0010EA  24F3               	addwf	prodl,w,c
  4446  0010EC  6EE1               	movwf	fsr1l,c
  4447  0010EE  0E00               	movlw	high N1@secuencia
  4448  0010F0  20F4               	addwfc	prodh,w,c
  4449  0010F2  6EE2               	movwf	fsr1h,c
  4450  0010F4  50DE               	movf	postinc2,w,c
  4451  0010F6  18E6               	xorwf	postinc1,w,c
  4452  0010F8  A4D8               	btfss	status,2,c
  4453  0010FA  D07A               	goto	i2l2951
  4454  0010FC                     i2l378:
  4455                           
  4456                           ;space shot.c: 657: }
  4457                           ;space shot.c: 658: }
  4458                           ;space shot.c: 659: if(PORTAbits.RA3==1){
  4459  0010FC  A680               	btfss	3968,3,c	;volatile
  4460  0010FE  D03B               	goto	i2l381
  4461                           
  4462                           ;space shot.c: 660: One_Shot_B4();
  4463  001100  ECAD  F00E         	call	_One_Shot_B4	;wreg free
  4464                           
  4465                           ;space shot.c: 661: if (ons_B4 == 1){
  4466  001104  040A               	decf	_ons_B4,w,c
  4467  001106  B4D8               	btfsc	status,2,c
  4468                           
  4469                           ;space shot.c: 662: Reset_One_Shot_B4();
  4470  001108  EC91  F00F         	call	_Reset_One_Shot_B4	;wreg free
  4471                           
  4472                           ;space shot.c: 663: }
  4473                           ;space shot.c: 664: secuencia_gen[counter2]=4;
  4474  00110C  504F               	movf	_counter2,w,c
  4475  00110E  0D01               	mullw	1
  4476  001110  0E2D               	movlw	low N1@secuencia_gen
  4477  001112  24F3               	addwf	prodl,w,c
  4478  001114  6ED9               	movwf	fsr2l,c
  4479  001116  0E00               	movlw	high N1@secuencia_gen
  4480  001118  20F4               	addwfc	prodh,w,c
  4481  00111A  6EDA               	movwf	fsr2h,c
  4482  00111C  0E04               	movlw	4
  4483  00111E  6EDF               	movwf	indf2,c
  4484                           
  4485                           ;space shot.c: 665: PORTD= secuencia_gen[counter2]+48;
  4486  001120  504F               	movf	_counter2,w,c
  4487  001122  0D01               	mullw	1
  4488  001124  0E2D               	movlw	low N1@secuencia_gen
  4489  001126  24F3               	addwf	prodl,w,c
  4490  001128  6ED9               	movwf	fsr2l,c
  4491  00112A  0E00               	movlw	high N1@secuencia_gen
  4492  00112C  20F4               	addwfc	prodh,w,c
  4493  00112E  6EDA               	movwf	fsr2h,c
  4494  001130  50DF               	movf	indf2,w,c
  4495  001132  0F30               	addlw	48
  4496  001134  6E83               	movwf	3971,c	;volatile
  4497                           
  4498                           ;space shot.c: 666: LCDdisplay();
  4499  001136  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  4500                           
  4501                           ;space shot.c: 667: LCDready();
  4502  00113A  EC29  F00F         	call	i2_LCDready	;wreg free
  4503                           
  4504                           ;space shot.c: 668: _delay(19700);
  4505  00113E  0E1A               	movlw	26
  4506  001140  6E3E               	movwf	??_N1& (0+255),c
  4507  001142  0E94               	movlw	148
  4508  001144                     i2u403_47:
  4509  001144  2EE8               	decfsz	wreg,f,c
  4510  001146  D7FE               	goto	i2u403_47
  4511  001148  2E3E               	decfsz	??_N1& (0+255),f,c
  4512  00114A  D7FC               	goto	i2u403_47
  4513  00114C  D000               	nop2	
  4514                           
  4515                           ;space shot.c: 669: if(secuencia[counter2]!=secuencia_gen[counter2]){
  4516  00114E  504F               	movf	_counter2,w,c
  4517  001150  0D01               	mullw	1
  4518  001152  0E2D               	movlw	low N1@secuencia_gen
  4519  001154  24F3               	addwf	prodl,w,c
  4520  001156  6ED9               	movwf	fsr2l,c
  4521  001158  0E00               	movlw	high N1@secuencia_gen
  4522  00115A  20F4               	addwfc	prodh,w,c
  4523  00115C  6EDA               	movwf	fsr2h,c
  4524  00115E  504F               	movf	_counter2,w,c
  4525  001160  0D01               	mullw	1
  4526  001162  0E2A               	movlw	low N1@secuencia
  4527  001164  24F3               	addwf	prodl,w,c
  4528  001166  6EE1               	movwf	fsr1l,c
  4529  001168  0E00               	movlw	high N1@secuencia
  4530  00116A  20F4               	addwfc	prodh,w,c
  4531  00116C  6EE2               	movwf	fsr1h,c
  4532  00116E  50DE               	movf	postinc2,w,c
  4533  001170  18E6               	xorwf	postinc1,w,c
  4534  001172  A4D8               	btfss	status,2,c
  4535  001174  D03D               	goto	i2l2951
  4536  001176                     i2l381:
  4537                           
  4538                           ;space shot.c: 673: }
  4539                           ;space shot.c: 674: }
  4540                           ;space shot.c: 675: if(PORTAbits.RA4==1){
  4541  001176  A880               	btfss	3968,4,c	;volatile
  4542  001178  D03E               	goto	i2l2955
  4543                           
  4544                           ;space shot.c: 676: One_Shot_B5();
  4545  00117A  EC98  F00E         	call	_One_Shot_B5	;wreg free
  4546                           
  4547                           ;space shot.c: 677: if (ons_B5 == 1){
  4548  00117E  040B               	decf	_ons_B5,w,c
  4549  001180  B4D8               	btfsc	status,2,c
  4550                           
  4551                           ;space shot.c: 678: Reset_One_Shot_B5();
  4552  001182  EC88  F00F         	call	_Reset_One_Shot_B5	;wreg free
  4553                           
  4554                           ;space shot.c: 679: }
  4555                           ;space shot.c: 680: secuencia_gen[counter2]=5;
  4556  001186  504F               	movf	_counter2,w,c
  4557  001188  0D01               	mullw	1
  4558  00118A  0E2D               	movlw	low N1@secuencia_gen
  4559  00118C  24F3               	addwf	prodl,w,c
  4560  00118E  6ED9               	movwf	fsr2l,c
  4561  001190  0E00               	movlw	high N1@secuencia_gen
  4562  001192  20F4               	addwfc	prodh,w,c
  4563  001194  6EDA               	movwf	fsr2h,c
  4564  001196  0E05               	movlw	5
  4565  001198  6EDF               	movwf	indf2,c
  4566                           
  4567                           ;space shot.c: 681: PORTD= secuencia_gen[counter2]+48;
  4568  00119A  504F               	movf	_counter2,w,c
  4569  00119C  0D01               	mullw	1
  4570  00119E  0E2D               	movlw	low N1@secuencia_gen
  4571  0011A0  24F3               	addwf	prodl,w,c
  4572  0011A2  6ED9               	movwf	fsr2l,c
  4573  0011A4  0E00               	movlw	high N1@secuencia_gen
  4574  0011A6  20F4               	addwfc	prodh,w,c
  4575  0011A8  6EDA               	movwf	fsr2h,c
  4576  0011AA  50DF               	movf	indf2,w,c
  4577  0011AC  0F30               	addlw	48
  4578  0011AE  6E83               	movwf	3971,c	;volatile
  4579                           
  4580                           ;space shot.c: 682: LCDdisplay();
  4581  0011B0  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  4582                           
  4583                           ;space shot.c: 683: LCDready();
  4584  0011B4  EC29  F00F         	call	i2_LCDready	;wreg free
  4585                           
  4586                           ;space shot.c: 684: _delay(19700);
  4587  0011B8  0E1A               	movlw	26
  4588  0011BA  6E3E               	movwf	??_N1& (0+255),c
  4589  0011BC  0E94               	movlw	148
  4590  0011BE                     i2u404_47:
  4591  0011BE  2EE8               	decfsz	wreg,f,c
  4592  0011C0  D7FE               	goto	i2u404_47
  4593  0011C2  2E3E               	decfsz	??_N1& (0+255),f,c
  4594  0011C4  D7FC               	goto	i2u404_47
  4595  0011C6  D000               	nop2	
  4596                           
  4597                           ;space shot.c: 685: if(secuencia[counter2]!=secuencia_gen[counter2]){
  4598  0011C8  504F               	movf	_counter2,w,c
  4599  0011CA  0D01               	mullw	1
  4600  0011CC  0E2D               	movlw	low N1@secuencia_gen
  4601  0011CE  24F3               	addwf	prodl,w,c
  4602  0011D0  6ED9               	movwf	fsr2l,c
  4603  0011D2  0E00               	movlw	high N1@secuencia_gen
  4604  0011D4  20F4               	addwfc	prodh,w,c
  4605  0011D6  6EDA               	movwf	fsr2h,c
  4606  0011D8  504F               	movf	_counter2,w,c
  4607  0011DA  0D01               	mullw	1
  4608  0011DC  0E2A               	movlw	low N1@secuencia
  4609  0011DE  24F3               	addwf	prodl,w,c
  4610  0011E0  6EE1               	movwf	fsr1l,c
  4611  0011E2  0E00               	movlw	high N1@secuencia
  4612  0011E4  20F4               	addwfc	prodh,w,c
  4613  0011E6  6EE2               	movwf	fsr1h,c
  4614  0011E8  50DE               	movf	postinc2,w,c
  4615  0011EA  18E6               	xorwf	postinc1,w,c
  4616  0011EC  B4D8               	btfsc	status,2,c
  4617  0011EE  D003               	goto	i2l2955
  4618  0011F0                     i2l2951:
  4619                           
  4620                           ;space shot.c: 686: counter=0;
  4621  0011F0  0E00               	movlw	0
  4622  0011F2  6E05               	movwf	_counter,c
  4623  0011F4  D707               	goto	i2l2881
  4624  0011F6                     i2l2955:
  4625                           
  4626                           ;space shot.c: 689: }
  4627                           ;space shot.c: 690: }
  4628                           ;space shot.c: 691: PORTC=0b00000000;
  4629  0011F6  0E00               	movlw	0
  4630  0011F8  6E82               	movwf	3970,c	;volatile
  4631                           
  4632                           ;space shot.c: 693: if (secuencia[1]==secuencia_gen[1]&& secuencia[2]==secuencia_gen[2])
      +                          {
  4633  0011FA  502E               	movf	N1@secuencia_gen+1,w,c
  4634  0011FC  182B               	xorwf	N1@secuencia+1,w,c
  4635  0011FE  A4D8               	btfss	status,2,c
  4636  001200  D6BF               	goto	i2l2861
  4637  001202  502F               	movf	N1@secuencia_gen+2,w,c
  4638  001204  182C               	xorwf	N1@secuencia+2,w,c
  4639  001206  A4D8               	btfss	status,2,c
  4640  001208  D6BB               	goto	i2l2861
  4641                           
  4642                           ;space shot.c: 694: intentos++;
  4643  00120A  2A06               	incf	_intentos,f,c
  4644                           
  4645                           ;space shot.c: 695: acierto++;
  4646  00120C  2A04               	incf	_acierto,f,c
  4647                           
  4648                           ;space shot.c: 696: for(n1=0; n1<=3; n1++){
  4649  00120E  0E00               	movlw	0
  4650  001210  6E2F               	movwf	N1@n1,c
  4651  001212                     i2l2965:
  4652  001212  0E03               	movlw	3
  4653  001214  642F               	cpfsgt	N1@n1,c
  4654  001216  D001               	goto	i2l2969
  4655  001218  D6B3               	goto	i2l2861
  4656  00121A                     i2l2969:
  4657                           
  4658                           ;space shot.c: 697: PORTC=0b1111000;
  4659  00121A  0E78               	movlw	120
  4660  00121C  6E82               	movwf	3970,c	;volatile
  4661                           
  4662                           ;space shot.c: 698: _delay(19700);
  4663  00121E  0E1A               	movlw	26
  4664  001220  6E3E               	movwf	??_N1& (0+255),c
  4665  001222  0E94               	movlw	148
  4666  001224                     i2u405_47:
  4667  001224  2EE8               	decfsz	wreg,f,c
  4668  001226  D7FE               	goto	i2u405_47
  4669  001228  2E3E               	decfsz	??_N1& (0+255),f,c
  4670  00122A  D7FC               	goto	i2u405_47
  4671  00122C  D000               	nop2	
  4672                           
  4673                           ;space shot.c: 699: PORTC=0b00000000;
  4674  00122E  0E00               	movlw	0
  4675  001230  6E82               	movwf	3970,c	;volatile
  4676  001232  2A2F               	incf	N1@n1,f,c
  4677  001234  D7EE               	goto	i2l2965
  4678  001236                     i2l371:
  4679                           
  4680                           ;space shot.c: 700: }
  4681                           ;space shot.c: 701: }
  4682                           ;space shot.c: 703: }
  4683                           ;space shot.c: 704: PORTCbits.RC3=0;
  4684  001236  9682               	bcf	3970,3,c	;volatile
  4685                           
  4686                           ;space shot.c: 705: PORTCbits.RC4=0;
  4687  001238  9882               	bcf	3970,4,c	;volatile
  4688                           
  4689                           ;space shot.c: 706: PORTCbits.RC5=0;
  4690  00123A  9A82               	bcf	3970,5,c	;volatile
  4691                           
  4692                           ;space shot.c: 707: PORTCbits.RC6=0;
  4693  00123C  9C82               	bcf	3970,6,c	;volatile
  4694                           
  4695                           ;space shot.c: 708: PORTCbits.RC7=0;
  4696  00123E  9E82               	bcf	3970,7,c	;volatile
  4697                           
  4698                           ;space shot.c: 709: PORTD= 0x01;
  4699  001240  0E01               	movlw	1
  4700  001242  6E83               	movwf	3971,c	;volatile
  4701                           
  4702                           ;space shot.c: 710: Command ();
  4703  001244  ECCB  F00F         	call	i2_Command	;wreg free
  4704                           
  4705                           ;space shot.c: 711: LCDready();
  4706  001248  EC29  F00F         	call	i2_LCDready	;wreg free
  4707                           
  4708                           ;space shot.c: 712: _delay(19700);
  4709  00124C  0E1A               	movlw	26
  4710  00124E  6E3E               	movwf	??_N1& (0+255),c
  4711  001250  0E94               	movlw	148
  4712  001252                     i2u406_47:
  4713  001252  2EE8               	decfsz	wreg,f,c
  4714  001254  D7FE               	goto	i2u406_47
  4715  001256  2E3E               	decfsz	??_N1& (0+255),f,c
  4716  001258  D7FC               	goto	i2u406_47
  4717  00125A  D000               	nop2	
  4718  00125C                     i2l2987:
  4719  00125C  0E02               	movlw	2
  4720  00125E  6404               	cpfsgt	_acierto,c
  4721  001260  D5A9               	goto	i2l2729
  4722                           
  4723                           ;space shot.c: 714: }
  4724                           ;space shot.c: 716: PORTD= 0x01;
  4725  001262  0E01               	movlw	1
  4726  001264  6E83               	movwf	3971,c	;volatile
  4727                           
  4728                           ;space shot.c: 717: Command ();
  4729  001266  ECCB  F00F         	call	i2_Command	;wreg free
  4730                           
  4731                           ;space shot.c: 718: LCDready();
  4732  00126A  EC29  F00F         	call	i2_LCDready	;wreg free
  4733                           
  4734                           ;space shot.c: 719: Resultado();
  4735  00126E  ECF4  F00A         	call	_Resultado	;wreg free
  4736  001272  0012               	return		;funcret
  4737  001274                     __end_of_N1:
  4738                           	opt stack 0
  4739                           pclatu	equ	0xFFB
  4740                           pclath	equ	0xFFA
  4741                           tblptru	equ	0xFF8
  4742                           tblptrh	equ	0xFF7
  4743                           tblptrl	equ	0xFF6
  4744                           tablat	equ	0xFF5
  4745                           prodh	equ	0xFF4
  4746                           prodl	equ	0xFF3
  4747                           intcon	equ	0xFF2
  4748                           intcon2	equ	0xFF1
  4749                           postinc0	equ	0xFEE
  4750                           fsr0h	equ	0xFEA
  4751                           fsr0l	equ	0xFE9
  4752                           wreg	equ	0xFE8
  4753                           postinc1	equ	0xFE6
  4754                           postdec1	equ	0xFE5
  4755                           fsr1h	equ	0xFE2
  4756                           fsr1l	equ	0xFE1
  4757                           indf2	equ	0xFDF
  4758                           postinc2	equ	0xFDE
  4759                           fsr2h	equ	0xFDA
  4760                           fsr2l	equ	0xFD9
  4761                           status	equ	0xFD8
  4762                           
  4763 ;; *************** function _srand *****************
  4764 ;; Defined at:
  4765 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  x               2    0[COMRAM] unsigned int 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		status,2
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  4779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  4781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  4782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  4783 ;;Total ram usage:        2 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_N1
  4789 ;;		_N2
  4790 ;;		_N3
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text23
  4795  001F6A                     __ptext23:
  4796                           	opt stack 0
  4797  001F6A                     _srand:
  4798                           	opt stack 23
  4799                           
  4800                           ;incstack = 0
  4801  001F6A  C057  F07F         	movff	srand@x,_randx
  4802  001F6E  C058  F080         	movff	srand@x+1,_randx+1
  4803  001F72  0100               	movlb	0	; () banked
  4804  001F74  6B81               	clrf	(_randx+2)& (0+255),b
  4805  001F76  6B82               	clrf	(_randx+3)& (0+255),b
  4806                           
  4807                           ; BSR set to: 0
  4808  001F78  0012               	return		;funcret
  4809  001F7A                     __end_of_srand:
  4810                           	opt stack 0
  4811                           pclatu	equ	0xFFB
  4812                           pclath	equ	0xFFA
  4813                           tblptru	equ	0xFF8
  4814                           tblptrh	equ	0xFF7
  4815                           tblptrl	equ	0xFF6
  4816                           tablat	equ	0xFF5
  4817                           prodh	equ	0xFF4
  4818                           prodl	equ	0xFF3
  4819                           intcon	equ	0xFF2
  4820                           intcon2	equ	0xFF1
  4821                           postinc0	equ	0xFEE
  4822                           fsr0h	equ	0xFEA
  4823                           fsr0l	equ	0xFE9
  4824                           wreg	equ	0xFE8
  4825                           postinc1	equ	0xFE6
  4826                           postdec1	equ	0xFE5
  4827                           fsr1h	equ	0xFE2
  4828                           fsr1l	equ	0xFE1
  4829                           indf2	equ	0xFDF
  4830                           postinc2	equ	0xFDE
  4831                           fsr2h	equ	0xFDA
  4832                           fsr2l	equ	0xFD9
  4833                           status	equ	0xFD8
  4834                           
  4835 ;; *************** function _rand *****************
  4836 ;; Defined at:
  4837 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;		None
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  2    4[COMRAM] int 
  4844 ;; Registers used:
  4845 ;;		wreg, status,2, status,0, cstack
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  4851 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  4852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  4853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  4854 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  4855 ;;Total ram usage:        2 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    1
  4858 ;; This function calls:
  4859 ;;		___lmul
  4860 ;; This function is called by:
  4861 ;;		_N1
  4862 ;;		_N2
  4863 ;;		_N3
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text24
  4868  001B44                     __ptext24:
  4869                           	opt stack 0
  4870  001B44                     _rand:
  4871                           	opt stack 22
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;incstack = 0
  4875  001B44  C07F  F057         	movff	_randx,___lmul@multiplier
  4876  001B48  C080  F058         	movff	_randx+1,___lmul@multiplier+1
  4877  001B4C  C081  F059         	movff	_randx+2,___lmul@multiplier+2
  4878  001B50  C082  F05A         	movff	_randx+3,___lmul@multiplier+3
  4879  001B54  0E6D               	movlw	109
  4880  001B56  6E5B               	movwf	___lmul@multiplicand,c
  4881  001B58  0E4E               	movlw	78
  4882  001B5A  6E5C               	movwf	___lmul@multiplicand+1,c
  4883  001B5C  0EC6               	movlw	198
  4884  001B5E  6E5D               	movwf	___lmul@multiplicand+2,c
  4885  001B60  0E41               	movlw	65
  4886  001B62  6E5E               	movwf	___lmul@multiplicand+3,c
  4887  001B64  ECCE  F00D         	call	___lmul	;wreg free
  4888  001B68  C057  F07F         	movff	?___lmul,_randx
  4889  001B6C  C058  F080         	movff	?___lmul+1,_randx+1
  4890  001B70  C059  F081         	movff	?___lmul+2,_randx+2
  4891  001B74  C05A  F082         	movff	?___lmul+3,_randx+3
  4892  001B78  0E39               	movlw	57
  4893  001B7A  0100               	movlb	0	; () banked
  4894  001B7C  277F               	addwf	_randx& (0+255),f,b
  4895  001B7E  0E30               	movlw	48
  4896  001B80  2380               	addwfc	(_randx+1)& (0+255),f,b
  4897  001B82  0E00               	movlw	0
  4898  001B84  2381               	addwfc	(_randx+2)& (0+255),f,b
  4899  001B86  0E00               	movlw	0
  4900  001B88  2382               	addwfc	(_randx+3)& (0+255),f,b
  4901                           
  4902                           ; BSR set to: 0
  4903  001B8A  0EFF               	movlw	255
  4904  001B8C  0100               	movlb	0	; () banked
  4905  001B8E  1581               	andwf	(_randx+2)& (0+255),w,b
  4906  001B90  6E4B               	movwf	?_rand,c
  4907  001B92  0E7F               	movlw	127
  4908  001B94  0100               	movlb	0	; () banked
  4909  001B96  1582               	andwf	(_randx+3)& (0+255),w,b
  4910  001B98  6E4C               	movwf	?_rand+1,c
  4911  001B9A  0012               	return	
  4912  001B9C                     __end_of_rand:
  4913                           	opt stack 0
  4914                           pclatu	equ	0xFFB
  4915                           pclath	equ	0xFFA
  4916                           tblptru	equ	0xFF8
  4917                           tblptrh	equ	0xFF7
  4918                           tblptrl	equ	0xFF6
  4919                           tablat	equ	0xFF5
  4920                           prodh	equ	0xFF4
  4921                           prodl	equ	0xFF3
  4922                           intcon	equ	0xFF2
  4923                           intcon2	equ	0xFF1
  4924                           postinc0	equ	0xFEE
  4925                           fsr0h	equ	0xFEA
  4926                           fsr0l	equ	0xFE9
  4927                           wreg	equ	0xFE8
  4928                           postinc1	equ	0xFE6
  4929                           postdec1	equ	0xFE5
  4930                           fsr1h	equ	0xFE2
  4931                           fsr1l	equ	0xFE1
  4932                           indf2	equ	0xFDF
  4933                           postinc2	equ	0xFDE
  4934                           fsr2h	equ	0xFDA
  4935                           fsr2l	equ	0xFD9
  4936                           status	equ	0xFD8
  4937                           
  4938 ;; *************** function ___lmul *****************
  4939 ;; Defined at:
  4940 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  multiplier      4    0[COMRAM] unsigned long 
  4943 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  product         4    0[COMRAM] unsigned long 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  4    0[COMRAM] unsigned long 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  4955 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  4956 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  4958 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  4959 ;;Total ram usage:       12 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_rand
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text25
  4969  001B9C                     __ptext25:
  4970                           	opt stack 0
  4971  001B9C                     ___lmul:
  4972                           	opt stack 22
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;incstack = 0
  4976  001B9C  0E00               	movlw	0
  4977  001B9E  6E47               	movwf	___lmul@product,c
  4978  001BA0  0E00               	movlw	0
  4979  001BA2  6E48               	movwf	___lmul@product+1,c
  4980  001BA4  0E00               	movlw	0
  4981  001BA6  6E49               	movwf	___lmul@product+2,c
  4982  001BA8  0E00               	movlw	0
  4983  001BAA  6E4A               	movwf	___lmul@product+3,c
  4984  001BAC                     i2l2343:
  4985  001BAC  A057               	btfss	___lmul@multiplier,0,c
  4986  001BAE  D008               	goto	i2l2347
  4987  001BB0  505B               	movf	___lmul@multiplicand,w,c
  4988  001BB2  2647               	addwf	___lmul@product,f,c
  4989  001BB4  505C               	movf	___lmul@multiplicand+1,w,c
  4990  001BB6  2248               	addwfc	___lmul@product+1,f,c
  4991  001BB8  505D               	movf	___lmul@multiplicand+2,w,c
  4992  001BBA  2249               	addwfc	___lmul@product+2,f,c
  4993  001BBC  505E               	movf	___lmul@multiplicand+3,w,c
  4994  001BBE  224A               	addwfc	___lmul@product+3,f,c
  4995  001BC0                     i2l2347:
  4996  001BC0  90D8               	bcf	status,0,c
  4997  001BC2  365B               	rlcf	___lmul@multiplicand,f,c
  4998  001BC4  365C               	rlcf	___lmul@multiplicand+1,f,c
  4999  001BC6  365D               	rlcf	___lmul@multiplicand+2,f,c
  5000  001BC8  365E               	rlcf	___lmul@multiplicand+3,f,c
  5001  001BCA  90D8               	bcf	status,0,c
  5002  001BCC  325A               	rrcf	___lmul@multiplier+3,f,c
  5003  001BCE  3259               	rrcf	___lmul@multiplier+2,f,c
  5004  001BD0  3258               	rrcf	___lmul@multiplier+1,f,c
  5005  001BD2  3257               	rrcf	___lmul@multiplier,f,c
  5006  001BD4  5057               	movf	___lmul@multiplier,w,c
  5007  001BD6  1058               	iorwf	___lmul@multiplier+1,w,c
  5008  001BD8  1059               	iorwf	___lmul@multiplier+2,w,c
  5009  001BDA  105A               	iorwf	___lmul@multiplier+3,w,c
  5010  001BDC  A4D8               	btfss	status,2,c
  5011  001BDE  D7E6               	goto	i2l2343
  5012  001BE0  C047  F057         	movff	___lmul@product,?___lmul
  5013  001BE4  C048  F058         	movff	___lmul@product+1,?___lmul+1
  5014  001BE8  C049  F059         	movff	___lmul@product+2,?___lmul+2
  5015  001BEC  C04A  F05A         	movff	___lmul@product+3,?___lmul+3
  5016  001BF0  0012               	return		;funcret
  5017  001BF2                     __end_of___lmul:
  5018                           	opt stack 0
  5019                           pclatu	equ	0xFFB
  5020                           pclath	equ	0xFFA
  5021                           tblptru	equ	0xFF8
  5022                           tblptrh	equ	0xFF7
  5023                           tblptrl	equ	0xFF6
  5024                           tablat	equ	0xFF5
  5025                           prodh	equ	0xFF4
  5026                           prodl	equ	0xFF3
  5027                           intcon	equ	0xFF2
  5028                           intcon2	equ	0xFF1
  5029                           postinc0	equ	0xFEE
  5030                           fsr0h	equ	0xFEA
  5031                           fsr0l	equ	0xFE9
  5032                           wreg	equ	0xFE8
  5033                           postinc1	equ	0xFE6
  5034                           postdec1	equ	0xFE5
  5035                           fsr1h	equ	0xFE2
  5036                           fsr1l	equ	0xFE1
  5037                           indf2	equ	0xFDF
  5038                           postinc2	equ	0xFDE
  5039                           fsr2h	equ	0xFDA
  5040                           fsr2l	equ	0xFD9
  5041                           status	equ	0xFD8
  5042                           
  5043 ;; *************** function ___awmod *****************
  5044 ;; Defined at:
  5045 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  dividend        2    0[COMRAM] int 
  5048 ;;  divisor         2    2[COMRAM] int 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  sign            1    7[COMRAM] unsigned char 
  5051 ;;  counter         1    6[COMRAM] unsigned char 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  2    0[COMRAM] int 
  5054 ;; Registers used:
  5055 ;;		wreg, status,2, status,0
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  5061 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5062 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5064 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5065 ;;Total ram usage:        6 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_N1
  5071 ;;		_N2
  5072 ;;		_N3
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text26
  5077  001AD4                     __ptext26:
  5078                           	opt stack 0
  5079  001AD4                     ___awmod:
  5080                           	opt stack 23
  5081                           
  5082                           ;incstack = 0
  5083  001AD4  0E00               	movlw	0
  5084  001AD6  6E4E               	movwf	___awmod@sign,c
  5085  001AD8  AE3B               	btfss	___awmod@dividend+1,7,c
  5086  001ADA  D006               	goto	i2l2635
  5087  001ADC  6C3A               	negf	___awmod@dividend,c
  5088  001ADE  1E3B               	comf	___awmod@dividend+1,f,c
  5089  001AE0  B0D8               	btfsc	status,0,c
  5090  001AE2  2A3B               	incf	___awmod@dividend+1,f,c
  5091  001AE4  0E01               	movlw	1
  5092  001AE6  6E4E               	movwf	___awmod@sign,c
  5093  001AE8                     i2l2635:
  5094  001AE8  AE3D               	btfss	___awmod@divisor+1,7,c
  5095  001AEA  D004               	goto	i2l2639
  5096  001AEC  6C3C               	negf	___awmod@divisor,c
  5097  001AEE  1E3D               	comf	___awmod@divisor+1,f,c
  5098  001AF0  B0D8               	btfsc	status,0,c
  5099  001AF2  2A3D               	incf	___awmod@divisor+1,f,c
  5100  001AF4                     i2l2639:
  5101  001AF4  503C               	movf	___awmod@divisor,w,c
  5102  001AF6  103D               	iorwf	___awmod@divisor+1,w,c
  5103  001AF8  B4D8               	btfsc	status,2,c
  5104  001AFA  D018               	goto	i2l2655
  5105  001AFC  0E01               	movlw	1
  5106  001AFE  6E4D               	movwf	___awmod@counter,c
  5107  001B00  D004               	goto	i2l2645
  5108  001B02                     i2l2643:
  5109  001B02  90D8               	bcf	status,0,c
  5110  001B04  363C               	rlcf	___awmod@divisor,f,c
  5111  001B06  363D               	rlcf	___awmod@divisor+1,f,c
  5112  001B08  2A4D               	incf	___awmod@counter,f,c
  5113  001B0A                     i2l2645:
  5114  001B0A  AE3D               	btfss	___awmod@divisor+1,7,c
  5115  001B0C  D7FA               	goto	i2l2643
  5116  001B0E                     i2l2647:
  5117  001B0E  503C               	movf	___awmod@divisor,w,c
  5118  001B10  5C3A               	subwf	___awmod@dividend,w,c
  5119  001B12  503D               	movf	___awmod@divisor+1,w,c
  5120  001B14  583B               	subwfb	___awmod@dividend+1,w,c
  5121  001B16  A0D8               	btfss	status,0,c
  5122  001B18  D004               	goto	i2l2651
  5123  001B1A  503C               	movf	___awmod@divisor,w,c
  5124  001B1C  5E3A               	subwf	___awmod@dividend,f,c
  5125  001B1E  503D               	movf	___awmod@divisor+1,w,c
  5126  001B20  5A3B               	subwfb	___awmod@dividend+1,f,c
  5127  001B22                     i2l2651:
  5128  001B22  90D8               	bcf	status,0,c
  5129  001B24  323D               	rrcf	___awmod@divisor+1,f,c
  5130  001B26  323C               	rrcf	___awmod@divisor,f,c
  5131  001B28  2E4D               	decfsz	___awmod@counter,f,c
  5132  001B2A  D7F1               	goto	i2l2647
  5133  001B2C                     i2l2655:
  5134  001B2C  504E               	movf	___awmod@sign,w,c
  5135  001B2E  B4D8               	btfsc	status,2,c
  5136  001B30  D004               	goto	i2l2659
  5137  001B32  6C3A               	negf	___awmod@dividend,c
  5138  001B34  1E3B               	comf	___awmod@dividend+1,f,c
  5139  001B36  B0D8               	btfsc	status,0,c
  5140  001B38  2A3B               	incf	___awmod@dividend+1,f,c
  5141  001B3A                     i2l2659:
  5142  001B3A  C03A  F03A         	movff	___awmod@dividend,?___awmod
  5143  001B3E  C03B  F03B         	movff	___awmod@dividend+1,?___awmod+1
  5144  001B42  0012               	return	
  5145  001B44                     __end_of___awmod:
  5146                           	opt stack 0
  5147                           pclatu	equ	0xFFB
  5148                           pclath	equ	0xFFA
  5149                           tblptru	equ	0xFF8
  5150                           tblptrh	equ	0xFF7
  5151                           tblptrl	equ	0xFF6
  5152                           tablat	equ	0xFF5
  5153                           prodh	equ	0xFF4
  5154                           prodl	equ	0xFF3
  5155                           intcon	equ	0xFF2
  5156                           intcon2	equ	0xFF1
  5157                           postinc0	equ	0xFEE
  5158                           fsr0h	equ	0xFEA
  5159                           fsr0l	equ	0xFE9
  5160                           wreg	equ	0xFE8
  5161                           postinc1	equ	0xFE6
  5162                           postdec1	equ	0xFE5
  5163                           fsr1h	equ	0xFE2
  5164                           fsr1l	equ	0xFE1
  5165                           indf2	equ	0xFDF
  5166                           postinc2	equ	0xFDE
  5167                           fsr2h	equ	0xFDA
  5168                           fsr2l	equ	0xFD9
  5169                           status	equ	0xFD8
  5170                           
  5171 ;; *************** function _Resultado *****************
  5172 ;; Defined at:
  5173 ;;		line 859 in file "space shot.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;		None
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  R               1    5[COMRAM] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  5187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5189 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5191 ;;Total ram usage:        2 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    3
  5194 ;; This function calls:
  5195 ;;		___lbdiv
  5196 ;;		i2_Command
  5197 ;;		i2_LCDdisplay
  5198 ;;		i2_LCDready
  5199 ;;		i2_LCDsetup
  5200 ;;		i2_Servo_In
  5201 ;; This function is called by:
  5202 ;;		_N1
  5203 ;;		_N2
  5204 ;;		_N3
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text27
  5209  0015E8                     __ptext27:
  5210                           	opt stack 0
  5211  0015E8                     _Resultado:
  5212                           	opt stack 20
  5213                           
  5214                           ;space shot.c: 860: PORTDbits.RD7=0;
  5215                           
  5216                           ;incstack = 0
  5217  0015E8  9E83               	bcf	3971,7,c	;volatile
  5218                           
  5219                           ;space shot.c: 861: LCDsetup();
  5220  0015EA  EC82  F00E         	call	i2_LCDsetup	;wreg free
  5221                           
  5222                           ;space shot.c: 862: unsigned char R;
  5223                           ;space shot.c: 863: for(R=0;R<15;R++){
  5224  0015EE  0E00               	movlw	0
  5225  0015F0  6E5C               	movwf	Resultado@R,c
  5226  0015F2                     i2l2569:
  5227  0015F2  0E0E               	movlw	14
  5228  0015F4  645C               	cpfsgt	Resultado@R,c
  5229  0015F6  D001               	goto	i2l2573
  5230  0015F8  D026               	goto	i2l2585
  5231  0015FA                     i2l2573:
  5232                           
  5233                           ;space shot.c: 864: myRAMarray6 [R] = RESULTADO [R];
  5234  0015FA  505C               	movf	Resultado@R,w,c
  5235  0015FC  0D01               	mullw	1
  5236  0015FE  0E70               	movlw	112
  5237  001600  24F3               	addwf	prodl,w,c
  5238  001602  6EF6               	movwf	tblptrl,c
  5239  001604  0E00               	movlw	0
  5240  001606  20F4               	addwfc	prodh,w,c
  5241  001608  6EF7               	movwf	tblptrh,c
  5242  00160A  6AF8               	clrf	tblptru,c
  5243  00160C  0E00               	movlw	0
  5244  00160E  22F8               	addwfc	tblptru,f,c
  5245  001610  505C               	movf	Resultado@R,w,c
  5246  001612  0D01               	mullw	1
  5247  001614  0E70               	movlw	112
  5248  001616  24F3               	addwf	prodl,w,c
  5249  001618  6ED9               	movwf	fsr2l,c
  5250  00161A  0E00               	movlw	0
  5251  00161C  20F4               	addwfc	prodh,w,c
  5252  00161E  6EDA               	movwf	fsr2h,c
  5253  001620  0008               	tblrd		*
  5254  001622  CFF5 FFDF          	movff	tablat,indf2
  5255                           
  5256                           ;space shot.c: 865: PORTD=myRAMarray6[R];
  5257  001626  505C               	movf	Resultado@R,w,c
  5258  001628  0D01               	mullw	1
  5259  00162A  0E70               	movlw	112
  5260  00162C  24F3               	addwf	prodl,w,c
  5261  00162E  6ED9               	movwf	fsr2l,c
  5262  001630  0E00               	movlw	0
  5263  001632  20F4               	addwfc	prodh,w,c
  5264  001634  6EDA               	movwf	fsr2h,c
  5265  001636  50DF               	movf	indf2,w,c
  5266  001638  6E83               	movwf	3971,c	;volatile
  5267                           
  5268                           ;space shot.c: 866: LCDdisplay();
  5269  00163A  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  5270                           
  5271                           ;space shot.c: 867: LCDready();}
  5272  00163E  EC29  F00F         	call	i2_LCDready	;wreg free
  5273  001642  2A5C               	incf	Resultado@R,f,c
  5274  001644  D7D6               	goto	i2l2569
  5275  001646                     i2l2585:
  5276                           
  5277                           ;space shot.c: 868: PORTC=0b11111000;
  5278  001646  0EF8               	movlw	248
  5279  001648  6E82               	movwf	3970,c	;volatile
  5280                           
  5281                           ;space shot.c: 869: Servo_In();
  5282  00164A  EC52  F00E         	call	i2_Servo_In	;wreg free
  5283                           
  5284                           ;space shot.c: 870: for(R=0; R<10; R++){
  5285  00164E  0E00               	movlw	0
  5286  001650  6E5C               	movwf	Resultado@R,c
  5287  001652                     i2l2591:
  5288  001652  0E09               	movlw	9
  5289  001654  645C               	cpfsgt	Resultado@R,c
  5290  001656  D001               	goto	i2l2595
  5291  001658  0012               	return	
  5292  00165A                     i2l2595:
  5293                           
  5294                           ;space shot.c: 871: _delay(197000);
  5295  00165A  0E00               	movlw	0
  5296  00165C  6E5B               	movwf	??_Resultado& (0+255),c
  5297  00165E  0ED7               	movlw	215
  5298  001660                     i2u407_47:
  5299  001660  2EE8               	decfsz	wreg,f,c
  5300  001662  D7FE               	goto	i2u407_47
  5301  001664  2E5B               	decfsz	??_Resultado& (0+255),f,c
  5302  001666  D7FC               	goto	i2u407_47
  5303  001668  F000               	nop	
  5304                           
  5305                           ;space shot.c: 872: PORTD= 0x01;
  5306  00166A  0E01               	movlw	1
  5307  00166C  6E83               	movwf	3971,c	;volatile
  5308                           
  5309                           ;space shot.c: 873: Command ();
  5310  00166E  ECCB  F00F         	call	i2_Command	;wreg free
  5311                           
  5312                           ;space shot.c: 874: LCDready();
  5313  001672  EC29  F00F         	call	i2_LCDready	;wreg free
  5314                           
  5315                           ;space shot.c: 875: score[2]= acierto/intentos;
  5316  001676  C006  F057         	movff	_intentos,___lbdiv@divisor
  5317  00167A  5004               	movf	_acierto,w,c
  5318  00167C  EC19  F00E         	call	___lbdiv
  5319  001680  6E03               	movwf	_score+2,c
  5320                           
  5321                           ;space shot.c: 876: if ((acierto/intentos)<1){
  5322  001682  C006  F057         	movff	_intentos,___lbdiv@divisor
  5323  001686  5004               	movf	_acierto,w,c
  5324  001688  EC19  F00E         	call	___lbdiv
  5325  00168C  0900               	iorlw	0
  5326  00168E  A4D8               	btfss	status,2,c
  5327  001690  D017               	goto	i2l2623
  5328                           
  5329                           ;space shot.c: 877: for(R=1; R<3; R++){
  5330  001692  0E01               	movlw	1
  5331  001694  6E5C               	movwf	Resultado@R,c
  5332  001696                     i2l2609:
  5333  001696  0E02               	movlw	2
  5334  001698  645C               	cpfsgt	Resultado@R,c
  5335  00169A  D001               	goto	i2l2613
  5336  00169C  D011               	goto	i2l2623
  5337  00169E                     i2l2613:
  5338                           
  5339                           ;space shot.c: 878: PORTD= score[R]+48;
  5340  00169E  505C               	movf	Resultado@R,w,c
  5341  0016A0  0D01               	mullw	1
  5342  0016A2  0E01               	movlw	low _score
  5343  0016A4  24F3               	addwf	prodl,w,c
  5344  0016A6  6ED9               	movwf	fsr2l,c
  5345  0016A8  0E00               	movlw	high _score
  5346  0016AA  20F4               	addwfc	prodh,w,c
  5347  0016AC  6EDA               	movwf	fsr2h,c
  5348  0016AE  50DF               	movf	indf2,w,c
  5349  0016B0  0F30               	addlw	48
  5350  0016B2  6E83               	movwf	3971,c	;volatile
  5351                           
  5352                           ;space shot.c: 879: LCDdisplay();
  5353  0016B4  ECD2  F00F         	call	i2_LCDdisplay	;wreg free
  5354                           
  5355                           ;space shot.c: 880: LCDready();
  5356  0016B8  EC29  F00F         	call	i2_LCDready	;wreg free
  5357  0016BC  2A5C               	incf	Resultado@R,f,c
  5358  0016BE  D7EB               	goto	i2l2609
  5359  0016C0                     i2l2623:
  5360  0016C0  2A5C               	incf	Resultado@R,f,c
  5361  0016C2  D7C7               	goto	i2l2591
  5362  0016C4                     __end_of_Resultado:
  5363                           	opt stack 0
  5364                           pclatu	equ	0xFFB
  5365                           pclath	equ	0xFFA
  5366                           tblptru	equ	0xFF8
  5367                           tblptrh	equ	0xFF7
  5368                           tblptrl	equ	0xFF6
  5369                           tablat	equ	0xFF5
  5370                           prodh	equ	0xFF4
  5371                           prodl	equ	0xFF3
  5372                           intcon	equ	0xFF2
  5373                           intcon2	equ	0xFF1
  5374                           postinc0	equ	0xFEE
  5375                           fsr0h	equ	0xFEA
  5376                           fsr0l	equ	0xFE9
  5377                           wreg	equ	0xFE8
  5378                           postinc1	equ	0xFE6
  5379                           postdec1	equ	0xFE5
  5380                           fsr1h	equ	0xFE2
  5381                           fsr1l	equ	0xFE1
  5382                           indf2	equ	0xFDF
  5383                           postinc2	equ	0xFDE
  5384                           fsr2h	equ	0xFDA
  5385                           fsr2l	equ	0xFD9
  5386                           status	equ	0xFD8
  5387                           
  5388 ;; *************** function i2_Servo_In *****************
  5389 ;; Defined at:
  5390 ;;		line 338 in file "space shot.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;		None
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;		None
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  1    wreg      void 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  5404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5408 ;;Total ram usage:        1 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_Resultado
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text28
  5418  001CA4                     __ptext28:
  5419                           	opt stack 0
  5420  001CA4                     i2_Servo_In:
  5421                           	opt stack 22
  5422                           
  5423                           ;space shot.c: 339: for (counter=0; counter<9; counter++){
  5424                           
  5425                           ;incstack = 0
  5426  001CA4  0E00               	movlw	0
  5427  001CA6  6E05               	movwf	_counter,c
  5428  001CA8                     i2l2403:
  5429  001CA8  0E08               	movlw	8
  5430  001CAA  6405               	cpfsgt	_counter,c
  5431  001CAC  D001               	goto	i2l236
  5432  001CAE  0012               	return	
  5433  001CB0                     i2l236:
  5434                           
  5435                           ;space shot.c: 340: PORTEbits.RE0=1;
  5436  001CB0  8084               	bsf	3972,0,c	;volatile
  5437                           
  5438                           ;space shot.c: 341: _delay(2100);
  5439  001CB2  0E03               	movlw	3
  5440  001CB4  6E57               	movwf	??i2_Servo_In& (0+255),c
  5441  001CB6  0EB9               	movlw	185
  5442  001CB8                     i2u408_47:
  5443  001CB8  2EE8               	decfsz	wreg,f,c
  5444  001CBA  D7FE               	goto	i2u408_47
  5445  001CBC  2E57               	decfsz	??i2_Servo_In& (0+255),f,c
  5446  001CBE  D7FC               	goto	i2u408_47
  5447  001CC0  F000               	nop	
  5448                           
  5449                           ;space shot.c: 342: PORTEbits.RE0=0;
  5450  001CC2  9084               	bcf	3972,0,c	;volatile
  5451                           
  5452                           ;space shot.c: 343: _delay(42800);
  5453  001CC4  0E38               	movlw	56
  5454  001CC6  6E57               	movwf	??i2_Servo_In& (0+255),c
  5455  001CC8  0E94               	movlw	148
  5456  001CCA                     i2u409_47:
  5457  001CCA  2EE8               	decfsz	wreg,f,c
  5458  001CCC  D7FE               	goto	i2u409_47
  5459  001CCE  2E57               	decfsz	??i2_Servo_In& (0+255),f,c
  5460  001CD0  D7FC               	goto	i2u409_47
  5461  001CD2  D000               	nop2	
  5462  001CD4  2A05               	incf	_counter,f,c
  5463  001CD6  D7E8               	goto	i2l2403
  5464  001CD8                     __end_ofi2_Servo_In:
  5465                           	opt stack 0
  5466                           pclatu	equ	0xFFB
  5467                           pclath	equ	0xFFA
  5468                           tblptru	equ	0xFF8
  5469                           tblptrh	equ	0xFF7
  5470                           tblptrl	equ	0xFF6
  5471                           tablat	equ	0xFF5
  5472                           prodh	equ	0xFF4
  5473                           prodl	equ	0xFF3
  5474                           intcon	equ	0xFF2
  5475                           intcon2	equ	0xFF1
  5476                           postinc0	equ	0xFEE
  5477                           fsr0h	equ	0xFEA
  5478                           fsr0l	equ	0xFE9
  5479                           wreg	equ	0xFE8
  5480                           postinc1	equ	0xFE6
  5481                           postdec1	equ	0xFE5
  5482                           fsr1h	equ	0xFE2
  5483                           fsr1l	equ	0xFE1
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           fsr2h	equ	0xFDA
  5487                           fsr2l	equ	0xFD9
  5488                           status	equ	0xFD8
  5489                           
  5490 ;; *************** function i2_LCDsetup *****************
  5491 ;; Defined at:
  5492 ;;		line 208 in file "space shot.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5510 ;;Total ram usage:        0 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    2
  5513 ;; This function calls:
  5514 ;;		i2_Command
  5515 ;;		i2_LCDready
  5516 ;;		i2_LongDelay
  5517 ;; This function is called by:
  5518 ;;		_N1
  5519 ;;		_N2
  5520 ;;		_N3
  5521 ;;		_Resultado
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text29
  5526  001D04                     __ptext29:
  5527                           	opt stack 0
  5528  001D04                     i2_LCDsetup:
  5529                           	opt stack 21
  5530                           
  5531                           ;space shot.c: 209: PORTCbits.RC2=0x00;
  5532                           
  5533                           ;incstack = 0
  5534  001D04  9482               	bcf	3970,2,c	;volatile
  5535                           
  5536                           ;space shot.c: 210: LongDelay();
  5537  001D06  EC7F  F00F         	call	i2_LongDelay	;wreg free
  5538                           
  5539                           ;space shot.c: 212: PORTD= 0x38;
  5540  001D0A  0E38               	movlw	56
  5541  001D0C  6E83               	movwf	3971,c	;volatile
  5542                           
  5543                           ;space shot.c: 213: Command ();
  5544  001D0E  ECCB  F00F         	call	i2_Command	;wreg free
  5545                           
  5546                           ;space shot.c: 214: LongDelay();
  5547  001D12  EC7F  F00F         	call	i2_LongDelay	;wreg free
  5548                           
  5549                           ;space shot.c: 216: PORTD= 0x0F;
  5550  001D16  0E0F               	movlw	15
  5551  001D18  6E83               	movwf	3971,c	;volatile
  5552                           
  5553                           ;space shot.c: 217: Command ();
  5554  001D1A  ECCB  F00F         	call	i2_Command	;wreg free
  5555                           
  5556                           ;space shot.c: 218: LCDready ();
  5557  001D1E  EC29  F00F         	call	i2_LCDready	;wreg free
  5558                           
  5559                           ;space shot.c: 220: PORTD= 0x01;
  5560  001D22  0E01               	movlw	1
  5561  001D24  6E83               	movwf	3971,c	;volatile
  5562                           
  5563                           ;space shot.c: 221: Command ();
  5564  001D26  ECCB  F00F         	call	i2_Command	;wreg free
  5565                           
  5566                           ;space shot.c: 222: LCDready();
  5567  001D2A  EC29  F00F         	call	i2_LCDready	;wreg free
  5568  001D2E  0012               	return		;funcret
  5569  001D30                     __end_ofi2_LCDsetup:
  5570                           	opt stack 0
  5571                           pclatu	equ	0xFFB
  5572                           pclath	equ	0xFFA
  5573                           tblptru	equ	0xFF8
  5574                           tblptrh	equ	0xFF7
  5575                           tblptrl	equ	0xFF6
  5576                           tablat	equ	0xFF5
  5577                           prodh	equ	0xFF4
  5578                           prodl	equ	0xFF3
  5579                           intcon	equ	0xFF2
  5580                           intcon2	equ	0xFF1
  5581                           postinc0	equ	0xFEE
  5582                           fsr0h	equ	0xFEA
  5583                           fsr0l	equ	0xFE9
  5584                           wreg	equ	0xFE8
  5585                           postinc1	equ	0xFE6
  5586                           postdec1	equ	0xFE5
  5587                           fsr1h	equ	0xFE2
  5588                           fsr1l	equ	0xFE1
  5589                           indf2	equ	0xFDF
  5590                           postinc2	equ	0xFDE
  5591                           fsr2h	equ	0xFDA
  5592                           fsr2l	equ	0xFD9
  5593                           status	equ	0xFD8
  5594                           
  5595 ;; *************** function i2_LongDelay *****************
  5596 ;; Defined at:
  5597 ;;		line 249 in file "space shot.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;		None
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  LongDelay       1    1[COMRAM] unsigned char 
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      void 
  5604 ;; Registers used:
  5605 ;;		wreg, status,2, status,0
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  5611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5615 ;;Total ram usage:        2 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; This function calls:
  5618 ;;		Nothing
  5619 ;; This function is called by:
  5620 ;;		i2_LCDsetup
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text30
  5625  001EFE                     __ptext30:
  5626                           	opt stack 0
  5627  001EFE                     i2_LongDelay:
  5628                           	opt stack 22
  5629                           
  5630                           ;space shot.c: 250: unsigned char LDelay=0;
  5631                           
  5632                           ;incstack = 0
  5633  001EFE  0E00               	movlw	0
  5634  001F00  6E58               	movwf	i2LongDelay@LDelay,c
  5635  001F02                     i2l2329:
  5636  001F02  2A58               	incf	i2LongDelay@LDelay,f,c
  5637  001F04  0458               	decf	i2LongDelay@LDelay,w,c
  5638  001F06  6E57               	movwf	??i2_LongDelay& (0+255),c
  5639  001F08  0E53               	movlw	83
  5640  001F0A  6457               	cpfsgt	??i2_LongDelay,c
  5641  001F0C  D7FA               	goto	i2l2329
  5642  001F0E  0012               	return	
  5643  001F10                     __end_ofi2_LongDelay:
  5644                           	opt stack 0
  5645                           pclatu	equ	0xFFB
  5646                           pclath	equ	0xFFA
  5647                           tblptru	equ	0xFF8
  5648                           tblptrh	equ	0xFF7
  5649                           tblptrl	equ	0xFF6
  5650                           tablat	equ	0xFF5
  5651                           prodh	equ	0xFF4
  5652                           prodl	equ	0xFF3
  5653                           intcon	equ	0xFF2
  5654                           intcon2	equ	0xFF1
  5655                           postinc0	equ	0xFEE
  5656                           fsr0h	equ	0xFEA
  5657                           fsr0l	equ	0xFE9
  5658                           wreg	equ	0xFE8
  5659                           postinc1	equ	0xFE6
  5660                           postdec1	equ	0xFE5
  5661                           fsr1h	equ	0xFE2
  5662                           fsr1l	equ	0xFE1
  5663                           indf2	equ	0xFDF
  5664                           postinc2	equ	0xFDE
  5665                           fsr2h	equ	0xFDA
  5666                           fsr2l	equ	0xFD9
  5667                           status	equ	0xFD8
  5668                           
  5669 ;; *************** function i2_LCDready *****************
  5670 ;; Defined at:
  5671 ;;		line 224 in file "space shot.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;		None
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;		None
  5676 ;; Return value:  Size  Location     Type
  5677 ;;                  1    wreg      void 
  5678 ;; Registers used:
  5679 ;;		wreg, status,2, status,0, cstack
  5680 ;; Tracked objects:
  5681 ;;		On entry : 0/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  5685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5689 ;;Total ram usage:        0 bytes
  5690 ;; Hardware stack levels used:    1
  5691 ;; Hardware stack levels required when called:    1
  5692 ;; This function calls:
  5693 ;;		i2_ShortDelay
  5694 ;; This function is called by:
  5695 ;;		_N1
  5696 ;;		_N2
  5697 ;;		_N3
  5698 ;;		_Resultado
  5699 ;;		i2_LCDsetup
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           	psect	text31
  5704  001E52                     __ptext31:
  5705                           	opt stack 0
  5706  001E52                     i2_LCDready:
  5707                           	opt stack 21
  5708                           
  5709                           ;space shot.c: 225: TRISD=0xFF;
  5710                           
  5711                           ;incstack = 0
  5712  001E52  6895               	setf	3989,c	;volatile
  5713                           
  5714                           ;space shot.c: 226: PORTCbits.RC0=0;
  5715  001E54  9082               	bcf	3970,0,c	;volatile
  5716                           
  5717                           ;space shot.c: 227: PORTCbits.RC1=1;
  5718  001E56  8282               	bsf	3970,1,c	;volatile
  5719                           
  5720                           ;space shot.c: 228: while (PORTDbits.RD7 == 1)
  5721  001E58  D004               	goto	i2l2317
  5722  001E5A                     i2l178:
  5723                           
  5724                           ;space shot.c: 229: { PORTCbits.RC2=1;
  5725  001E5A  8482               	bsf	3970,2,c	;volatile
  5726                           
  5727                           ;space shot.c: 230: ShortDelay();
  5728  001E5C  ECD9  F00F         	call	i2_ShortDelay	;wreg free
  5729                           
  5730                           ;space shot.c: 231: PORTCbits.RC2=0;
  5731  001E60  9482               	bcf	3970,2,c	;volatile
  5732  001E62                     i2l2317:
  5733  001E62  BE83               	btfsc	3971,7,c	;volatile
  5734  001E64  D7FA               	goto	i2l178
  5735                           
  5736                           ;space shot.c: 232: }
  5737                           ;space shot.c: 233: TRISD=0x00;
  5738  001E66  0E00               	movlw	0
  5739  001E68  6E95               	movwf	3989,c	;volatile
  5740  001E6A  0012               	return		;funcret
  5741  001E6C                     __end_ofi2_LCDready:
  5742                           	opt stack 0
  5743                           pclatu	equ	0xFFB
  5744                           pclath	equ	0xFFA
  5745                           tblptru	equ	0xFF8
  5746                           tblptrh	equ	0xFF7
  5747                           tblptrl	equ	0xFF6
  5748                           tablat	equ	0xFF5
  5749                           prodh	equ	0xFF4
  5750                           prodl	equ	0xFF3
  5751                           intcon	equ	0xFF2
  5752                           intcon2	equ	0xFF1
  5753                           postinc0	equ	0xFEE
  5754                           fsr0h	equ	0xFEA
  5755                           fsr0l	equ	0xFE9
  5756                           wreg	equ	0xFE8
  5757                           postinc1	equ	0xFE6
  5758                           postdec1	equ	0xFE5
  5759                           fsr1h	equ	0xFE2
  5760                           fsr1l	equ	0xFE1
  5761                           indf2	equ	0xFDF
  5762                           postinc2	equ	0xFDE
  5763                           fsr2h	equ	0xFDA
  5764                           fsr2l	equ	0xFD9
  5765                           status	equ	0xFD8
  5766                           
  5767 ;; *************** function i2_Command *****************
  5768 ;; Defined at:
  5769 ;;		line 242 in file "space shot.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;		None
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;		None
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      void 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  5783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5787 ;;Total ram usage:        0 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    1
  5790 ;; This function calls:
  5791 ;;		i2_ShortDelay
  5792 ;; This function is called by:
  5793 ;;		_N1
  5794 ;;		_N2
  5795 ;;		_N3
  5796 ;;		_Resultado
  5797 ;;		i2_LCDsetup
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text32
  5802  001F96                     __ptext32:
  5803                           	opt stack 0
  5804  001F96                     i2_Command:
  5805                           	opt stack 21
  5806                           
  5807                           ;space shot.c: 243: PORTCbits.RC0=0;
  5808                           
  5809                           ;incstack = 0
  5810  001F96  9082               	bcf	3970,0,c	;volatile
  5811                           
  5812                           ;space shot.c: 244: PORTCbits.RC1=0;
  5813  001F98  9282               	bcf	3970,1,c	;volatile
  5814                           
  5815                           ;space shot.c: 245: PORTCbits.RC2=1;
  5816  001F9A  8482               	bsf	3970,2,c	;volatile
  5817                           
  5818                           ;space shot.c: 246: ShortDelay();
  5819  001F9C  ECD9  F00F         	call	i2_ShortDelay	;wreg free
  5820                           
  5821                           ;space shot.c: 247: PORTCbits.RC2=0;
  5822  001FA0  9482               	bcf	3970,2,c	;volatile
  5823  001FA2  0012               	return		;funcret
  5824  001FA4                     __end_ofi2_Command:
  5825                           	opt stack 0
  5826                           pclatu	equ	0xFFB
  5827                           pclath	equ	0xFFA
  5828                           tblptru	equ	0xFF8
  5829                           tblptrh	equ	0xFF7
  5830                           tblptrl	equ	0xFF6
  5831                           tablat	equ	0xFF5
  5832                           prodh	equ	0xFF4
  5833                           prodl	equ	0xFF3
  5834                           intcon	equ	0xFF2
  5835                           intcon2	equ	0xFF1
  5836                           postinc0	equ	0xFEE
  5837                           fsr0h	equ	0xFEA
  5838                           fsr0l	equ	0xFE9
  5839                           wreg	equ	0xFE8
  5840                           postinc1	equ	0xFE6
  5841                           postdec1	equ	0xFE5
  5842                           fsr1h	equ	0xFE2
  5843                           fsr1l	equ	0xFE1
  5844                           indf2	equ	0xFDF
  5845                           postinc2	equ	0xFDE
  5846                           fsr2h	equ	0xFDA
  5847                           fsr2l	equ	0xFD9
  5848                           status	equ	0xFD8
  5849                           
  5850 ;; *************** function i2_LCDdisplay *****************
  5851 ;; Defined at:
  5852 ;;		line 235 in file "space shot.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;		None
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;		None
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  1    wreg      void 
  5859 ;; Registers used:
  5860 ;;		wreg, status,2, status,0, cstack
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  5866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5870 ;;Total ram usage:        0 bytes
  5871 ;; Hardware stack levels used:    1
  5872 ;; Hardware stack levels required when called:    1
  5873 ;; This function calls:
  5874 ;;		i2_ShortDelay
  5875 ;; This function is called by:
  5876 ;;		_N1
  5877 ;;		_N2
  5878 ;;		_N3
  5879 ;;		_Resultado
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text33
  5884  001FA4                     __ptext33:
  5885                           	opt stack 0
  5886  001FA4                     i2_LCDdisplay:
  5887                           	opt stack 22
  5888                           
  5889                           ;space shot.c: 236: PORTCbits.RC0=1;
  5890                           
  5891                           ;incstack = 0
  5892  001FA4  8082               	bsf	3970,0,c	;volatile
  5893                           
  5894                           ;space shot.c: 237: PORTCbits.RC1=0;
  5895  001FA6  9282               	bcf	3970,1,c	;volatile
  5896                           
  5897                           ;space shot.c: 238: PORTCbits.RC2=1;
  5898  001FA8  8482               	bsf	3970,2,c	;volatile
  5899                           
  5900                           ;space shot.c: 239: ShortDelay();
  5901  001FAA  ECD9  F00F         	call	i2_ShortDelay	;wreg free
  5902                           
  5903                           ;space shot.c: 240: PORTCbits.RC2=0;
  5904  001FAE  9482               	bcf	3970,2,c	;volatile
  5905  001FB0  0012               	return		;funcret
  5906  001FB2                     __end_ofi2_LCDdisplay:
  5907                           	opt stack 0
  5908                           pclatu	equ	0xFFB
  5909                           pclath	equ	0xFFA
  5910                           tblptru	equ	0xFF8
  5911                           tblptrh	equ	0xFF7
  5912                           tblptrl	equ	0xFF6
  5913                           tablat	equ	0xFF5
  5914                           prodh	equ	0xFF4
  5915                           prodl	equ	0xFF3
  5916                           intcon	equ	0xFF2
  5917                           intcon2	equ	0xFF1
  5918                           postinc0	equ	0xFEE
  5919                           fsr0h	equ	0xFEA
  5920                           fsr0l	equ	0xFE9
  5921                           wreg	equ	0xFE8
  5922                           postinc1	equ	0xFE6
  5923                           postdec1	equ	0xFE5
  5924                           fsr1h	equ	0xFE2
  5925                           fsr1l	equ	0xFE1
  5926                           indf2	equ	0xFDF
  5927                           postinc2	equ	0xFDE
  5928                           fsr2h	equ	0xFDA
  5929                           fsr2l	equ	0xFD9
  5930                           status	equ	0xFD8
  5931                           
  5932 ;; *************** function i2_ShortDelay *****************
  5933 ;; Defined at:
  5934 ;;		line 254 in file "space shot.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;		None
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  ShortDelay      1    0[COMRAM] unsigned char 
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      void 
  5941 ;; Registers used:
  5942 ;;		wreg, status,2, status,0
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  5948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5952 ;;Total ram usage:        1 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; This function calls:
  5955 ;;		Nothing
  5956 ;; This function is called by:
  5957 ;;		i2_LCDready
  5958 ;;		i2_LCDdisplay
  5959 ;;		i2_Command
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text34
  5964  001FB2                     __ptext34:
  5965                           	opt stack 0
  5966  001FB2                     i2_ShortDelay:
  5967                           	opt stack 21
  5968                           
  5969                           ;space shot.c: 255: unsigned char SDelay=0;
  5970                           
  5971                           ;incstack = 0
  5972  001FB2  0E00               	movlw	0
  5973  001FB4  6E57               	movwf	i2ShortDelay@SDelay,c
  5974  001FB6                     i2l2309:
  5975  001FB6  2A57               	incf	i2ShortDelay@SDelay,f,c
  5976  001FB8  0457               	decf	i2ShortDelay@SDelay,w,c
  5977  001FBA  A4D8               	btfss	status,2,c
  5978  001FBC  0012               	return	
  5979  001FBE  D7FB               	goto	i2l2309
  5980  001FC0                     __end_ofi2_ShortDelay:
  5981                           	opt stack 0
  5982                           pclatu	equ	0xFFB
  5983                           pclath	equ	0xFFA
  5984                           tblptru	equ	0xFF8
  5985                           tblptrh	equ	0xFF7
  5986                           tblptrl	equ	0xFF6
  5987                           tablat	equ	0xFF5
  5988                           prodh	equ	0xFF4
  5989                           prodl	equ	0xFF3
  5990                           intcon	equ	0xFF2
  5991                           intcon2	equ	0xFF1
  5992                           postinc0	equ	0xFEE
  5993                           fsr0h	equ	0xFEA
  5994                           fsr0l	equ	0xFE9
  5995                           wreg	equ	0xFE8
  5996                           postinc1	equ	0xFE6
  5997                           postdec1	equ	0xFE5
  5998                           fsr1h	equ	0xFE2
  5999                           fsr1l	equ	0xFE1
  6000                           indf2	equ	0xFDF
  6001                           postinc2	equ	0xFDE
  6002                           fsr2h	equ	0xFDA
  6003                           fsr2l	equ	0xFD9
  6004                           status	equ	0xFD8
  6005                           
  6006 ;; *************** function ___lbdiv *****************
  6007 ;; Defined at:
  6008 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbdiv.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  dividend        1    wreg     unsigned char 
  6011 ;;  divisor         1    0[COMRAM] unsigned char 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  dividend        1    1[COMRAM] unsigned char 
  6014 ;;  quotient        1    3[COMRAM] unsigned char 
  6015 ;;  counter         1    2[COMRAM] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  1    wreg      unsigned char 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  6025 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6026 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6029 ;;Total ram usage:        4 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_Resultado
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text35
  6039  001C32                     __ptext35:
  6040                           	opt stack 0
  6041  001C32                     ___lbdiv:
  6042                           	opt stack 22
  6043                           
  6044                           ;incstack = 0
  6045                           ;___lbdiv@dividend stored from wreg
  6046  001C32  6E58               	movwf	___lbdiv@dividend,c
  6047  001C34  0E00               	movlw	0
  6048  001C36  6E5A               	movwf	___lbdiv@quotient,c
  6049  001C38  5057               	movf	___lbdiv@divisor,w,c
  6050  001C3A  B4D8               	btfsc	status,2,c
  6051  001C3C  D015               	goto	i2l2373
  6052  001C3E  0E01               	movlw	1
  6053  001C40  6E59               	movwf	___lbdiv@counter,c
  6054  001C42  D003               	goto	i2l2361
  6055  001C44                     i2l2357:
  6056  001C44  90D8               	bcf	status,0,c
  6057  001C46  3657               	rlcf	___lbdiv@divisor,f,c
  6058  001C48  2A59               	incf	___lbdiv@counter,f,c
  6059  001C4A                     i2l2361:
  6060  001C4A  AE57               	btfss	___lbdiv@divisor,7,c
  6061  001C4C  D7FB               	goto	i2l2357
  6062  001C4E                     i2l2363:
  6063  001C4E  90D8               	bcf	status,0,c
  6064  001C50  365A               	rlcf	___lbdiv@quotient,f,c
  6065  001C52  5057               	movf	___lbdiv@divisor,w,c
  6066  001C54  5C58               	subwf	___lbdiv@dividend,w,c
  6067  001C56  A0D8               	btfss	status,0,c
  6068  001C58  D003               	goto	i2l2369
  6069  001C5A  5057               	movf	___lbdiv@divisor,w,c
  6070  001C5C  5E58               	subwf	___lbdiv@dividend,f,c
  6071  001C5E  805A               	bsf	___lbdiv@quotient,0,c
  6072  001C60                     i2l2369:
  6073  001C60  90D8               	bcf	status,0,c
  6074  001C62  3257               	rrcf	___lbdiv@divisor,f,c
  6075  001C64  2E59               	decfsz	___lbdiv@counter,f,c
  6076  001C66  D7F3               	goto	i2l2363
  6077  001C68                     i2l2373:
  6078  001C68  505A               	movf	___lbdiv@quotient,w,c
  6079  001C6A  0012               	return	
  6080  001C6C                     __end_of___lbdiv:
  6081                           	opt stack 0
  6082                           pclatu	equ	0xFFB
  6083                           pclath	equ	0xFFA
  6084                           tblptru	equ	0xFF8
  6085                           tblptrh	equ	0xFF7
  6086                           tblptrl	equ	0xFF6
  6087                           tablat	equ	0xFF5
  6088                           prodh	equ	0xFF4
  6089                           prodl	equ	0xFF3
  6090                           intcon	equ	0xFF2
  6091                           intcon2	equ	0xFF1
  6092                           postinc0	equ	0xFEE
  6093                           fsr0h	equ	0xFEA
  6094                           fsr0l	equ	0xFE9
  6095                           wreg	equ	0xFE8
  6096                           postinc1	equ	0xFE6
  6097                           postdec1	equ	0xFE5
  6098                           fsr1h	equ	0xFE2
  6099                           fsr1l	equ	0xFE1
  6100                           indf2	equ	0xFDF
  6101                           postinc2	equ	0xFDE
  6102                           fsr2h	equ	0xFDA
  6103                           fsr2l	equ	0xFD9
  6104                           status	equ	0xFD8
  6105                           
  6106 ;; *************** function _Reset_One_Shot_B5 *****************
  6107 ;; Defined at:
  6108 ;;		line 518 in file "space shot.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;		None
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;		None
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  1    wreg      void 
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0, cstack
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  6122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6126 ;;Total ram usage:        0 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:    1
  6129 ;; This function calls:
  6130 ;;		_Antibounce
  6131 ;; This function is called by:
  6132 ;;		_N1
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           	psect	text36
  6137  001F10                     __ptext36:
  6138                           	opt stack 0
  6139  001F10                     _Reset_One_Shot_B5:
  6140                           	opt stack 22
  6141                           
  6142                           ;space shot.c: 519: if (PORTAbits.RA4==0)
  6143                           
  6144                           ;incstack = 0
  6145  001F10  B880               	btfsc	3968,4,c	;volatile
  6146  001F12  0012               	return	
  6147                           
  6148                           ;space shot.c: 520: Antibounce();
  6149  001F14  EC01  F00F         	call	_Antibounce	;wreg free
  6150                           
  6151                           ;space shot.c: 523: if (PORTAbits.RA4==0)
  6152                           
  6153                           ;space shot.c: 521: else
  6154                           ;space shot.c: 522: return;
  6155  001F18  B880               	btfsc	3968,4,c	;volatile
  6156  001F1A  0012               	return	
  6157                           
  6158                           ;space shot.c: 524: ons_B5 = 0;
  6159  001F1C  0E00               	movlw	0
  6160  001F1E  6E0B               	movwf	_ons_B5,c
  6161  001F20  0012               	return	
  6162  001F22                     __end_of_Reset_One_Shot_B5:
  6163                           	opt stack 0
  6164                           pclatu	equ	0xFFB
  6165                           pclath	equ	0xFFA
  6166                           tblptru	equ	0xFF8
  6167                           tblptrh	equ	0xFF7
  6168                           tblptrl	equ	0xFF6
  6169                           tablat	equ	0xFF5
  6170                           prodh	equ	0xFF4
  6171                           prodl	equ	0xFF3
  6172                           intcon	equ	0xFF2
  6173                           intcon2	equ	0xFF1
  6174                           postinc0	equ	0xFEE
  6175                           fsr0h	equ	0xFEA
  6176                           fsr0l	equ	0xFE9
  6177                           wreg	equ	0xFE8
  6178                           postinc1	equ	0xFE6
  6179                           postdec1	equ	0xFE5
  6180                           fsr1h	equ	0xFE2
  6181                           fsr1l	equ	0xFE1
  6182                           indf2	equ	0xFDF
  6183                           postinc2	equ	0xFDE
  6184                           fsr2h	equ	0xFDA
  6185                           fsr2l	equ	0xFD9
  6186                           status	equ	0xFD8
  6187                           
  6188 ;; *************** function _Reset_One_Shot_B4 *****************
  6189 ;; Defined at:
  6190 ;;		line 497 in file "space shot.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  6204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6208 ;;Total ram usage:        0 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    1
  6211 ;; This function calls:
  6212 ;;		_Antibounce
  6213 ;; This function is called by:
  6214 ;;		_N1
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text37
  6219  001F22                     __ptext37:
  6220                           	opt stack 0
  6221  001F22                     _Reset_One_Shot_B4:
  6222                           	opt stack 22
  6223                           
  6224                           ;space shot.c: 498: if (PORTAbits.RA3==0)
  6225                           
  6226                           ;incstack = 0
  6227  001F22  B680               	btfsc	3968,3,c	;volatile
  6228  001F24  0012               	return	
  6229                           
  6230                           ;space shot.c: 499: Antibounce();
  6231  001F26  EC01  F00F         	call	_Antibounce	;wreg free
  6232                           
  6233                           ;space shot.c: 502: if (PORTAbits.RA3==0)
  6234                           
  6235                           ;space shot.c: 500: else
  6236                           ;space shot.c: 501: return;
  6237  001F2A  B680               	btfsc	3968,3,c	;volatile
  6238  001F2C  0012               	return	
  6239                           
  6240                           ;space shot.c: 503: ons_B4 = 0;
  6241  001F2E  0E00               	movlw	0
  6242  001F30  6E0A               	movwf	_ons_B4,c
  6243  001F32  0012               	return	
  6244  001F34                     __end_of_Reset_One_Shot_B4:
  6245                           	opt stack 0
  6246                           pclatu	equ	0xFFB
  6247                           pclath	equ	0xFFA
  6248                           tblptru	equ	0xFF8
  6249                           tblptrh	equ	0xFF7
  6250                           tblptrl	equ	0xFF6
  6251                           tablat	equ	0xFF5
  6252                           prodh	equ	0xFF4
  6253                           prodl	equ	0xFF3
  6254                           intcon	equ	0xFF2
  6255                           intcon2	equ	0xFF1
  6256                           postinc0	equ	0xFEE
  6257                           fsr0h	equ	0xFEA
  6258                           fsr0l	equ	0xFE9
  6259                           wreg	equ	0xFE8
  6260                           postinc1	equ	0xFE6
  6261                           postdec1	equ	0xFE5
  6262                           fsr1h	equ	0xFE2
  6263                           fsr1l	equ	0xFE1
  6264                           indf2	equ	0xFDF
  6265                           postinc2	equ	0xFDE
  6266                           fsr2h	equ	0xFDA
  6267                           fsr2l	equ	0xFD9
  6268                           status	equ	0xFD8
  6269                           
  6270 ;; *************** function _Reset_One_Shot_B3 *****************
  6271 ;; Defined at:
  6272 ;;		line 476 in file "space shot.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;		None
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  6286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6290 ;;Total ram usage:        0 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; Hardware stack levels required when called:    1
  6293 ;; This function calls:
  6294 ;;		_Antibounce
  6295 ;; This function is called by:
  6296 ;;		_N1
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text38
  6301  001F34                     __ptext38:
  6302                           	opt stack 0
  6303  001F34                     _Reset_One_Shot_B3:
  6304                           	opt stack 22
  6305                           
  6306                           ;space shot.c: 477: if (PORTAbits.RA2==0)
  6307                           
  6308                           ;incstack = 0
  6309  001F34  B480               	btfsc	3968,2,c	;volatile
  6310  001F36  0012               	return	
  6311                           
  6312                           ;space shot.c: 478: Antibounce();
  6313  001F38  EC01  F00F         	call	_Antibounce	;wreg free
  6314                           
  6315                           ;space shot.c: 481: if (PORTAbits.RA2==0)
  6316                           
  6317                           ;space shot.c: 479: else
  6318                           ;space shot.c: 480: return;
  6319  001F3C  B480               	btfsc	3968,2,c	;volatile
  6320  001F3E  0012               	return	
  6321                           
  6322                           ;space shot.c: 482: ons_B3 = 0;
  6323  001F40  0E00               	movlw	0
  6324  001F42  6E09               	movwf	_ons_B3,c
  6325  001F44  0012               	return	
  6326  001F46                     __end_of_Reset_One_Shot_B3:
  6327                           	opt stack 0
  6328                           pclatu	equ	0xFFB
  6329                           pclath	equ	0xFFA
  6330                           tblptru	equ	0xFF8
  6331                           tblptrh	equ	0xFF7
  6332                           tblptrl	equ	0xFF6
  6333                           tablat	equ	0xFF5
  6334                           prodh	equ	0xFF4
  6335                           prodl	equ	0xFF3
  6336                           intcon	equ	0xFF2
  6337                           intcon2	equ	0xFF1
  6338                           postinc0	equ	0xFEE
  6339                           fsr0h	equ	0xFEA
  6340                           fsr0l	equ	0xFE9
  6341                           wreg	equ	0xFE8
  6342                           postinc1	equ	0xFE6
  6343                           postdec1	equ	0xFE5
  6344                           fsr1h	equ	0xFE2
  6345                           fsr1l	equ	0xFE1
  6346                           indf2	equ	0xFDF
  6347                           postinc2	equ	0xFDE
  6348                           fsr2h	equ	0xFDA
  6349                           fsr2l	equ	0xFD9
  6350                           status	equ	0xFD8
  6351                           
  6352 ;; *************** function _Reset_One_Shot_B2 *****************
  6353 ;; Defined at:
  6354 ;;		line 455 in file "space shot.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  6368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6372 ;;Total ram usage:        0 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:    1
  6375 ;; This function calls:
  6376 ;;		_Antibounce
  6377 ;; This function is called by:
  6378 ;;		_N1
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text39
  6383  001F46                     __ptext39:
  6384                           	opt stack 0
  6385  001F46                     _Reset_One_Shot_B2:
  6386                           	opt stack 22
  6387                           
  6388                           ;space shot.c: 456: if (PORTAbits.RA1==0)
  6389                           
  6390                           ;incstack = 0
  6391  001F46  B280               	btfsc	3968,1,c	;volatile
  6392  001F48  0012               	return	
  6393                           
  6394                           ;space shot.c: 457: Antibounce();
  6395  001F4A  EC01  F00F         	call	_Antibounce	;wreg free
  6396                           
  6397                           ;space shot.c: 460: if (PORTAbits.RA1==0)
  6398                           
  6399                           ;space shot.c: 458: else
  6400                           ;space shot.c: 459: return;
  6401  001F4E  B280               	btfsc	3968,1,c	;volatile
  6402  001F50  0012               	return	
  6403                           
  6404                           ;space shot.c: 461: ons_B2 = 0;
  6405  001F52  0E00               	movlw	0
  6406  001F54  6E08               	movwf	_ons_B2,c
  6407  001F56  0012               	return	
  6408  001F58                     __end_of_Reset_One_Shot_B2:
  6409                           	opt stack 0
  6410                           pclatu	equ	0xFFB
  6411                           pclath	equ	0xFFA
  6412                           tblptru	equ	0xFF8
  6413                           tblptrh	equ	0xFF7
  6414                           tblptrl	equ	0xFF6
  6415                           tablat	equ	0xFF5
  6416                           prodh	equ	0xFF4
  6417                           prodl	equ	0xFF3
  6418                           intcon	equ	0xFF2
  6419                           intcon2	equ	0xFF1
  6420                           postinc0	equ	0xFEE
  6421                           fsr0h	equ	0xFEA
  6422                           fsr0l	equ	0xFE9
  6423                           wreg	equ	0xFE8
  6424                           postinc1	equ	0xFE6
  6425                           postdec1	equ	0xFE5
  6426                           fsr1h	equ	0xFE2
  6427                           fsr1l	equ	0xFE1
  6428                           indf2	equ	0xFDF
  6429                           postinc2	equ	0xFDE
  6430                           fsr2h	equ	0xFDA
  6431                           fsr2l	equ	0xFD9
  6432                           status	equ	0xFD8
  6433                           
  6434 ;; *************** function _Reset_One_Shot_B1 *****************
  6435 ;; Defined at:
  6436 ;;		line 434 in file "space shot.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      void 
  6443 ;; Registers used:
  6444 ;;		wreg, status,2, status,0, cstack
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  6450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6454 ;;Total ram usage:        0 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    1
  6457 ;; This function calls:
  6458 ;;		_Antibounce
  6459 ;; This function is called by:
  6460 ;;		_N1
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text40
  6465  001F58                     __ptext40:
  6466                           	opt stack 0
  6467  001F58                     _Reset_One_Shot_B1:
  6468                           	opt stack 22
  6469                           
  6470                           ;space shot.c: 435: if (PORTAbits.RA0==0)
  6471                           
  6472                           ;incstack = 0
  6473  001F58  B080               	btfsc	3968,0,c	;volatile
  6474  001F5A  0012               	return	
  6475                           
  6476                           ;space shot.c: 436: Antibounce();
  6477  001F5C  EC01  F00F         	call	_Antibounce	;wreg free
  6478                           
  6479                           ;space shot.c: 439: if (PORTAbits.RA0==0)
  6480                           
  6481                           ;space shot.c: 437: else
  6482                           ;space shot.c: 438: return;
  6483  001F60  B080               	btfsc	3968,0,c	;volatile
  6484  001F62  0012               	return	
  6485                           
  6486                           ;space shot.c: 440: ons_B1 = 0;
  6487  001F64  0E00               	movlw	0
  6488  001F66  6E07               	movwf	_ons_B1,c
  6489  001F68  0012               	return	
  6490  001F6A                     __end_of_Reset_One_Shot_B1:
  6491                           	opt stack 0
  6492                           pclatu	equ	0xFFB
  6493                           pclath	equ	0xFFA
  6494                           tblptru	equ	0xFF8
  6495                           tblptrh	equ	0xFF7
  6496                           tblptrl	equ	0xFF6
  6497                           tablat	equ	0xFF5
  6498                           prodh	equ	0xFF4
  6499                           prodl	equ	0xFF3
  6500                           intcon	equ	0xFF2
  6501                           intcon2	equ	0xFF1
  6502                           postinc0	equ	0xFEE
  6503                           fsr0h	equ	0xFEA
  6504                           fsr0l	equ	0xFE9
  6505                           wreg	equ	0xFE8
  6506                           postinc1	equ	0xFE6
  6507                           postdec1	equ	0xFE5
  6508                           fsr1h	equ	0xFE2
  6509                           fsr1l	equ	0xFE1
  6510                           indf2	equ	0xFDF
  6511                           postinc2	equ	0xFDE
  6512                           fsr2h	equ	0xFDA
  6513                           fsr2l	equ	0xFD9
  6514                           status	equ	0xFD8
  6515                           
  6516 ;; *************** function _One_Shot_B5 *****************
  6517 ;; Defined at:
  6518 ;;		line 506 in file "space shot.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;		None
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      void 
  6525 ;; Registers used:
  6526 ;;		wreg, status,2, status,0, cstack
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  6532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6535 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6536 ;;Total ram usage:        1 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; Hardware stack levels required when called:    1
  6539 ;; This function calls:
  6540 ;;		_Antibounce
  6541 ;; This function is called by:
  6542 ;;		_N1
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text41
  6547  001D30                     __ptext41:
  6548                           	opt stack 0
  6549  001D30                     _One_Shot_B5:
  6550                           	opt stack 22
  6551                           
  6552                           ;space shot.c: 507: if (ons_B5 == 1)
  6553                           
  6554                           ;incstack = 0
  6555  001D30  040B               	decf	_ons_B5,w,c
  6556  001D32  B4D8               	btfsc	status,2,c
  6557  001D34  0012               	return	
  6558                           
  6559                           ;space shot.c: 509: Antibounce();
  6560                           
  6561                           ;space shot.c: 508: return;
  6562  001D36  EC01  F00F         	call	_Antibounce	;wreg free
  6563                           
  6564                           ;space shot.c: 510: if (PORTAbits.RA4==1){
  6565  001D3A  A880               	btfss	3968,4,c	;volatile
  6566  001D3C  0012               	return	
  6567                           
  6568                           ;space shot.c: 511: PORTCbits.RC7=1;
  6569  001D3E  8E82               	bsf	3970,7,c	;volatile
  6570                           
  6571                           ;space shot.c: 512: _delay(197000);
  6572  001D40  0E00               	movlw	0
  6573  001D42  6E5A               	movwf	??_One_Shot_B5& (0+255),c
  6574  001D44  0ED7               	movlw	215
  6575  001D46                     i2u410_47:
  6576  001D46  2EE8               	decfsz	wreg,f,c
  6577  001D48  D7FE               	goto	i2u410_47
  6578  001D4A  2E5A               	decfsz	??_One_Shot_B5& (0+255),f,c
  6579  001D4C  D7FC               	goto	i2u410_47
  6580  001D4E  F000               	nop	
  6581                           
  6582                           ;space shot.c: 513: PORTCbits.RC7=0;
  6583  001D50  9E82               	bcf	3970,7,c	;volatile
  6584                           
  6585                           ;space shot.c: 514: counter2++;
  6586  001D52  2A4F               	incf	_counter2,f,c
  6587                           
  6588                           ;space shot.c: 515: ons_B5=0;
  6589  001D54  0E00               	movlw	0
  6590  001D56  6E0B               	movwf	_ons_B5,c
  6591  001D58  0012               	return	
  6592  001D5A                     __end_of_One_Shot_B5:
  6593                           	opt stack 0
  6594                           pclatu	equ	0xFFB
  6595                           pclath	equ	0xFFA
  6596                           tblptru	equ	0xFF8
  6597                           tblptrh	equ	0xFF7
  6598                           tblptrl	equ	0xFF6
  6599                           tablat	equ	0xFF5
  6600                           prodh	equ	0xFF4
  6601                           prodl	equ	0xFF3
  6602                           intcon	equ	0xFF2
  6603                           intcon2	equ	0xFF1
  6604                           postinc0	equ	0xFEE
  6605                           fsr0h	equ	0xFEA
  6606                           fsr0l	equ	0xFE9
  6607                           wreg	equ	0xFE8
  6608                           postinc1	equ	0xFE6
  6609                           postdec1	equ	0xFE5
  6610                           fsr1h	equ	0xFE2
  6611                           fsr1l	equ	0xFE1
  6612                           indf2	equ	0xFDF
  6613                           postinc2	equ	0xFDE
  6614                           fsr2h	equ	0xFDA
  6615                           fsr2l	equ	0xFD9
  6616                           status	equ	0xFD8
  6617                           
  6618 ;; *************** function _One_Shot_B4 *****************
  6619 ;; Defined at:
  6620 ;;		line 485 in file "space shot.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;		None
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;		None
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  1    wreg      void 
  6627 ;; Registers used:
  6628 ;;		wreg, status,2, status,0, cstack
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  6634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6637 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6638 ;;Total ram usage:        1 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    1
  6641 ;; This function calls:
  6642 ;;		_Antibounce
  6643 ;; This function is called by:
  6644 ;;		_N1
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           	psect	text42
  6649  001D5A                     __ptext42:
  6650                           	opt stack 0
  6651  001D5A                     _One_Shot_B4:
  6652                           	opt stack 22
  6653                           
  6654                           ;space shot.c: 486: if (ons_B4 == 1)
  6655                           
  6656                           ;incstack = 0
  6657  001D5A  040A               	decf	_ons_B4,w,c
  6658  001D5C  B4D8               	btfsc	status,2,c
  6659  001D5E  0012               	return	
  6660                           
  6661                           ;space shot.c: 488: Antibounce();
  6662                           
  6663                           ;space shot.c: 487: return;
  6664  001D60  EC01  F00F         	call	_Antibounce	;wreg free
  6665                           
  6666                           ;space shot.c: 489: if (PORTAbits.RA3==1){
  6667  001D64  A680               	btfss	3968,3,c	;volatile
  6668  001D66  0012               	return	
  6669                           
  6670                           ;space shot.c: 490: PORTCbits.RC6=1;
  6671  001D68  8C82               	bsf	3970,6,c	;volatile
  6672                           
  6673                           ;space shot.c: 491: _delay(197000);
  6674  001D6A  0E00               	movlw	0
  6675  001D6C  6E5A               	movwf	??_One_Shot_B4& (0+255),c
  6676  001D6E  0ED7               	movlw	215
  6677  001D70                     i2u411_47:
  6678  001D70  2EE8               	decfsz	wreg,f,c
  6679  001D72  D7FE               	goto	i2u411_47
  6680  001D74  2E5A               	decfsz	??_One_Shot_B4& (0+255),f,c
  6681  001D76  D7FC               	goto	i2u411_47
  6682  001D78  F000               	nop	
  6683                           
  6684                           ;space shot.c: 492: PORTCbits.RC6=0;
  6685  001D7A  9C82               	bcf	3970,6,c	;volatile
  6686                           
  6687                           ;space shot.c: 493: counter2++;
  6688  001D7C  2A4F               	incf	_counter2,f,c
  6689                           
  6690                           ;space shot.c: 494: ons_B4=0;
  6691  001D7E  0E00               	movlw	0
  6692  001D80  6E0A               	movwf	_ons_B4,c
  6693  001D82  0012               	return	
  6694  001D84                     __end_of_One_Shot_B4:
  6695                           	opt stack 0
  6696                           pclatu	equ	0xFFB
  6697                           pclath	equ	0xFFA
  6698                           tblptru	equ	0xFF8
  6699                           tblptrh	equ	0xFF7
  6700                           tblptrl	equ	0xFF6
  6701                           tablat	equ	0xFF5
  6702                           prodh	equ	0xFF4
  6703                           prodl	equ	0xFF3
  6704                           intcon	equ	0xFF2
  6705                           intcon2	equ	0xFF1
  6706                           postinc0	equ	0xFEE
  6707                           fsr0h	equ	0xFEA
  6708                           fsr0l	equ	0xFE9
  6709                           wreg	equ	0xFE8
  6710                           postinc1	equ	0xFE6
  6711                           postdec1	equ	0xFE5
  6712                           fsr1h	equ	0xFE2
  6713                           fsr1l	equ	0xFE1
  6714                           indf2	equ	0xFDF
  6715                           postinc2	equ	0xFDE
  6716                           fsr2h	equ	0xFDA
  6717                           fsr2l	equ	0xFD9
  6718                           status	equ	0xFD8
  6719                           
  6720 ;; *************** function _One_Shot_B3 *****************
  6721 ;; Defined at:
  6722 ;;		line 464 in file "space shot.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;		None
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;		None
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  1    wreg      void 
  6729 ;; Registers used:
  6730 ;;		wreg, status,2, status,0, cstack
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  6736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6740 ;;Total ram usage:        1 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; Hardware stack levels required when called:    1
  6743 ;; This function calls:
  6744 ;;		_Antibounce
  6745 ;; This function is called by:
  6746 ;;		_N1
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           	psect	text43
  6751  001D84                     __ptext43:
  6752                           	opt stack 0
  6753  001D84                     _One_Shot_B3:
  6754                           	opt stack 22
  6755                           
  6756                           ;space shot.c: 465: if (ons_B3 == 1)
  6757                           
  6758                           ;incstack = 0
  6759  001D84  0409               	decf	_ons_B3,w,c
  6760  001D86  B4D8               	btfsc	status,2,c
  6761  001D88  0012               	return	
  6762                           
  6763                           ;space shot.c: 467: Antibounce();
  6764                           
  6765                           ;space shot.c: 466: return;
  6766  001D8A  EC01  F00F         	call	_Antibounce	;wreg free
  6767                           
  6768                           ;space shot.c: 468: if (PORTAbits.RA2==1){
  6769  001D8E  A480               	btfss	3968,2,c	;volatile
  6770  001D90  0012               	return	
  6771                           
  6772                           ;space shot.c: 469: PORTCbits.RC5=1;
  6773  001D92  8A82               	bsf	3970,5,c	;volatile
  6774                           
  6775                           ;space shot.c: 470: _delay(197000);
  6776  001D94  0E00               	movlw	0
  6777  001D96  6E5A               	movwf	??_One_Shot_B3& (0+255),c
  6778  001D98  0ED7               	movlw	215
  6779  001D9A                     i2u412_47:
  6780  001D9A  2EE8               	decfsz	wreg,f,c
  6781  001D9C  D7FE               	goto	i2u412_47
  6782  001D9E  2E5A               	decfsz	??_One_Shot_B3& (0+255),f,c
  6783  001DA0  D7FC               	goto	i2u412_47
  6784  001DA2  F000               	nop	
  6785                           
  6786                           ;space shot.c: 471: PORTCbits.RC5=0;
  6787  001DA4  9A82               	bcf	3970,5,c	;volatile
  6788                           
  6789                           ;space shot.c: 472: counter2++;
  6790  001DA6  2A4F               	incf	_counter2,f,c
  6791                           
  6792                           ;space shot.c: 473: ons_B3=0;
  6793  001DA8  0E00               	movlw	0
  6794  001DAA  6E09               	movwf	_ons_B3,c
  6795  001DAC  0012               	return	
  6796  001DAE                     __end_of_One_Shot_B3:
  6797                           	opt stack 0
  6798                           pclatu	equ	0xFFB
  6799                           pclath	equ	0xFFA
  6800                           tblptru	equ	0xFF8
  6801                           tblptrh	equ	0xFF7
  6802                           tblptrl	equ	0xFF6
  6803                           tablat	equ	0xFF5
  6804                           prodh	equ	0xFF4
  6805                           prodl	equ	0xFF3
  6806                           intcon	equ	0xFF2
  6807                           intcon2	equ	0xFF1
  6808                           postinc0	equ	0xFEE
  6809                           fsr0h	equ	0xFEA
  6810                           fsr0l	equ	0xFE9
  6811                           wreg	equ	0xFE8
  6812                           postinc1	equ	0xFE6
  6813                           postdec1	equ	0xFE5
  6814                           fsr1h	equ	0xFE2
  6815                           fsr1l	equ	0xFE1
  6816                           indf2	equ	0xFDF
  6817                           postinc2	equ	0xFDE
  6818                           fsr2h	equ	0xFDA
  6819                           fsr2l	equ	0xFD9
  6820                           status	equ	0xFD8
  6821                           
  6822 ;; *************** function _One_Shot_B2 *****************
  6823 ;; Defined at:
  6824 ;;		line 443 in file "space shot.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;		None
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;		None
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  1    wreg      void 
  6831 ;; Registers used:
  6832 ;;		wreg, status,2, status,0, cstack
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  6838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6842 ;;Total ram usage:        1 bytes
  6843 ;; Hardware stack levels used:    1
  6844 ;; Hardware stack levels required when called:    1
  6845 ;; This function calls:
  6846 ;;		_Antibounce
  6847 ;; This function is called by:
  6848 ;;		_N1
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text44
  6853  001DAE                     __ptext44:
  6854                           	opt stack 0
  6855  001DAE                     _One_Shot_B2:
  6856                           	opt stack 22
  6857                           
  6858                           ;space shot.c: 444: if (ons_B2 == 1)
  6859                           
  6860                           ;incstack = 0
  6861  001DAE  0408               	decf	_ons_B2,w,c
  6862  001DB0  B4D8               	btfsc	status,2,c
  6863  001DB2  0012               	return	
  6864                           
  6865                           ;space shot.c: 446: Antibounce();
  6866                           
  6867                           ;space shot.c: 445: return;
  6868  001DB4  EC01  F00F         	call	_Antibounce	;wreg free
  6869                           
  6870                           ;space shot.c: 447: if (PORTAbits.RA1==1){
  6871  001DB8  A280               	btfss	3968,1,c	;volatile
  6872  001DBA  0012               	return	
  6873                           
  6874                           ;space shot.c: 448: PORTCbits.RC4=1;
  6875  001DBC  8882               	bsf	3970,4,c	;volatile
  6876                           
  6877                           ;space shot.c: 449: _delay(197000);
  6878  001DBE  0E00               	movlw	0
  6879  001DC0  6E5A               	movwf	??_One_Shot_B2& (0+255),c
  6880  001DC2  0ED7               	movlw	215
  6881  001DC4                     i2u413_47:
  6882  001DC4  2EE8               	decfsz	wreg,f,c
  6883  001DC6  D7FE               	goto	i2u413_47
  6884  001DC8  2E5A               	decfsz	??_One_Shot_B2& (0+255),f,c
  6885  001DCA  D7FC               	goto	i2u413_47
  6886  001DCC  F000               	nop	
  6887                           
  6888                           ;space shot.c: 450: PORTCbits.RC4=0;
  6889  001DCE  9882               	bcf	3970,4,c	;volatile
  6890                           
  6891                           ;space shot.c: 451: counter2++;
  6892  001DD0  2A4F               	incf	_counter2,f,c
  6893                           
  6894                           ;space shot.c: 452: ons_B2=0;
  6895  001DD2  0E00               	movlw	0
  6896  001DD4  6E08               	movwf	_ons_B2,c
  6897  001DD6  0012               	return	
  6898  001DD8                     __end_of_One_Shot_B2:
  6899                           	opt stack 0
  6900                           pclatu	equ	0xFFB
  6901                           pclath	equ	0xFFA
  6902                           tblptru	equ	0xFF8
  6903                           tblptrh	equ	0xFF7
  6904                           tblptrl	equ	0xFF6
  6905                           tablat	equ	0xFF5
  6906                           prodh	equ	0xFF4
  6907                           prodl	equ	0xFF3
  6908                           intcon	equ	0xFF2
  6909                           intcon2	equ	0xFF1
  6910                           postinc0	equ	0xFEE
  6911                           fsr0h	equ	0xFEA
  6912                           fsr0l	equ	0xFE9
  6913                           wreg	equ	0xFE8
  6914                           postinc1	equ	0xFE6
  6915                           postdec1	equ	0xFE5
  6916                           fsr1h	equ	0xFE2
  6917                           fsr1l	equ	0xFE1
  6918                           indf2	equ	0xFDF
  6919                           postinc2	equ	0xFDE
  6920                           fsr2h	equ	0xFDA
  6921                           fsr2l	equ	0xFD9
  6922                           status	equ	0xFD8
  6923                           
  6924 ;; *************** function _One_Shot_B1 *****************
  6925 ;; Defined at:
  6926 ;;		line 422 in file "space shot.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;		None
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1    wreg      void 
  6933 ;; Registers used:
  6934 ;;		wreg, status,2, status,0, cstack
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  6940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6942 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6943 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6944 ;;Total ram usage:        1 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    1
  6947 ;; This function calls:
  6948 ;;		_Antibounce
  6949 ;; This function is called by:
  6950 ;;		_N1
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text45
  6955  001DD8                     __ptext45:
  6956                           	opt stack 0
  6957  001DD8                     _One_Shot_B1:
  6958                           	opt stack 22
  6959                           
  6960                           ;space shot.c: 423: if (ons_B1 == 1)
  6961                           
  6962                           ;incstack = 0
  6963  001DD8  0407               	decf	_ons_B1,w,c
  6964  001DDA  B4D8               	btfsc	status,2,c
  6965  001DDC  0012               	return	
  6966                           
  6967                           ;space shot.c: 425: Antibounce();
  6968                           
  6969                           ;space shot.c: 424: return;
  6970  001DDE  EC01  F00F         	call	_Antibounce	;wreg free
  6971                           
  6972                           ;space shot.c: 426: if (PORTAbits.RA0==1){
  6973  001DE2  A080               	btfss	3968,0,c	;volatile
  6974  001DE4  0012               	return	
  6975                           
  6976                           ;space shot.c: 427: PORTCbits.RC3=1;
  6977  001DE6  8682               	bsf	3970,3,c	;volatile
  6978                           
  6979                           ;space shot.c: 428: _delay(197000);
  6980  001DE8  0E00               	movlw	0
  6981  001DEA  6E5A               	movwf	??_One_Shot_B1& (0+255),c
  6982  001DEC  0ED7               	movlw	215
  6983  001DEE                     i2u414_47:
  6984  001DEE  2EE8               	decfsz	wreg,f,c
  6985  001DF0  D7FE               	goto	i2u414_47
  6986  001DF2  2E5A               	decfsz	??_One_Shot_B1& (0+255),f,c
  6987  001DF4  D7FC               	goto	i2u414_47
  6988  001DF6  F000               	nop	
  6989                           
  6990                           ;space shot.c: 429: PORTCbits.RC3=0;
  6991  001DF8  9682               	bcf	3970,3,c	;volatile
  6992                           
  6993                           ;space shot.c: 430: counter2++;
  6994  001DFA  2A4F               	incf	_counter2,f,c
  6995                           
  6996                           ;space shot.c: 431: ons_B1=0;
  6997  001DFC  0E00               	movlw	0
  6998  001DFE  6E07               	movwf	_ons_B1,c
  6999  001E00  0012               	return	
  7000  001E02                     __end_of_One_Shot_B1:
  7001                           	opt stack 0
  7002                           pclatu	equ	0xFFB
  7003                           pclath	equ	0xFFA
  7004                           tblptru	equ	0xFF8
  7005                           tblptrh	equ	0xFF7
  7006                           tblptrl	equ	0xFF6
  7007                           tablat	equ	0xFF5
  7008                           prodh	equ	0xFF4
  7009                           prodl	equ	0xFF3
  7010                           intcon	equ	0xFF2
  7011                           intcon2	equ	0xFF1
  7012                           postinc0	equ	0xFEE
  7013                           fsr0h	equ	0xFEA
  7014                           fsr0l	equ	0xFE9
  7015                           wreg	equ	0xFE8
  7016                           postinc1	equ	0xFE6
  7017                           postdec1	equ	0xFE5
  7018                           fsr1h	equ	0xFE2
  7019                           fsr1l	equ	0xFE1
  7020                           indf2	equ	0xFDF
  7021                           postinc2	equ	0xFDE
  7022                           fsr2h	equ	0xFDA
  7023                           fsr2l	equ	0xFD9
  7024                           status	equ	0xFD8
  7025                           
  7026 ;; *************** function _Antibounce *****************
  7027 ;; Defined at:
  7028 ;;		line 360 in file "space shot.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;		None
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  L2REG           1    2[COMRAM] unsigned char 
  7033 ;;  L1REG           1    1[COMRAM] unsigned char 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2, status,0
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:   COMRAMhhCOMRAMhhCOMRAMhhCOMRAMhl COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK
      +6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  7043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7044 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7045 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7046 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7047 ;;Total ram usage:        3 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; This function calls:
  7050 ;;		Nothing
  7051 ;; This function is called by:
  7052 ;;		_One_Shot_N1
  7053 ;;		_Reset_One_Shot_N1
  7054 ;;		_One_Shot_N2
  7055 ;;		_Reset_One_Shot_N2
  7056 ;;		_One_Shot_N3
  7057 ;;		_Reset_One_Shot_N3
  7058 ;;		_One_Shot_B1
  7059 ;;		_Reset_One_Shot_B1
  7060 ;;		_One_Shot_B2
  7061 ;;		_Reset_One_Shot_B2
  7062 ;;		_One_Shot_B3
  7063 ;;		_Reset_One_Shot_B3
  7064 ;;		_One_Shot_B4
  7065 ;;		_Reset_One_Shot_B4
  7066 ;;		_One_Shot_B5
  7067 ;;		_Reset_One_Shot_B5
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text46
  7072  001E02                     __ptext46:
  7073                           	opt stack 0
  7074  001E02                     _Antibounce:
  7075                           	opt stack 24
  7076                           
  7077                           ;space shot.c: 361: unsigned char L1REG = 0;
  7078                           
  7079                           ;incstack = 0
  7080  001E02  0E00               	movlw	0
  7081  001E04  6E58               	movwf	Antibounce@L1REG,c
  7082                           
  7083                           ;space shot.c: 362: unsigned char L2REG;
  7084                           ;space shot.c: 363: while(L1REG++ < 13){
  7085  001E06  D004               	goto	i2l2339
  7086  001E08                     i2l2337:
  7087                           
  7088                           ;space shot.c: 364: L2REG = 0;
  7089  001E08  0E00               	movlw	0
  7090  001E0A  6E59               	movwf	Antibounce@L2REG,c
  7091  001E0C                     i2l248:
  7092  001E0C  3E59               	incfsz	Antibounce@L2REG,f,c
  7093  001E0E  D7FE               	goto	i2l248
  7094  001E10                     i2l2339:
  7095  001E10  2A58               	incf	Antibounce@L1REG,f,c
  7096  001E12  0458               	decf	Antibounce@L1REG,w,c
  7097  001E14  6E57               	movwf	??_Antibounce& (0+255),c
  7098  001E16  0E0C               	movlw	12
  7099  001E18  6457               	cpfsgt	??_Antibounce,c
  7100  001E1A  D7F6               	goto	i2l2337
  7101  001E1C  0012               	return	
  7102  001E1E                     __end_of_Antibounce:
  7103                           	opt stack 0
  7104                           pclatu	equ	0xFFB
  7105                           pclath	equ	0xFFA
  7106                           tblptru	equ	0xFF8
  7107                           tblptrh	equ	0xFF7
  7108                           tblptrl	equ	0xFF6
  7109                           tablat	equ	0xFF5
  7110                           prodh	equ	0xFF4
  7111                           prodl	equ	0xFF3
  7112                           intcon	equ	0xFF2
  7113                           intcon2	equ	0xFF1
  7114                           postinc0	equ	0xFEE
  7115                           fsr0h	equ	0xFEA
  7116                           fsr0l	equ	0xFE9
  7117                           wreg	equ	0xFE8
  7118                           postinc1	equ	0xFE6
  7119                           postdec1	equ	0xFE5
  7120                           fsr1h	equ	0xFE2
  7121                           fsr1l	equ	0xFE1
  7122                           indf2	equ	0xFDF
  7123                           postinc2	equ	0xFDE
  7124                           fsr2h	equ	0xFDA
  7125                           fsr2l	equ	0xFD9
  7126                           status	equ	0xFD8
  7127                           
  7128                           	psect	smallconst
  7129  000D00                     __psmallconst:
  7130                           	opt stack 0
  7131  000D00  00                 	db	0
  7132  000D01  00                 	db	0	; dummy byte at the end
  7133  0000                     pclatu	equ	0xFFB
  7134                           pclath	equ	0xFFA
  7135                           tblptru	equ	0xFF8
  7136                           tblptrh	equ	0xFF7
  7137                           tblptrl	equ	0xFF6
  7138                           tablat	equ	0xFF5
  7139                           prodh	equ	0xFF4
  7140                           prodl	equ	0xFF3
  7141                           intcon	equ	0xFF2
  7142                           intcon2	equ	0xFF1
  7143                           postinc0	equ	0xFEE
  7144                           fsr0h	equ	0xFEA
  7145                           fsr0l	equ	0xFE9
  7146                           wreg	equ	0xFE8
  7147                           postinc1	equ	0xFE6
  7148                           postdec1	equ	0xFE5
  7149                           fsr1h	equ	0xFE2
  7150                           fsr1l	equ	0xFE1
  7151                           indf2	equ	0xFDF
  7152                           postinc2	equ	0xFDE
  7153                           fsr2h	equ	0xFDA
  7154                           fsr2l	equ	0xFD9
  7155                           status	equ	0xFD8
  7156                           pclatu	equ	0xFFB
  7157                           pclath	equ	0xFFA
  7158                           tblptru	equ	0xFF8
  7159                           tblptrh	equ	0xFF7
  7160                           tblptrl	equ	0xFF6
  7161                           tablat	equ	0xFF5
  7162                           prodh	equ	0xFF4
  7163                           prodl	equ	0xFF3
  7164                           intcon	equ	0xFF2
  7165                           intcon2	equ	0xFF1
  7166                           postinc0	equ	0xFEE
  7167                           fsr0h	equ	0xFEA
  7168                           fsr0l	equ	0xFE9
  7169                           wreg	equ	0xFE8
  7170                           postinc1	equ	0xFE6
  7171                           postdec1	equ	0xFE5
  7172                           fsr1h	equ	0xFE2
  7173                           fsr1l	equ	0xFE1
  7174                           indf2	equ	0xFDF
  7175                           postinc2	equ	0xFDE
  7176                           fsr2h	equ	0xFDA
  7177                           fsr2l	equ	0xFD9
  7178                           status	equ	0xFD8
  7179                           
  7180                           	psect	rparam
  7181  0000                     pclatu	equ	0xFFB
  7182                           pclath	equ	0xFFA
  7183                           tblptru	equ	0xFF8
  7184                           tblptrh	equ	0xFF7
  7185                           tblptrl	equ	0xFF6
  7186                           tablat	equ	0xFF5
  7187                           prodh	equ	0xFF4
  7188                           prodl	equ	0xFF3
  7189                           intcon	equ	0xFF2
  7190                           intcon2	equ	0xFF1
  7191                           postinc0	equ	0xFEE
  7192                           fsr0h	equ	0xFEA
  7193                           fsr0l	equ	0xFE9
  7194                           wreg	equ	0xFE8
  7195                           postinc1	equ	0xFE6
  7196                           postdec1	equ	0xFE5
  7197                           fsr1h	equ	0xFE2
  7198                           fsr1l	equ	0xFE1
  7199                           indf2	equ	0xFDF
  7200                           postinc2	equ	0xFDE
  7201                           fsr2h	equ	0xFDA
  7202                           fsr2l	equ	0xFD9
  7203                           status	equ	0xFD8
  7204                           
  7205                           	psect	temp
  7206  00001D                     btemp:
  7207                           	opt stack 0
  7208  00001D                     	ds	1
  7209  0000                     int$flags	set	btemp
  7210                           pclatu	equ	0xFFB
  7211                           pclath	equ	0xFFA
  7212                           tblptru	equ	0xFF8
  7213                           tblptrh	equ	0xFF7
  7214                           tblptrl	equ	0xFF6
  7215                           tablat	equ	0xFF5
  7216                           prodh	equ	0xFF4
  7217                           prodl	equ	0xFF3
  7218                           intcon	equ	0xFF2
  7219                           intcon2	equ	0xFF1
  7220                           postinc0	equ	0xFEE
  7221                           fsr0h	equ	0xFEA
  7222                           fsr0l	equ	0xFE9
  7223                           wreg	equ	0xFE8
  7224                           postinc1	equ	0xFE6
  7225                           postdec1	equ	0xFE5
  7226                           fsr1h	equ	0xFE2
  7227                           fsr1l	equ	0xFE1
  7228                           indf2	equ	0xFDF
  7229                           postinc2	equ	0xFDE
  7230                           fsr2h	equ	0xFDA
  7231                           fsr2l	equ	0xFD9
  7232                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMhhhh        9      9       9
    COMRAMhhhl        9      8       9
    COMRAMhhl         6      6       6
    COMRAMhl          6      6       6
    COMRAMl          30     14      28
    BANK0h          129      4       5
    BANK0l            7      0       4
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAMhhhh

    None.

Critical Paths under _IRH in COMRAMhhhh

    _Reset_One_Shot_N3->_Antibounce
    _Reset_One_Shot_N2->_Antibounce
    _Reset_One_Shot_N1->_Antibounce
    _One_Shot_N3->_N3
    _One_Shot_N2->_N2
    _rand->___lmul
    _Resultado->___lbdiv
    i2_LCDsetup->i2_LongDelay
    i2_LCDready->i2_ShortDelay
    i2_Command->i2_ShortDelay
    i2_LCDdisplay->i2_ShortDelay
    _Reset_One_Shot_B5->_Antibounce
    _Reset_One_Shot_B4->_Antibounce
    _Reset_One_Shot_B3->_Antibounce
    _Reset_One_Shot_B2->_Antibounce
    _Reset_One_Shot_B1->_Antibounce
    _One_Shot_B5->_Antibounce
    _One_Shot_B4->_Antibounce
    _One_Shot_B3->_Antibounce
    _One_Shot_B2->_Antibounce
    _One_Shot_B1->_Antibounce

Critical Paths under _main in COMRAMhhhl

    None.

Critical Paths under _IRH in COMRAMhhhl

    _N3->___awmod
    _N2->___awmod
    _N1->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _main in COMRAMhhl

    None.

Critical Paths under _IRH in COMRAMhhl

    _One_Shot_N3->_N3
    _N3->___awmod
    _One_Shot_N2->_N2
    _N2->___awmod
    _One_Shot_N1->_N1
    _N1->___awmod

Critical Paths under _main in COMRAMhl

    None.

Critical Paths under _IRH in COMRAMhl

    _One_Shot_N1->_N1

Critical Paths under _main in COMRAMl

    None.

Critical Paths under _IRH in COMRAMl

    None.

Critical Paths under _main in BANK0h

    _main->_Dificultad
    _main->_Menu1
    _main->_Menu2
    _main->_Menu3
    _LCDsetup->_LongDelay
    _Command->_ShortDelay
    _LCDready->_ShortDelay
    _LCDdisplay->_ShortDelay

Critical Paths under _IRH in BANK0h

    None.

Critical Paths under _main in BANK0l

    None.

Critical Paths under _IRH in BANK0l

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IRH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IRH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IRH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IRH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IRH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IRH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IRH in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IRH in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IRH in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IRH in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IRH in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IRH in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2029
                         _Bienvenido
                         _Dificultad
                           _LCDsetup
                              _Menu1
                              _Menu2
                              _Menu3
                           _Servo_In
 ---------------------------------------------------------------------------------
 (1) _Servo_In                                             1     1      0       0
                                              0 BANK0h     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Menu3                                                2     2      0     433
                                              2 BANK0h     2     2      0
                            _Command
                         _LCDdisplay
                           _LCDready
                           _LCDsetup
 ---------------------------------------------------------------------------------
 (1) _Menu2                                                2     2      0     399
                                              2 BANK0h     2     2      0
                         _LCDdisplay
                           _LCDready
                           _LCDsetup
 ---------------------------------------------------------------------------------
 (1) _Menu1                                                2     2      0     399
                                              2 BANK0h     2     2      0
                         _LCDdisplay
                           _LCDready
                           _LCDsetup
 ---------------------------------------------------------------------------------
 (1) _Dificultad                                           2     2      0     399
                                              2 BANK0h     2     2      0
                         _LCDdisplay
                           _LCDready
                           _LCDsetup
 ---------------------------------------------------------------------------------
 (2) _LCDsetup                                             0     0      0     102
                            _Command
                           _LCDready
                          _LongDelay
 ---------------------------------------------------------------------------------
 (3) _LongDelay                                            2     2      0      34
                                              0 BANK0h     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Command                                              0     0      0      34
                         _ShortDelay
 ---------------------------------------------------------------------------------
 (1) _Bienvenido                                           2     2      0     297
                                              1 BANK0h     2     2      0
                         _LCDdisplay
                           _LCDready
 ---------------------------------------------------------------------------------
 (3) _LCDready                                             0     0      0      34
                         _ShortDelay
 ---------------------------------------------------------------------------------
 (2) _LCDdisplay                                           0     0      0      34
                         _ShortDelay
 ---------------------------------------------------------------------------------
 (4) _ShortDelay                                           1     1      0      34
                                              0 BANK0h     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _IRH                                                 14    14      0    8922
                                              0 COMRAMl   14    14      0
                        _One_Shot_N1
                        _One_Shot_N2
                        _One_Shot_N3
                  _Reset_One_Shot_N1
                  _Reset_One_Shot_N2
                  _Reset_One_Shot_N3
 ---------------------------------------------------------------------------------
 (6) _Reset_One_Shot_N3                                    0     0      0      46
                         _Antibounce
 ---------------------------------------------------------------------------------
 (6) _Reset_One_Shot_N2                                    0     0      0      46
                         _Antibounce
 ---------------------------------------------------------------------------------
 (6) _Reset_One_Shot_N1                                    0     0      0      46
                         _Antibounce
 ---------------------------------------------------------------------------------
 (6) _One_Shot_N3                                          0     0      0    2497
                         _Antibounce
                                 _N3
 ---------------------------------------------------------------------------------
 (7) _N3                                                  13    13      0    2451
                                              8 COMRAMh    1     1      0
                                              4 COMRAMh    2     2      0
                          _Resultado
                            ___awmod
                               _rand
                              _srand
                          i2_Command
                       i2_LCDdisplay
                         i2_LCDready
                         i2_LCDsetup
 ---------------------------------------------------------------------------------
 (6) _One_Shot_N2                                          0     0      0    2497
                         _Antibounce
                                 _N2
 ---------------------------------------------------------------------------------
 (7) _N2                                                  10    10      0    2451
                                              8 COMRAMh    1     1      0
                                              4 COMRAMh    2     2      0
                          _Resultado
                            ___awmod
                               _rand
                              _srand
                          i2_Command
                       i2_LCDdisplay
                         i2_LCDready
                         i2_LCDsetup
 ---------------------------------------------------------------------------------
 (6) _One_Shot_N1                                          0     0      0    3790
                         _Antibounce
                                 _N1
 ---------------------------------------------------------------------------------
 (7) _N1                                                   8     8      0    3744
                                              4 COMRAMh    2     2      0
                                              0 COMRAMh    6     6      0
                        _One_Shot_B1
                        _One_Shot_B2
                        _One_Shot_B3
                        _One_Shot_B4
                        _One_Shot_B5
                  _Reset_One_Shot_B1
                  _Reset_One_Shot_B2
                  _Reset_One_Shot_B3
                  _Reset_One_Shot_B4
                  _Reset_One_Shot_B5
                          _Resultado
                            ___awmod
                               _rand
                              _srand
                          i2_Command
                       i2_LCDdisplay
                         i2_LCDready
                         i2_LCDsetup
 ---------------------------------------------------------------------------------
 (8) _srand                                                2     0      2     151
                                              0 COMRAMh    2     0      2
 ---------------------------------------------------------------------------------
 (8) _rand                                                 2     0      2     238
                                              4 COMRAMh    2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     238
                                              0 COMRAMh    8     0      8
                                              0 COMRAMh    4     4      0
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     812
                                              6 COMRAMh    2     2      0
                                              0 COMRAMh    4     0      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (8) _Resultado                                            2     2      0     612
                                              4 COMRAMh    2     2      0
                            ___lbdiv
                          i2_Command
                       i2_LCDdisplay
                         i2_LCDready
                         i2_LCDsetup
                         i2_Servo_In
 ---------------------------------------------------------------------------------
 (9) i2_Servo_In                                           1     1      0       0
                                              0 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_LCDsetup                                           0     0      0      69
                          i2_Command
                         i2_LCDready
                        i2_LongDelay
 ---------------------------------------------------------------------------------
 (9) i2_LongDelay                                          2     2      0      23
                                              0 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_LCDready                                           0     0      0      23
                       i2_ShortDelay
 ---------------------------------------------------------------------------------
 (9) i2_Command                                            0     0      0      23
                       i2_ShortDelay
 ---------------------------------------------------------------------------------
 (8) i2_LCDdisplay                                         0     0      0      23
                       i2_ShortDelay
 ---------------------------------------------------------------------------------
 (10) i2_ShortDelay                                        1     1      0      23
                                              0 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (9) ___lbdiv                                              4     3      1     248
                                              0 COMRAMh    4     3      1
 ---------------------------------------------------------------------------------
 (8) _Reset_One_Shot_B5                                    0     0      0      46
                         _Antibounce
 ---------------------------------------------------------------------------------
 (8) _Reset_One_Shot_B4                                    0     0      0      46
                         _Antibounce
 ---------------------------------------------------------------------------------
 (8) _Reset_One_Shot_B3                                    0     0      0      46
                         _Antibounce
 ---------------------------------------------------------------------------------
 (8) _Reset_One_Shot_B2                                    0     0      0      46
                         _Antibounce
 ---------------------------------------------------------------------------------
 (8) _Reset_One_Shot_B1                                    0     0      0      46
                         _Antibounce
 ---------------------------------------------------------------------------------
 (8) _One_Shot_B5                                          1     1      0      46
                                              3 COMRAMh    1     1      0
                         _Antibounce
 ---------------------------------------------------------------------------------
 (8) _One_Shot_B4                                          1     1      0      46
                                              3 COMRAMh    1     1      0
                         _Antibounce
 ---------------------------------------------------------------------------------
 (8) _One_Shot_B3                                          1     1      0      46
                                              3 COMRAMh    1     1      0
                         _Antibounce
 ---------------------------------------------------------------------------------
 (8) _One_Shot_B2                                          1     1      0      46
                                              3 COMRAMh    1     1      0
                         _Antibounce
 ---------------------------------------------------------------------------------
 (8) _One_Shot_B1                                          1     1      0      46
                                              3 COMRAMh    1     1      0
                         _Antibounce
 ---------------------------------------------------------------------------------
 (7) _Antibounce                                           3     3      0      46
                                              0 COMRAMh    3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bienvenido
     _LCDdisplay
       _ShortDelay
     _LCDready
       _ShortDelay
   _Dificultad
     _LCDdisplay
       _ShortDelay
     _LCDready
       _ShortDelay
     _LCDsetup
       _Command
         _ShortDelay
       _LCDready
         _ShortDelay
       _LongDelay
   _LCDsetup
     _Command
       _ShortDelay
     _LCDready
       _ShortDelay
     _LongDelay
   _Menu1
     _LCDdisplay
       _ShortDelay
     _LCDready
       _ShortDelay
     _LCDsetup
       _Command
         _ShortDelay
       _LCDready
         _ShortDelay
       _LongDelay
   _Menu2
     _LCDdisplay
       _ShortDelay
     _LCDready
       _ShortDelay
     _LCDsetup
       _Command
         _ShortDelay
       _LCDready
         _ShortDelay
       _LongDelay
   _Menu3
     _Command
       _ShortDelay
     _LCDdisplay
       _ShortDelay
     _LCDready
       _ShortDelay
     _LCDsetup
       _Command
         _ShortDelay
       _LCDready
         _ShortDelay
       _LongDelay
   _Servo_In

 _IRH (ROOT)
   _One_Shot_N1
     _Antibounce
     _N1
       _One_Shot_B1
         _Antibounce
       _One_Shot_B2
         _Antibounce
       _One_Shot_B3
         _Antibounce
       _One_Shot_B4
         _Antibounce
       _One_Shot_B5
         _Antibounce
       _Reset_One_Shot_B1
         _Antibounce
       _Reset_One_Shot_B2
         _Antibounce
       _Reset_One_Shot_B3
         _Antibounce
       _Reset_One_Shot_B4
         _Antibounce
       _Reset_One_Shot_B5
         _Antibounce
       _Resultado
         ___lbdiv
         i2_Command
           i2_ShortDelay
         i2_LCDdisplay
           i2_ShortDelay
         i2_LCDready
           i2_ShortDelay
         i2_LCDsetup
           i2_Command
             i2_ShortDelay
           i2_LCDready
             i2_ShortDelay
           i2_LongDelay
         i2_Servo_In
       ___awmod
         _rand (ARG)
           ___lmul
       _rand
         ___lmul
       _srand
       i2_Command
         i2_ShortDelay
       i2_LCDdisplay
         i2_ShortDelay
       i2_LCDready
         i2_ShortDelay
       i2_LCDsetup
         i2_Command
           i2_ShortDelay
         i2_LCDready
           i2_ShortDelay
         i2_LongDelay
   _One_Shot_N2
     _Antibounce
     _N2
       _Resultado
         ___lbdiv
         i2_Command
           i2_ShortDelay
         i2_LCDdisplay
           i2_ShortDelay
         i2_LCDready
           i2_ShortDelay
         i2_LCDsetup
           i2_Command
             i2_ShortDelay
           i2_LCDready
             i2_ShortDelay
           i2_LongDelay
         i2_Servo_In
       ___awmod
         _rand (ARG)
           ___lmul
       _rand
         ___lmul
       _srand
       i2_Command
         i2_ShortDelay
       i2_LCDdisplay
         i2_ShortDelay
       i2_LCDready
         i2_ShortDelay
       i2_LCDsetup
         i2_Command
           i2_ShortDelay
         i2_LCDready
           i2_ShortDelay
         i2_LongDelay
   _One_Shot_N3
     _Antibounce
     _N3
       _Resultado
         ___lbdiv
         i2_Command
           i2_ShortDelay
         i2_LCDdisplay
           i2_ShortDelay
         i2_LCDready
           i2_ShortDelay
         i2_LCDsetup
           i2_Command
             i2_ShortDelay
           i2_LCDready
             i2_ShortDelay
           i2_LongDelay
         i2_Servo_In
       ___awmod
         _rand (ARG)
           ___lmul
       _rand
         ___lmul
       _srand
       i2_Command
         i2_ShortDelay
       i2_LCDdisplay
         i2_ShortDelay
       i2_LCDready
         i2_ShortDelay
       i2_LCDsetup
         i2_Command
           i2_ShortDelay
         i2_LCDready
           i2_ShortDelay
         i2_LongDelay
   _Reset_One_Shot_N1
     _Antibounce
   _Reset_One_Shot_N2
     _Antibounce
   _Reset_One_Shot_N3
     _Antibounce

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhh       C81      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      39        0.0%
BANK12             100      0       0      40        0.0%
BITBANK11          100      0       0      37        0.0%
BANK11             100      0       0      38        0.0%
BITBANK10          100      0       0      34        0.0%
BANK10             100      0       0      35        0.0%
BITBANK9           100      0       0      32        0.0%
BANK9              100      0       0      33        0.0%
BITBANK8           100      0       0      30        0.0%
BANK8              100      0       0      31        0.0%
BITBANK7           100      0       0      28        0.0%
BANK7              100      0       0      29        0.0%
BITBANK6           100      0       0      26        0.0%
BANK6              100      0       0      27        0.0%
BITBANK5           100      0       0      24        0.0%
BANK5              100      0       0      25        0.0%
BITBANK4           100      0       0      22        0.0%
BANK4              100      0       0      23        0.0%
BITBANK3           100      0       0      20        0.0%
BANK3              100      0       0      21        0.0%
BITBANK2           100      0       0      18        0.0%
BANK2              100      0       0      19        0.0%
BITBANK1           100      0       0      16        0.0%
BANK1              100      0       0      17        0.0%
BANK0h              81      4       5      14        3.9%
BITBANK0h           81      0       0      12        0.0%
BIGRAMl             1F      0       0      47        0.0%
BITCOMRAMl          1E      0       0       4        0.0%
COMRAMl             1E      E      1C       9       93.3%
BIGRAMhhhhl          9      0       0      43        0.0%
COMRAMhhhh           9      9       9       5      100.0%
BITCOMRAMhhhh        9      0       0       0        0.0%
BIGRAMhhhl           9      0       0      44        0.0%
COMRAMhhhl           9      8       9       6      100.0%
BITCOMRAMhhhl        9      0       0       1        0.0%
BIGRAMhhhhhl         7      0       0      42        0.0%
BITBANK0l            7      0       0      13        0.0%
BANK0l               7      0       4      15       57.1%
BIGRAMhhl            6      0       0      45        0.0%
COMRAMhhl            6      6       6       7      100.0%
BITCOMRAMhhl         6      0       0       2        0.0%
BIGRAMhl             6      0       0      46        0.0%
COMRAMhl             6      6       6       8      100.0%
BITCOMRAMhl          6      0       0       3        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0      10        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      36        0.0%
DATA                 0      0      43      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Nov 26 16:40:40 2016

                i2_Servo_In 1CA4             __p_NIVEL1_const 0040             __p_NIVEL2_const 0050  
           __p_NIVEL3_const 0060                           _t 0087                          _N1 0D02  
                        _N2 142E                          _N3 1274                i2_ShortDelay 1FB2  
                       ?_N1 000F                         ?_N2 000F                         ?_N3 000F  
                       l236 1C78                         l178 1E40                         _IRH 0008  
              ___awmod@sign 004E                         prod 000FF3                         wreg 000FE8  
               ?_LCDdisplay 0057                        ??_N1 003E                        ??_N2 005F  
                      ??_N3 005F                        N1@n1 002F                        N2@n2 003F  
                      N3@n3 003F                __CFG_LVP$OFF 000000                        ?_IRH 0057  
              __CFG_WDT$OFF 000000                        l3603 1A58                        l3621 1ABC  
                      l3615 1AAC                        l3543 1E24                        l3631 1934  
                      l3711 186E                        l3617 1AB2                        l3713 1874  
                      l3539 1EBA                        l3635 193E                        l3731 16DA  
                      l3803 1A32                        l3557 1E48                        l3653 19A2  
                      l3717 187E                        l3805 1A38                        l3647 1992  
                      l3663 18A2                        l3743 172E                        l3727 16D0  
                      l3649 1998                        l3681 1906                        l3753 1756  
                      l3745 1734                        l3809 1A42                        l3667 18AC  
                      l3587 1C70                        l3685 1910                        l3749 173E  
                      l3599 1A4E                        l3679 1900                        l3695 1810  
                      l3699 181A                        _LATA 000F89                        _LATB 000F8A  
                      _LATC 000F8B                        _LATD 000F8C                        _LATE 000F8D  
                      u3807 1AC4                        u3747 1C82                        u3757 1C96  
                      u3767 1746                        u3777 1886                        u3787 1918  
                      u3797 19AA                        _main 19BA                        _rand 1B44  
                      fsr0h 000FEA                        fsr1h 000FE2                        fsr0l 000FE9  
                      fsr2h 000FDA                        fsr1l 000FE1                        indf2 000FDF  
                      fsr2l 000FD9                        btemp 001D                        pclat 000FFA  
                _Bienvenido 1A48                        prodh 000FF4                        prodl 000FF3  
                      start 0016                 ?i2_LCDready 0057                 ?i2_LCDsetup 0057  
           __pbssCOMRAMhhhl 004F               __CFG_MCLRE$ON 000000                  _Dificultad 1928  
           __end_of_Command 1F88                ___param_bank 000010                       ??_IRH 000F  
          __pcstackCOMRAMhl 002A                       ?_main 0057            __end_of_LCDready 1E52  
                     ?_rand 004B             __end_of___lbdiv 1C6C             __end_of___awmod 1B44  
                     _CMCON 000FB4            __end_of_LCDsetup 1D04                       i2l236 1CB0  
                     i2l248 1E0C                       i2l178 1E5A                       i2l370 0F88  
                     i2l371 1236                       i2l372 1008                       i2l381 1176  
                     i2l375 1082                       i2l378 10FC                  _Antibounce 1E02  
                     _PORTA 000F80                       _PORTB 000F81                       _PORTC 000F82  
                     _PORTD 000F83                       _PORTE 000F84                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95         ___lmul@multiplicand 005B  
                     _Menu1 1896                       _Menu2 1804                       _Menu3 16C4  
        __size_ofi2_Command 000E                       _randx 007F                       _score 0001  
             ??_One_Shot_B1 005A               ??_One_Shot_B2 005A               ??_One_Shot_B3 005A  
             ??_One_Shot_B4 005A               ??_One_Shot_B5 005A               ??_One_Shot_N1 005F  
             ??_One_Shot_N2 0060               ??_One_Shot_N3 0060                       _srand 1F6A  
                     tablat 000FF5                       status 000FD8             ___lbdiv@divisor 0057  
           ___lbdiv@counter 0059             __initialization 1BF2                 ?i2_Servo_In 0057  
       __size_of_LCDdisplay 000E                __end_of_main 1A48                __end_of_rand 1B9C  
         __pcstackCOMRAMhhl 003A                      ??_main 0087                      ??_rand 005F  
                    N1@test 002C                      N2@test 003E                      N3@test 003E  
             __activetblptr 000002            __end_of_Servo_In 1CA4                      ?_Menu1 000F  
                    ?_Menu2 000F                      ?_Menu3 000F         __size_ofi2_LCDready 001A  
       __size_ofi2_LCDsetup 002C                      _ADCON1 000FC1                      ?_srand 0057  
                    _INICIO 0020                      i2l3003 1438                      i2l3021 1490  
                    i2l3103 15D0                      i2l3007 1440                      i2l3025 1498  
                    i2l2403 1CA8                      i2l3043 1506                      i2l3051 1522  
                    i2l3019 148C                      i2l3211 13FC                      i2l3203 13E6  
                    i2l3123 1286                      i2l2309 1FB6                      i2l2317 1E62  
                    i2l3037 14DC                      i2l3029 14AC                      i2l3141 12DE  
                    i2l2343 1BAC                      i2l3071 1562                      i2l3055 1530  
                    i2l3063 154C                      i2l3047 150E                      i2l3207 13F4  
                    i2l3215 1410                      i2l3135 12D2                      i2l3119 127E  
                    i2l2337 1E08                      i2l2361 1C4A                      i2l2329 1F02  
                    i2l3153 1322                      i2l3145 12F2                      i2l3137 12D6  
                    i2l2339 1E10                      i2l2363 1C4E                      i2l2347 1BC0  
                    i2l3091 15AE                      i2l3083 158C                      i2l3067 155A  
                    i2l3075 1576                      i2l3059 1538                      i2l3171 1376  
                    i2l3163 1354                      i2l3219 1416                      i2l2357 1C44  
                    i2l2373 1C68                      i2l2613 169E                      i2l2623 16C0  
                    i2l2711 0D64                      i2l3095 15B6                      i2l3079 1584  
                    i2l3087 15A0                      i2l3183 13A0                      i2l3191 13BC  
                    i2l3175 137E                      i2l3159 134C                      i2l3167 1368  
                    i2l2369 1C60                      i2l2609 1696                      i2l2651 1B22  
                    i2l2643 1B02                      i2l2635 1AE8                      i2l2803 0EC0  
                    i2l2731 0DB8                      i2l2715 0D6C                      i2l3099 15CA  
                    i2l3195 13CA                      i2l3187 13A8                      i2l3179 1392  
                    i2l2573 15FA                      i2l2645 1B0A                      i2l2821 0EF8  
                    i2l2709 0D60                      i2l2591 1652                      i2l2647 1B0E  
                    i2l2655 1B2C                      i2l2639 1AF4                      i2l2751 0E0C  
                    i2l2735 0DC0                      i2l2719 0D80                      i2l3199 13D2  
                    i2l3535 17C6                      i2l3527 17B6                      i2l3519 17A6  
                    i2l2585 1646                      i2l2569 15F2                      i2l2817 0EF0  
                    i2l2825 0F0C                      i2l2729 0DB4                      i2l2595 165A  
                    i2l2659 1B3A                      i2l2843 0F44                      i2l2755 0E14  
                    i2l2861 0F80                      i2l2773 0E58                      i2l2781 0E74  
                    i2l2693 0D0C                      i2l2951 11F0                      i2l2839 0F3C  
                    i2l2847 0F58                      i2l2759 0E28                      i2l2881 1004  
                    i2l2777 0E60                      i2l2697 0D14                      i2l2955 11F6  
                    i2l2795 0EA4                      i2l2859 0F7C                      i2l2965 1212  
                    i2l2799 0EAC                      i2l2969 121A                      i2l2987 125C  
                    _NIVEL1 0040                      _NIVEL2 0050                      _NIVEL3 0060  
                    _OSCCON 000FD3                   ??_Command 0084           __end_of_RESULTADO 0081  
               ?_Bienvenido 000F         __end_of_One_Shot_B1 1E02         __end_of_One_Shot_B2 1DD8  
       __end_of_One_Shot_B3 1DAE         __end_of_One_Shot_B4 1D84         __end_of_One_Shot_B5 1D5A  
       __end_of_One_Shot_N1 1EB4         __end_of_One_Shot_N2 1E9C         __end_of_One_Shot_N3 1E84  
        __size_of_LongDelay 001A                 ?_Dificultad 000F                  Resultado@R 005C  
                    ___lmul 1B9C                   ??___lbdiv 0058                   ??___awmod 005F  
         __end_ofi2_Command 1FA4                  _ShortDelay 1EB4                      _ons_B1 0007  
                    _ons_B2 0008                      _ons_B3 0009                      _ons_B4 000A  
                    _ons_B5 000B                      clear_0 1C1C                      _ons_N1 000C  
                    _ons_N2 000D                      _ons_N3 000E             ___awmod@divisor 003C  
           ___awmod@counter 004D                __pdataBANK0l 007F                 ?_Antibounce 0057  
        __size_of_Resultado 00DC                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8               ?i2_LCDdisplay 0057  
                    srand@x 0057          __end_of_DIFICULTAD 003C         __size_ofi2_Servo_In 0034  
          ___lbdiv@dividend 0058                ?i2_LongDelay 0057                  __accesstop 0060  
   __end_of__initialization 1C24             __CFG_PBADEN$OFF 000000               ___rparam_used 000001  
              __pbssCOMRAMl 0001                   ?_LCDready 000F                   ?_LCDsetup 000F  
            __pcstackBANK0h 0083               __end_of_Menu1 1928               __end_of_Menu2 1896  
             __end_of_Menu3 1764               __end_of_srand 1F7A                  __end_of_N1 1274  
                __end_of_N2 15E8                  __end_of_N3 142E            ___lbdiv@quotient 005A  
            ??i2_LCDdisplay 0058         __size_of_Bienvenido 008C           __end_of_LongDelay 1E38  
                   ??_Menu1 0085                     ??_Menu2 0085                     ??_Menu3 0085  
              ??_LCDdisplay 0084          __pcstackCOMRAMhhhh 0057          __pcstackCOMRAMhhhl 0047  
       __size_of_Dificultad 0092                     ??_srand 0059                 _One_Shot_B1 1DD8  
               _One_Shot_B2 1DAE                 _One_Shot_B3 1D84                 _One_Shot_B4 1D5A  
               _One_Shot_B5 1D30                 _One_Shot_N1 1E9C                 _One_Shot_N2 1E84  
               _One_Shot_N3 1E6C                ??i2_LCDready 0058           __end_of_Resultado 16C4  
                ??_LCDready 0084                ??i2_LCDsetup 0059                  ??_LCDsetup 0085  
       __size_of_Antibounce 001C                   ?_Servo_In 000F                     ?___lmul 0057  
        __end_of_LCDdisplay 1F96                 ?_ShortDelay 000F              ___lmul@product 0047  
          ShortDelay@SDelay 0083          __end_ofi2_LCDready 1E6C          __end_ofi2_LCDsetup 1D30  
         _Reset_One_Shot_B1 1F58           _Reset_One_Shot_B2 1F46           _Reset_One_Shot_B3 1F34  
         _Reset_One_Shot_B4 1F22           _Reset_One_Shot_B5 1F10           _Reset_One_Shot_N1 1EEC  
         _Reset_One_Shot_N2 1EDA           _Reset_One_Shot_N3 1EC8                     Menu1@n1 0086  
                   Menu2@n2 0086                     Menu3@n3 0086                  _myRAMarray 000020  
        ?_Reset_One_Shot_B1 0057          ?_Reset_One_Shot_B2 0057          ?_Reset_One_Shot_B3 0057  
        ?_Reset_One_Shot_B4 0057          ?_Reset_One_Shot_B5 0057          ?_Reset_One_Shot_N1 000F  
        ?_Reset_One_Shot_N2 000F          ?_Reset_One_Shot_N3 000F                     _Command 1F7A  
                   __Hparam 0000                     __Lparam 0000         ??_Reset_One_Shot_B1 005A  
       ??_Reset_One_Shot_B2 005A         ??_Reset_One_Shot_B3 005A         ??_Reset_One_Shot_B4 005A  
       ??_Reset_One_Shot_B5 005A         ??_Reset_One_Shot_N1 005A         ??_Reset_One_Shot_N2 005A  
       ??_Reset_One_Shot_N3 005A                ??i2_Servo_In 0057                  ??_Servo_In 0083  
                   ___lbdiv 1C32             __size_of___lmul 0056                     ___awmod 1AD4  
              __psmallconst 0D00                     _acierto 0004                     __pcinit 1BF2  
                   __ramtop 0D00                     __ptext0 19BA                     __ptext1 1C6C  
                   __ptext2 16C4                     __ptext3 1804                     __ptext4 1896  
                   __ptext5 1928                     __ptext6 1CD8                     __ptext7 1E1E  
                   __ptext8 1F7A                     __ptext9 1A48                __size_of_IRH 17FC  
                   _counter 0005            ___awmod@dividend 003A   __end_of_Reset_One_Shot_B1 1F6A  
 __end_of_Reset_One_Shot_B2 1F58   __end_of_Reset_One_Shot_B3 1F46   __end_of_Reset_One_Shot_B4 1F34  
 __end_of_Reset_One_Shot_B5 1F22   __end_of_Reset_One_Shot_N1 1EFE   __end_of_Reset_One_Shot_N2 1EEC  
 __end_of_Reset_One_Shot_N3 1EDA              __pintcode_body 1764        end_of_initialization 1C24  
        __end_ofi2_Servo_In 1CD8         __size_of_ShortDelay 0014               __Lmediumconst 0000  
                   int_func 1764        __size_ofi2_LongDelay 0012                ??_Bienvenido 0084  
              ??_Dificultad 0085        __end_ofi2_LCDdisplay 1FB2                   _RESULTADO 0070  
                   postdec1 000FE5                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE                   _PORTAbits 000F80                   _PORTBbits 000F81  
                 _PORTCbits 000F82                   _PORTDbits 000F83                   _PORTEbits 000F84  
                 i2_Command 1F96                ??_Antibounce 0057                   _TRISAbits 000F92  
                 _TRISEbits 000F96          __end_of_Bienvenido 1AD4          __end_of_Dificultad 19BA  
            __end_of_INICIO 002B              __end_of_NIVEL1 0048              __end_of_NIVEL2 0058  
            __end_of_NIVEL3 006A           i2LongDelay@LDelay 0058          __end_of_Antibounce 1E1E  
         __size_of_LCDready 001A             __pcstackCOMRAMl 000F           __size_of_LCDsetup 002C  
       _NIVEL1_absconstaddr 000040               __pidataBANK0l 1FC0              __end_of___lmul 1BF2  
             ?i2_ShortDelay 0057                  ?i2_Command 0057         start_initialization 1BF2  
               __end_of_IRH 1804  __size_of_Reset_One_Shot_B1 0012  __size_of_Reset_One_Shot_B2 0012  
__size_of_Reset_One_Shot_B3 0012  __size_of_Reset_One_Shot_B4 0012  __size_of_Reset_One_Shot_B5 0012  
__size_of_Reset_One_Shot_N1 0012  __size_of_Reset_One_Shot_N2 0012  __size_of_Reset_One_Shot_N3 0012  
                 _LongDelay 1E1E                ?_One_Shot_B1 0057                ?_One_Shot_B2 0057  
              ?_One_Shot_B3 0057                ?_One_Shot_B4 0057                ?_One_Shot_B5 0057  
              ?_One_Shot_N1 000F                ?_One_Shot_N2 000F                ?_One_Shot_N3 000F  
    _RESULTADO_absconstaddr 000070            __CFG_OSC$IRCIO67 000000                    ??___lmul 005F  
                 _Resultado 15E8              ??i2_ShortDelay 0057                ??_ShortDelay 0083  
         __size_of_Servo_In 0038                 __pbssBANK0h 0087                  ?_LongDelay 000F  
     __size_ofi2_LCDdisplay 000E                    ?_Command 000F          __end_of_ShortDelay 1EC8  
                 __pintcode 0008                  ?_Resultado 000F                    ?___lbdiv 0057  
                  ?___awmod 003A         _NIVEL2_absconstaddr 000050         __p_DIFICULTAD_const 0030  
               ??i2_Command 0058                 __smallconst 0D00              __size_of_Menu1 0092  
            __size_of_Menu2 0092              __size_of_Menu3 00A0                i2_LCDdisplay 1FA4  
        i2ShortDelay@SDelay 0057              __size_of_srand 0010                 __size_of_N1 0572  
               __size_of_N2 01BA                 __size_of_N3 01BA     _DIFICULTAD_absconstaddr 000030  
                  _LCDready 1E38                    _LCDsetup 1CD8                    i2u400_47 0FD0  
                  i2u401_47 1050                    i2u410_47 1D46                    i2u402_47 10CA  
                  i2u411_47 1D70                    i2u403_47 1144                    i2u412_47 1D9A  
                  i2u404_47 11BE                    i2u413_47 1DC4                    i2u405_47 1224  
                  i2u414_47 1DEE                    i2u406_47 1252                    i2u407_47 1660  
                  i2u408_47 1CB8                    i2u409_47 1CCA                    i2u381_47 12E4  
                  i2u390_47 1568                    i2u382_47 135A                    i2u391_47 1592  
                  i2u383_47 1384                    i2u392_47 15BC                    i2u384_47 13AE  
                  i2u393_47 0D72                    i2u385_47 13D8                    i2u394_47 0E1A  
                  i2u386_47 1402                    i2u395_47 0E66                    i2u387_47 149E  
                  i2u396_47 0EB2                    i2u388_47 1514                    i2u397_47 0EFE  
                  i2u389_47 153E                    i2u398_47 0F4A                    i2u399_47 0F6E  
                  _RCONbits 000FD0                 _myRAMarray2 000030                 _myRAMarray3 000040  
               _myRAMarray4 000050                 _myRAMarray5 000060                 _myRAMarray6 000070  
         ___lmul@multiplier 0057                 _INTCON2bits 000FF1               ??i2_LongDelay 0057  
                 copy_data0 1C06                 ??_LongDelay 0083        __end_ofi2_ShortDelay 1FC0  
      __size_of_One_Shot_B1 002A        __size_of_One_Shot_B2 002A        __size_of_One_Shot_B3 002A  
      __size_of_One_Shot_B4 002A        __size_of_One_Shot_B5 002A        __size_of_One_Shot_N1 0018  
      __size_of_One_Shot_N2 0018        __size_of_One_Shot_N3 0018         _INICIO_absconstaddr 000020  
          __size_of_Command 000E                    __Hrparam 0000                  _DIFICULTAD 0030  
                  __Lrparam 0000                 Bienvenido@x 0085                    _Servo_In 1C6C  
               ??_Resultado 005B         _NIVEL3_absconstaddr 000060            __size_of___lbdiv 003A  
          __size_of___awmod 0070             __p_INICIO_const 0020                 Dificultad@y 0086  
                  __ptext10 1E38                    __ptext11 1F88                    __ptext20 142E  
                  __ptext12 1EB4                    __ptext21 1E9C                    __ptext30 1EFE  
                  __ptext22 0D02                    __ptext14 1EC8                    __ptext31 1E52  
                  __ptext23 1F6A                    __ptext15 1EDA                    __ptext40 1F58  
                  __ptext32 1F96                    __ptext24 1B44                    __ptext16 1EEC  
                  __ptext41 1D30                    __ptext33 1FA4                    __ptext25 1B9C  
                  __ptext17 1E6C                    __ptext42 1D5A                    __ptext34 1FB2  
                  __ptext26 1AD4                    __ptext18 1274                    __ptext43 1D84  
                  __ptext35 1C32                    __ptext27 15E8                    __ptext19 1E84  
                  __ptext44 1DAE                    __ptext36 1F10                    __ptext28 1CA4  
                  __ptext45 1DD8                    __ptext37 1F22                    __ptext29 1D04  
                  __ptext46 1E02                    __ptext38 1F34                    __ptext39 1F46  
           LongDelay@LDelay 0084                    _counter2 004F               __size_of_main 008E  
             __size_of_rand 0058                    _intentos 0006             Antibounce@L1REG 0058  
       __end_ofi2_LongDelay 1F10             Antibounce@L2REG 0059                  _CVRCONbits 000FB5  
                  int$flags 001D                  _INTCONbits 000FF2                  _LCDdisplay 1F88  
                  intlevel2 0000                  i2_LCDready 1E52                  i2_LCDsetup 1D04  
               N1@secuencia 002A             N1@secuencia_gen 002D       __size_ofi2_ShortDelay 000E  
        __p_RESULTADO_const 0070                 i2_LongDelay 1EFE  
